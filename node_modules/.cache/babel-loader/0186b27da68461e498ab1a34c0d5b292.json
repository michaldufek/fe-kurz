{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js!/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/research/optimization/ParameterSweep.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/research/optimization/ParameterSweep.vue","mtime":1596179406920},{"path":"/home/dufek/Documents/gitlab/frs-apps/.babelrc","mtime":1576496397055},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5zcGxpdCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBEYXRlcGlja2VyIGZyb20gJ3Z1ZWpzLWRhdGVwaWNrZXInOwppbXBvcnQgRmFuY3lUYWJsZSBmcm9tICdAL2N1c3RvbS9jb21wb25lbnRzL1RhYmxlcy9GYW5jeVRhYmxlJzsKaW1wb3J0IEZhbmN5Q2hhcnQgZnJvbSAnQC9jdXN0b20vY29tcG9uZW50cy9DaGFydHMvRmFuY3lDaGFydCc7CmltcG9ydCBoZWxwZXIgZnJvbSAnQC9jdXN0b20vYXNzZXRzL2pzL2hlbHBlcic7IC8vIGltcG9ydCBjb25zdGFudHMgZnJvbSAnQC9jdXN0b20vYXNzZXRzL2pzL2NvbnN0YW50cyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgRGF0ZXBpY2tlcjogRGF0ZXBpY2tlciwKICAgIEZhbmN5VGFibGU6IEZhbmN5VGFibGUsCiAgICBGYW5jeUNoYXJ0OiBGYW5jeUNoYXJ0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc3RvcmVLZXk6ICdyZXNlYXJjaC5vcHRpbWl6YXRpb24ucGFyYW1ldGVyU3dlZXAnLAogICAgICBiYWNrdGVzdHNOYW1lczogW10sCiAgICAgIHNlbGVjdGVkQmFja3Rlc3Q6IG51bGwsCiAgICAgIHByb2ZpdFRhcmdldDogewogICAgICAgIGNoZWNrZWQ6IHRydWUsCiAgICAgICAgZnJvbTogbnVsbCwKICAgICAgICB0bzogbnVsbCwKICAgICAgICBzdGVwOiBudWxsCiAgICAgIH0sCiAgICAgIHN0b3BMb3NzOiB7CiAgICAgICAgY2hlY2tlZDogdHJ1ZSwKICAgICAgICBmcm9tOiBudWxsLAogICAgICAgIHRvOiBudWxsLAogICAgICAgIHN0ZXA6IG51bGwKICAgICAgfSwKICAgICAgcGVyaW9kOiB7CiAgICAgICAgZnJvbTogbnVsbCwKICAgICAgICB0bzogbnVsbAogICAgICB9LAogICAgICBlc3RpbWF0ZWQ6ICc1LjUgaG91cnMnLAogICAgICB3YXJuRXN0aW1hdGVkOiBmYWxzZSwKICAgICAgcnVubmluZzogZmFsc2UsCiAgICAgIHVwZGF0ZUtleTogMAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBidE5hbWVzRmlsdGVyZWQ6IGZ1bmN0aW9uIGJ0TmFtZXNGaWx0ZXJlZCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiB0aGlzLnNlbGVjdGVkQmFja3Rlc3QgPyB0aGlzLmJhY2t0ZXN0c05hbWVzLmZpbHRlcihmdW5jdGlvbiAoYnQpIHsKICAgICAgICByZXR1cm4gYnQuaWQgIT09IF90aGlzLnNlbGVjdGVkQmFja3Rlc3QuaWQ7CiAgICAgIH0pIDogdGhpcy5iYWNrdGVzdHNOYW1lczsKICAgIH0sCiAgICBkYXRlRm9ybWF0OiBmdW5jdGlvbiBkYXRlRm9ybWF0KCkgewogICAgICByZXR1cm4gInl5eXktTU0tZGQiOwogICAgfSwKICAgIHJ1blRleHQ6IGZ1bmN0aW9uIHJ1blRleHQoKSB7CiAgICAgIHJldHVybiB0aGlzLnJ1bm5pbmcgPyB0aGlzLiR0KHRoaXMuc3RvcmVLZXkgKyAnLnN0b3AnKSA6IHRoaXMuJHQodGhpcy5zdG9yZUtleSArICcucnVuJyk7IC8vIHJldHVybiB0aGlzLnJ1bm5pbmcgPyB0aGlzLiR0KCdyZXNlYXJjaC5zdG9wJykgOiB0aGlzLiR0KHRoaXMuc3RvcmVLZXkgKyAnLnJ1bicpCiAgICB9IC8vIHRhYmxlSW50ZXJ2YWwoKSB7CiAgICAvLyAgICAgcmV0dXJuIGNvbnN0YW50cy5pbnRlcnZhbHMuZmVhdEVuZ1JlbG9hZAogICAgLy8gfQoKICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXREYXRhOiBmdW5jdGlvbiBpbml0RGF0YSgpIHsKICAgICAgdmFyIF9oZWxwZXIkZ2V0QmFja3Rlc3RzTiA9IGhlbHBlci5nZXRCYWNrdGVzdHNOYW1lcyh0aGlzLiRzdG9yZSwgdGhpcy5zdG9yZUtleSwgdGhpcy51cGRhdGVLZXkpOwoKICAgICAgdGhpcy5iYWNrdGVzdHNOYW1lcyA9IF9oZWxwZXIkZ2V0QmFja3Rlc3RzTi5iYWNrdGVzdHNOYW1lczsKICAgICAgdGhpcy5zZWxlY3RlZEJhY2t0ZXN0ID0gX2hlbHBlciRnZXRCYWNrdGVzdHNOLnNlbGVjdGVkQmFja3Rlc3Q7CiAgICAgIHRoaXMudXBkYXRlS2V5ID0gX2hlbHBlciRnZXRCYWNrdGVzdHNOLnVwZGF0ZUtleTsKICAgICAgdmFyIHNwbGl0dGVkID0gdGhpcy5lc3RpbWF0ZWQuc3BsaXQoJyAnKTsKICAgICAgdGhpcy53YXJuRXN0aW1hdGVkID0gdGhpcy5lc3RpbWF0ZWQgJiYgc3BsaXR0ZWRbMF0gPiA1ICYmIHNwbGl0dGVkWzFdID09PSAnaG91cnMnOwogICAgfSwKICAgIHJ1bkNsaWNrOiBmdW5jdGlvbiBydW5DbGljaygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBpZiAodGhpcy5ydW5uaW5nKSB7CiAgICAgICAgdGhpcy5zdG9wKCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaWYgKHRoaXMud2FybkVzdGltYXRlZCkgewogICAgICAgICAgdGhpcy4kY29uZmlybSh0aGlzLiR0KHRoaXMuc3RvcmVLZXkgKyAnLmVzdGltYXRlZFRpbWUnKSArICcgJyArIHRoaXMuJHQodGhpcy5zdG9yZUtleSArICcuY29uZmlybUVzdGltYXRlZCcpKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgX3RoaXMyLnJ1bigpOwogICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKCkge30pOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5ydW4oKTsKICAgICAgfQogICAgfSwKICAgIHNhdmVDbGljazogZnVuY3Rpb24gc2F2ZUNsaWNrKCkge30sCiAgICBydW46IGZ1bmN0aW9uIHJ1bigpIHsKICAgICAgdGhpcy5ydW5uaW5nID0gdHJ1ZTsgLy8gbGV0IGRhdGEgPSB7fQogICAgICAvLyBpZiAodGhpcy5wZXJpb2QuZnJvbSkgewogICAgICAvLyAgICAgZGF0YVsnc3RhcnRfZGF0ZSddID0gdGhpcy5wZXJpb2QuZnJvbQogICAgICAvLyB9CiAgICAgIC8vIGlmICh0aGlzLnBlcmlvZC50bykgewogICAgICAvLyAgICAgZGF0YVsnZmluaXNoX2RhdGUnXSA9IHRoaXMucGVyaW9kLnRvCiAgICAgIC8vIH0KICAgICAgLy8gaWYgKHRoaXMucHJvZml0VGFyZ2V0LmNoZWNrZWQpIHsKICAgICAgLy8gICAgIGlmICh0aGlzLnByb2ZpdFRhcmdldC5mcm9tKSB7CiAgICAgIC8vICAgICAgICAgZGF0YVsncHJvZml0X3Rha2Vfc3RhcnQnXSA9IHRoaXMucHJvZml0VGFyZ2V0LmZyb20KICAgICAgLy8gICAgIH0KICAgICAgLy8gICAgIGlmICh0aGlzLnByb2ZpdFRhcmdldC50bykgewogICAgICAvLyAgICAgICAgIGRhdGFbJ3Byb2ZpdF90YWtlX3N0b3AnXSA9IHRoaXMucHJvZml0VGFyZ2V0LnRvCiAgICAgIC8vICAgICB9CiAgICAgIC8vICAgICBpZiAodGhpcy5wcm9maXRUYXJnZXQuc3RlcCkgewogICAgICAvLyAgICAgICAgIGRhdGFbJ3Byb2ZpdF90YWtlX3N0ZXAnXSA9IHRoaXMucHJvZml0VGFyZ2V0LnN0ZXAKICAgICAgLy8gICAgIH0KICAgICAgLy8gICAgIC8vICJwcm9maXRfdGFrZV91bml0IjogIlVTRCIsCiAgICAgIC8vIH0KICAgICAgLy8gaWYgKHRoaXMuc3RvcExvc3MuY2hlY2tlZCkgewogICAgICAvLyAgICAgaWYgKHRoaXMuc3RvcExvc3MuZnJvbSkgewogICAgICAvLyAgICAgICAgIGRhdGFbJ3N0b3BfbG9zc19zdGFydCddID0gdGhpcy5zdG9wTG9zcy5mcm9tCiAgICAgIC8vICAgICB9CiAgICAgIC8vICAgICBpZiAodGhpcy5zdG9wTG9zcy50bykgewogICAgICAvLyAgICAgICAgIGRhdGFbJ3N0b3BfbG9zc19zdG9wJ10gPSB0aGlzLnN0b3BMb3NzLnRvCiAgICAgIC8vICAgICB9CiAgICAgIC8vICAgICBpZiAodGhpcy5zdG9wTG9zcy5zdGVwKSB7CiAgICAgIC8vICAgICAgICAgZGF0YVsnc3RvcF9sb3NzX3N0ZXAnXSA9IHRoaXMuc3RvcExvc3Muc3RlcAogICAgICAvLyAgICAgfQogICAgICAvLyAgICAgLy8gInN0b3BfbG9zc191bml0IjogIlVTRCIKICAgICAgLy8gfQogICAgICAvLyAvLyAib3JpZ2luX3Jlc3VsdCI6IDAsCiAgICAgIC8vIHRoaXMuJGh0dHAKICAgICAgLy8gLnBvc3QoY29uc3RhbnRzLnVybHMuZmVhdEVuZy5zd2VlcFJlcXVlc3QsIGRhdGEpCiAgICAgIC8vIC50aGVuKF8gPT4gdGhpcy5ydW5uaW5nID0gdHJ1ZSkKICAgICAgLy8gLmNhdGNoKGVycm9yID0+IHsKICAgICAgLy8gICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgLy8gICAgIGlmIChlcnJvci5tZXNzYWdlID09PSBjb25zdGFudHMuc3RyaW5ncy5uZXR3b3JrRXJyb3IpIHsKICAgICAgLy8gICAgICAgICBoZWxwZXIubm90aWZ5QXVkaW8odGhpcywgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Nvbm5lY3Rpb25Mb3N0JyksICdkYW5nZXInLCB0aGlzLmVycm9yVGl0bGUpCiAgICAgIC8vICAgICB9CiAgICAgIC8vIH0pCiAgICB9LAogICAgc3RvcDogZnVuY3Rpb24gc3RvcCgpIHsKICAgICAgdGhpcy5ydW5uaW5nID0gZmFsc2U7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5pbml0RGF0YSgpOwogIH0sCiAgd2F0Y2g6IHsKICAgIHNlbGVjdGVkQmFja3Rlc3Q6IGZ1bmN0aW9uIHNlbGVjdGVkQmFja3Rlc3QodmFsKSB7CiAgICAgIGhlbHBlci51cGRhdGVTdG9yZSh0aGlzLiRzdG9yZSwgJ3NlbGVjdGVkQmFja3Rlc3QnLCB2YWwsIHRoaXMuc3RvcmVLZXkpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["ParameterSweep.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n\n    <div class=\"row\">\n        <!-- select backtest -->\n        <span style=\"float: left; margin: 8px 15px 30px 30px\">{{ $t(storeKey + '.selectBacktest') }}</span>\n        <base-dropdown class=\"dd\" \n                        menu-classes=\"dropdown-black\" \n                        title-classes=\"btn btn-secondary\"\n                        :title=\"selectedBacktest ? selectedBacktest.name : null\"\n                        style=\"width: 20%\">\n            <ul style=\"list-style-type: none;\">\n                <li v-for=\"bt in btNamesFiltered\" :key=\"bt.id\">            \n                    <a class=\"dropdown-item\" \n                        @click=\"selectBacktest(bt)\" \n                        href=\"#\">\n                        {{ bt.name }}\n                    </a>\n                </li>\n            </ul>\n        </base-dropdown>    \n    </div>\n\n    <div class=\"row\">\n        <!-- parameters checkboxes       -->\n        <card class=\"col-lg-3 col-12 container\">\n            <h4>{{ $t(storeKey + '.parameters') }}</h4>\n            <base-checkbox v-model=\"profitTarget.checked\">\n                {{ $t(storeKey + '.profitTarget') }}\n            </base-checkbox>\n            <base-checkbox v-model=\"stopLoss.checked\">\n                {{ $t(storeKey + '.stopLoss') }}\n            </base-checkbox>\n        </card>\n\n        <!-- date pickers -->\n        <card class=\"col-lg-3 col-12 container\">\n            <h4>{{ $t(storeKey + '.period') }}</h4>\n            <div class=\"controls\">\n                <table class=\"table tablesorter\">\n                    <tbody>\n                        <tr>\n                            <!-- <slot :row=\"item\"> -->\n                            <td class=\"fullpicker\" style=\"border-top: 0px;\">\n                                {{ $t('research.from') }}<br>\n                                <datepicker v-model=\"period.from\" \n                                            :clear-button=\"true\" \n                                            :format=\"dateFormat\" \n                                            :placeholder=\"$t('research.pickDate')\" />\n                            </td>\n                            <!-- </slot> -->\n                        </tr>\n                        <tr>\n                            <!-- <slot :row=\"item\"> -->\n                            <td class=\"fullpicker\" style=\"border-top: 0px;\">\n                                {{ $t('research.to') }}<br>\n                                <datepicker v-model=\"period.to\" \n                                            :clear-button=\"true\" \n                                            :format=\"dateFormat\" \n                                            :placeholder=\"$t('research.pickDate')\" />\n                            </td>\n                            <!-- </slot> -->\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </card>\n\n        <!-- Profit Target range -->\n        <card v-if=\"profitTarget.checked\" class=\"col-lg-3 col-md-12 container\">\n            <h4>{{ $t(storeKey + '.profitTarget') + ' ' + $t(storeKey + '.range') }}</h4>\n\n            <table>\n                <tr>\n                    <td style=\"width: 50%\">\n                        <p>{{ $t('research.from') }}</p>\n                    </td>\n                    <td>\n                        <base-input alternative\n                                    type=\"text\"\n                                    v-model=\"profitTarget.from\"\n                                    :placeholder=\"$t('number')\">\n                        </base-input>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <p>{{ $t('research.to') }}</p>\n                    </td>\n                    <td>\n                        <base-input alternative\n                                    type=\"text\"\n                                    v-model=\"profitTarget.to\"\n                                    :placeholder=\"$t('number')\">\n                        </base-input>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <p>{{ $t(storeKey + '.step') }}</p>\n                    </td>\n                    <td>\n                        <base-input alternative\n                                    type=\"text\"\n                                    v-model=\"profitTarget.step\"\n                                    :placeholder=\"$t('number')\">\n                        </base-input>\n                    </td>\n                </tr>\n            </table>\n        </card>\n\n        <!-- Stop Loss range -->\n        <card v-if=\"stopLoss.checked\" class=\"col-lg-3 col-md-12 container\">\n            <h4>{{ $t(storeKey + '.stopLoss') + ' ' + $t(storeKey + '.range') }}</h4>\n\n            <table>\n                <tr>\n                    <td style=\"width: 50%\">\n                        <p>{{ $t('research.from') }}</p>\n                    </td>\n                    <td>\n                        <base-input alternative\n                                    type=\"text\"\n                                    v-model=\"stopLoss.from\"\n                                    :placeholder=\"$t('number')\">\n                        </base-input>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <p>{{ $t('research.to') }}</p>\n                    </td>\n                    <td>\n                        <base-input alternative\n                                    type=\"text\"\n                                    v-model=\"stopLoss.to\"\n                                    :placeholder=\"$t('number')\">\n                        </base-input>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <p>{{ $t(storeKey + '.step') }}</p>\n                    </td>\n                    <td>\n                        <base-input alternative\n                                    type=\"text\"\n                                    v-model=\"stopLoss.step\"\n                                    :placeholder=\"$t('number')\">\n                        </base-input>\n                    </td>\n                </tr>\n            </table>\n        </card>\n\n        <!-- estimated time of run -->\n\n    </div>\n    <!-- run button -->\n    <div class=\"row\">\n    <div class=\"col-12 flex-stretch\" style=\"margin-bottom:1em; text-align:center;\">\n        <div class=\"flex-middle\">\n            <h4 :class=\"[ warnEstimated ? 'warning' : 'noWarning' ]\">{{ $t(storeKey + '.estimatedTime') + ' ' + estimated + ' .' }}</h4>\n            <base-button native-type=\"submit\" type=\"secondary\" @click=\"runClick\" style=\"margin-right: auto; margin-left:auto;\">{{ runText }}</base-button>\n        </div>\n    </div>\n    </div>\n\n    <div class=\"row\">\n        <!-- results table -->\n        <div class=\"col-lg-8 col-md-12\">\n            <fancy-table :title=\"$t(storeKey + '.results.title')\"\n                        :showTitle=\"true\"\n                        :columns=\"$t(storeKey + '.results.columns')\">\n                        <!-- :interval=\"tableInterval\" > -->\n            </fancy-table>\n            <!-- save button -->\n            <base-button native-type=\"submit\" type=\"secondary\" @click=\"saveClick\">{{ $t('research.save') }}</base-button>\n        </div>\n\n        <!-- results chart -->\n        <div class=\"col-lg-3 col-md-12 container\">\n            <fancy-chart :title=\"$t(storeKey + '.results.chart')\" />\n        </div>\n    </div>\n\n</div>\n</template>\n<script>\nimport Datepicker from 'vuejs-datepicker';\nimport FancyTable from '@/custom/components/Tables/FancyTable';\nimport FancyChart from '@/custom/components/Charts/FancyChart';\n\nimport helper from '@/custom/assets/js/helper';\n// import constants from '@/custom/assets/js/constants';\n\n\nexport default {\n    components: {  \n      Datepicker,\n      FancyTable,\n      FancyChart \n    },\n\n    data() {\n        return {\n            storeKey: 'research.optimization.parameterSweep',\n\n            backtestsNames: [],\n            selectedBacktest: null,\n            profitTarget: {\n                checked: true,\n                from: null,\n                to: null,\n                step: null\n            },\n            stopLoss: {\n                checked: true,\n                from: null,\n                to: null,\n                step: null\n            },\n            period: {\n                from: null,\n                to: null\n            },\n\n            estimated: '5.5 hours',\n            warnEstimated: false,\n            running: false,\n\n            updateKey: 0\n        }\n    },\n\n    computed: {\n        btNamesFiltered() {\n            return this.selectedBacktest ? this.backtestsNames.filter(bt => bt.id !== this.selectedBacktest.id) : this.backtestsNames\n        },\n\n        dateFormat() {\n            return \"yyyy-MM-dd\"\n        },\n\n        runText() {\n            return this.running ? this.$t(this.storeKey + '.stop') : this.$t(this.storeKey + '.run')\n            // return this.running ? this.$t('research.stop') : this.$t(this.storeKey + '.run')\n        },\n\n        // tableInterval() {\n        //     return constants.intervals.featEngReload\n        // }\n    },\n\n    methods: {\n        initData() {\n            ({ backtestsNames:this.backtestsNames, selectedBacktest:this.selectedBacktest, updateKey:this.updateKey } = helper.getBacktestsNames(this.$store, this.storeKey, this.updateKey))\n\n            let splitted = this.estimated.split(' ')\n            this.warnEstimated = this.estimated && splitted[0] > 5 && splitted[1] === 'hours'\n        },\n\n        runClick() {\n            if (this.running) {\n                this.stop()\n            } else {\n                if (this.warnEstimated) {\n                    this.$confirm(this.$t(this.storeKey + '.estimatedTime') + ' ' + this.$t(this.storeKey + '.confirmEstimated'))\n                    .then(() => {\n                        this.run()\n                    })\n                    .catch(() => {})\n\n                    return\n                }\n                \n                this.run()\n            }\n        },\n        saveClick() {},\n\n        run() {\n            this.running = true\n\n            // let data = {}\n            // if (this.period.from) {\n            //     data['start_date'] = this.period.from\n            // }\n            // if (this.period.to) {\n            //     data['finish_date'] = this.period.to\n            // }\n            // if (this.profitTarget.checked) {\n            //     if (this.profitTarget.from) {\n            //         data['profit_take_start'] = this.profitTarget.from\n            //     }\n            //     if (this.profitTarget.to) {\n            //         data['profit_take_stop'] = this.profitTarget.to\n            //     }\n            //     if (this.profitTarget.step) {\n            //         data['profit_take_step'] = this.profitTarget.step\n            //     }\n            //     // \"profit_take_unit\": \"USD\",\n            // }\n            // if (this.stopLoss.checked) {\n            //     if (this.stopLoss.from) {\n            //         data['stop_loss_start'] = this.stopLoss.from\n            //     }\n            //     if (this.stopLoss.to) {\n            //         data['stop_loss_stop'] = this.stopLoss.to\n            //     }\n            //     if (this.stopLoss.step) {\n            //         data['stop_loss_step'] = this.stopLoss.step\n            //     }\n            //     // \"stop_loss_unit\": \"USD\"\n            // }\n            // // \"origin_result\": 0,\n\n            // this.$http\n            // .post(constants.urls.featEng.sweepRequest, data)\n            // .then(_ => this.running = true)\n            // .catch(error => {\n            //     console.log(error);\n            //     if (error.message === constants.strings.networkError) {\n            //         helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', this.errorTitle)\n            //     }\n            // })\n        },\n        stop() {\n            this.running = false\n        }\n    },\n\n    mounted() {\n        this.initData()\n    },\n\n    watch: {\n      selectedBacktest(val) {        \n        helper.updateStore(this.$store, 'selectedBacktest', val, this.storeKey)\n      }\n    },\n}\n</script>\n<style scoped>\n.warning {\n    text-align: center;\n    color: #66ffba;\n}\n\n.noWarning {\n    text-align: center;\n    color: white\n}\n</style>"],"sourceRoot":"src/custom/apps/research/optimization"}]}