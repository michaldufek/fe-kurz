{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js!/home/dufek/Documents/gitlab/frs-apps/src/custom/assets/js/constants.js","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/assets/js/constants.js","mtime":1595835860230},{"path":"/home/dufek/Documents/gitlab/frs-apps/.babelrc","mtime":1576496397055},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGkxOG4gZnJvbSAiQC9pMThuIjsKdmFyIGJhc2VVcmxMb2NhbCA9ICJodHRwOi8vbG9jYWxob3N0IjsKdmFyIGJhc2VVcmxEZXYgPSAiaHR0cHM6Ly9kZXYuYW5hbHl0aWNhbHBsYXRmb3JtLmNvbSI7CnZhciBiYXNlVXJsUHJvZCA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgPyB3aW5kb3cubG9jYXRpb24ub3JpZ2luIDogYmFzZVVybERldjsgLy8gY29uc3QgYmFzZVVybCA9IGJhc2VVcmxMb2NhbAovLyBjb25zdCBiYXNlVXJsID0gYmFzZVVybERldgoKdmFyIGJhc2VVcmwgPSBiYXNlVXJsUHJvZDsKdmFyIEFQSVBhcnRVcmwgPSBiYXNlVXJsICsgIi9hcGkiOwp2YXIgb3B0UGFydFVybCA9IEFQSVBhcnRVcmwgKyAiL29wdGltaXphdGlvbiI7CnZhciBkd2hQYXJ0VXJsID0gQVBJUGFydFVybCArICIvZGF0YXdhcmVob3VzZSI7CnZhciBzd2VlcFBhcnRVcmwgPSAiL1N3ZWVwIjsKdmFyIHJlcXVlc3RQYXJ0VXJsID0gIlJlcXVlc3QiOwp2YXIgU1BQYXJ0VXJsID0gQVBJUGFydFVybCArICIvc3AiOwp2YXIgUExtaW5pUGFydFVybCA9ICJwbDIiOwp2YXIgUExQYXJ0VXJsID0gQVBJUGFydFVybCArICIvIiArIFBMbWluaVBhcnRVcmw7CnZhciBsaXZlZGVwbFBhcnRVcmwgPSBBUElQYXJ0VXJsICsgIi9saXZlZGVwbCI7CnZhciB0aWNrZXJQYXJ0VXJsID0gIi9UaWNrZXIiOwp2YXIgcGF0dGVyblBhcnRVcmwgPSAiL1BhdHRlcm4iOwp2YXIgZ3dQYXJ0VXJsID0gIi9HYXRld2F5IjsKdmFyIHJlc3VsdFBhcnRVcmwgPSAiUmVzdWx0IjsKdmFyIGFsZXJ0UGFydFVybCA9ICIvQWxlcnQiOwp2YXIgc2VhcmNoUGFydFVybCA9ICI/c2VhcmNoPSI7CnZhciByZXBvcnRQYXJ0VXJsID0gQVBJUGFydFVybCArICIveHJlcG9ydCI7CnZhciBzdGF0c1BhcnRVcmwgPSByZXBvcnRQYXJ0VXJsICsgIi9sYXN0X3JlcG9ydCI7CnZhciBjaGFydFBhcnRVcmwgPSByZXBvcnRQYXJ0VXJsICsgIi9jb21wdXRlIjsKdmFyIG1mUGFydFVybCA9ICIvbWYiOwp2YXIgdXZ4eVBhcnRVcmwgPSAiL3V2eHkiOwpleHBvcnQgZGVmYXVsdCB7CiAgLy8gbWF4aW11bSBudW1iZXIgb2Ygcm93cyBzaG93biBpbiBmYW5jeSB0YWJsZXMKICBtYXhSb3dzOiAyMCwKICAvLyB0by1kbzogdXNlIHNvbWUgcGFnaW5hdGlvbiBvciBNb3JlLi4uIGJ1dHRvbiBmb3IgYWxsIHJvd3MKICBkZWZhdWx0VW5pdDogaTE4bi50KCdyZXNlYXJjaC5wYXR0ZXJuTGFiLnVuaXRzJylbMF0sCiAgLy8gd2lsbCBub3QgdHJhbnNsYXRlIGR1cmluZyBydW50aW1lICEhIQogIGNvbG9yczogewogICAgdHJhZGVFbnRyeTogJ2JsdWUnLAogICAgdHJhZGVTdG9wTG9zczogJ3llbGxvdycsCiAgICB0cmFkZUV4aXQ6ICdkYXJrcmVkJwogIH0sCiAgaW50ZXJ2YWxzOiB7CiAgICAvLyBpbnRlcnZhbCBmb3IgcmVhbG9hZGluZyBjaGFydHMgYW5kIHRhYmxlcyBkYXRhIGZyb20gc291cmNlcwogICAgZGF0YVJlbG9hZDogMTAwMCAqIDYwICogMTAsCiAgICAvLyAxMCBtaW51dGVzIAogICAgLy8gaW50ZXJ2YWwgZm9yIGNoZWNraW5nIHdoZXRoZXIgd2Ugc2hvdWxkIHBsYXkgc29tZSBvcmRlclN0YXR1cyBjaGFuZ2Ugc291bmQKICAgIG1pbnV0ZTogMTAwMCAqIDYwLAogICAgLy8gbWludXRlCiAgICAvLyB0aW1lIG9mIHNoYWtpbmcgb2YgbG9naW4gZm9ybXMgaWYgdW5zdWNjZXNzZnVsCiAgICBzaGFrZTogNTAwLAogICAgLy8gaGFsZiBzZWNvbmQKICAgIC8vIHRpbWUgb2YgZWZmZWN0IG9mIGxvZ2luIGZvcm1zIHNob3dpbmcKICAgIGxvZ2luU2hvdzogMjMwLAogICAgLy8gdGltZSBvZiBjaGVja2luZyB3aGV0aGVyIEJhY2t0ZXN0IHBhdHRlcm5zIGJhY2t0ZXN0cyBhcmUgZG9uZQogICAgc2Vjb25kczM6IDEwMDAgKiAzLAogICAgLy8gMyBzZWNvbmRzLAogICAgLy8gdGltZSBvZiBkb3dubG9hZGluZyBvcHRpbWl6YXRpb24gcmVzdWx0cwogICAgZmVhdEVuZ1JlbG9hZDogMTAwMCAqIDUgLy8gNSBzZWNvbmRzCgogIH0sCiAgdXJsczogewogICAgbGl2ZURlcGw6IHsKICAgICAgZ2F0ZXdheTogewogICAgICAgIHN0YXJ0OiBsaXZlZGVwbFBhcnRVcmwgKyBnd1BhcnRVcmwgKyAiU3RhcnQvIiwKICAgICAgICBzdG9wOiBsaXZlZGVwbFBhcnRVcmwgKyBnd1BhcnRVcmwgKyAiU3RvcC8iLAogICAgICAgIHN0YXR1czogbGl2ZWRlcGxQYXJ0VXJsICsgZ3dQYXJ0VXJsICsgIlN0YXR1cyIsCiAgICAgICAgbG9nczogbGl2ZWRlcGxQYXJ0VXJsICsgZ3dQYXJ0VXJsICsgIkxvZ3MiCiAgICAgIH0sCiAgICAgIHN0cmF0ZWd5OiB7CiAgICAgICAgZGVwbG95OiBsaXZlZGVwbFBhcnRVcmwgKyAiL1N0cmF0ZWd5RGVwbG95LyIsCiAgICAgICAgc3RvcDogbGl2ZWRlcGxQYXJ0VXJsICsgIi9TdHJhdGVneVN0b3AvIgogICAgICB9LAogICAgICByZXBvcnQ6IGxpdmVkZXBsUGFydFVybCArICIvUmVwb3J0LyIsCiAgICAgIGxpcXVpZGF0ZTogbGl2ZWRlcGxQYXJ0VXJsICsgIi9MaXF1aWRhdGUvIgogICAgfSwKICAgIHRpY2tlclNQOiB7CiAgICAgIGJhc2U6IFNQUGFydFVybCArIHRpY2tlclBhcnRVcmwsCiAgICAgIHN0b2NrOiBTUFBhcnRVcmwgKyB0aWNrZXJQYXJ0VXJsICsgIk9ITEM/dGlja2VyPSIKICAgIH0sCiAgICBwYXR0ZXJuTGFiOiB7CiAgICAgIGFiYnJldmlhdGlvbjogUExtaW5pUGFydFVybCwKICAgICAgYXNzZXQ6IFBMUGFydFVybCArIHRpY2tlclBhcnRVcmwgKyBzZWFyY2hQYXJ0VXJsLAogICAgICBwYXR0ZXJuOiBQTFBhcnRVcmwgKyBwYXR0ZXJuUGFydFVybCArIHNlYXJjaFBhcnRVcmwsCiAgICAgIGNoYXJ0OiBQTFBhcnRVcmwgKyAiL0hpc3RvcnlEYXRhLyIsCiAgICAgIHBhdHRlcm5zSGlzdG9yeTogUExQYXJ0VXJsICsgcGF0dGVyblBhcnRVcmwgKyAiVGVzdHMiLAogICAgICBiYWNrdGVzdFBhdHRlcm5zOiB7CiAgICAgICAgcmVzdWx0czogUExQYXJ0VXJsICsgcGF0dGVyblBhcnRVcmwgKyByZXN1bHRQYXJ0VXJsICsgInMiLAogICAgICAgIHN0YXR1czogUExQYXJ0VXJsICsgcGF0dGVyblBhcnRVcmwgKyByZXN1bHRQYXJ0VXJsICsgInMiICsgIlN0YXR1cyIKICAgICAgfSwKICAgICAgYWxlcnQ6IFBMUGFydFVybCArIGFsZXJ0UGFydFVybCArICIvIiwKICAgICAgYWxlcnRzOiBQTFBhcnRVcmwgKyBhbGVydFBhcnRVcmwgKyAicyIKICAgIH0sCiAgICBmZWF0RW5nOiB7CiAgICAgIHN3ZWVwUmVxdWVzdDogb3B0UGFydFVybCArIHN3ZWVwUGFydFVybCArIHJlcXVlc3RQYXJ0VXJsICsgIi8iCiAgICB9LAogICAgZGF0YXdhcmVob3VzZTogewogICAgICByZXN1bHQ6IGR3aFBhcnRVcmwgKyAiLyIgKyByZXN1bHRQYXJ0VXJsICsgIi8iLAogICAgICByZXN1bHRzOiBkd2hQYXJ0VXJsICsgIi8iICsgcmVzdWx0UGFydFVybCArICJzIgogICAgfSwKICAgIGF1dGg6IGJhc2VVcmwgKyAiL3Jlc3QtYXV0aCIsCiAgICBzdGF0czogewogICAgICAiTUYgUmVwb3J0Ijogc3RhdHNQYXJ0VXJsICsgbWZQYXJ0VXJsLAogICAgICAiVVZYWSBSZXBvcnQiOiBzdGF0c1BhcnRVcmwgKyB1dnh5UGFydFVybAogICAgfSwKICAgIGNoYXJ0OiB7CiAgICAgICJNRiBSZXBvcnQiOiBjaGFydFBhcnRVcmwgKyBtZlBhcnRVcmwsCiAgICAgICJVVlhZIFJlcG9ydCI6IGNoYXJ0UGFydFVybCArIHV2eHlQYXJ0VXJsCiAgICB9CiAgfSwKICBzdG9yZUtleXM6IHsKICAgIGFzc2V0c1BhdHRlcm5zUGlja2VyOiAncmVzZWFyY2gucGF0dGVybkxhYi5Bc3NldHNQYXR0ZXJuc1BpY2tlcicsCiAgICBiYWNrdGVzdFBhdHRlcm5zOiAncmVzZWFyY2gucGF0dGVybkxhYi5iYWNrdGVzdFBhdHRlcm5zJwogIH0sCiAgdHJhbnNsYXRpb25LZXlzOiB7CiAgICBwYXR0ZXJuczogJ3Jlc2VhcmNoLnBhdHRlcm5MYWIuYmFja3Rlc3RQYXR0ZXJucy5wZXJmb3JtYW5jZVJlc3VsdHMucGF0dGVybnMnLAogICAgdHJhZGVzOiAncmVzZWFyY2gucGF0dGVybkxhYi5iYWNrdGVzdFBhdHRlcm5zLnBlcmZvcm1hbmNlUmVzdWx0cy50cmFkZXMnLAogICAgcGVyZm9ybWFuY2VNZXRyaWNzOiAncmVzZWFyY2gucGF0dGVybkxhYi5iYWNrdGVzdFBhdHRlcm5zLnBlcmZvcm1hbmNlUmVzdWx0cy5wZXJmb3JtYW5jZU1ldHJpY3MnLAogICAgSUJMb2dpbjogJ2xvZ2luLklCJwogIH0sCiAgc3RyaW5nczogewogICAgbmV0d29ya0Vycm9yOiAiTmV0d29yayBFcnJvciIsCiAgICBldGM6ICIuLi4iLAogICAgYWxsOiAiYWxsIiwKICAgIGJ1bGxpc2g6ICJCdWxsaXNoIiwKICAgIGJlYXJpc2g6ICJCZWFyaXNoIgogIH0KfTs="},{"version":3,"sources":["/home/dufek/Documents/gitlab/frs-apps/src/custom/assets/js/constants.js"],"names":["i18n","baseUrlLocal","baseUrlDev","baseUrlProd","process","env","NODE_ENV","window","location","origin","baseUrl","APIPartUrl","optPartUrl","dwhPartUrl","sweepPartUrl","requestPartUrl","SPPartUrl","PLminiPartUrl","PLPartUrl","livedeplPartUrl","tickerPartUrl","patternPartUrl","gwPartUrl","resultPartUrl","alertPartUrl","searchPartUrl","reportPartUrl","statsPartUrl","chartPartUrl","mfPartUrl","uvxyPartUrl","maxRows","defaultUnit","t","colors","tradeEntry","tradeStopLoss","tradeExit","intervals","dataReload","minute","shake","loginShow","seconds3","featEngReload","urls","liveDepl","gateway","start","stop","status","logs","strategy","deploy","report","liquidate","tickerSP","base","stock","patternLab","abbreviation","asset","pattern","chart","patternsHistory","backtestPatterns","results","alert","alerts","featEng","sweepRequest","datawarehouse","result","auth","stats","storeKeys","assetsPatternsPicker","translationKeys","patterns","trades","performanceMetrics","IBLogin","strings","networkError","etc","all","bullish","bearish"],"mappings":"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","sourcesContent":["import i18n from \"@/i18n\"\n\nconst baseUrlLocal = \"http://localhost\"\nconst baseUrlDev = \"https://dev.analyticalplatform.com\"\nconst baseUrlProd = process.env.NODE_ENV === 'production' ? window.location.origin : baseUrlDev\n// const baseUrl = baseUrlLocal\n// const baseUrl = baseUrlDev\nconst baseUrl = baseUrlProd\n\nconst APIPartUrl = baseUrl + \"/api\"\nconst optPartUrl = APIPartUrl + \"/optimization\"\nconst dwhPartUrl = APIPartUrl + \"/datawarehouse\"\nconst sweepPartUrl = \"/Sweep\"\nconst requestPartUrl = \"Request\"\nconst SPPartUrl = APIPartUrl + \"/sp\"\nconst PLminiPartUrl = \"pl2\"\nconst PLPartUrl = APIPartUrl + \"/\" + PLminiPartUrl\nconst livedeplPartUrl = APIPartUrl + \"/livedepl\"\nconst tickerPartUrl = \"/Ticker\"\nconst patternPartUrl = \"/Pattern\"\nconst gwPartUrl = \"/Gateway\"\nconst resultPartUrl = \"Result\"\nconst alertPartUrl = \"/Alert\"\nconst searchPartUrl = \"?search=\"\nconst reportPartUrl = APIPartUrl + \"/xreport\"\nconst statsPartUrl = reportPartUrl + \"/last_report\"\nconst chartPartUrl = reportPartUrl + \"/compute\"\nconst mfPartUrl = \"/mf\"\nconst uvxyPartUrl = \"/uvxy\"\n\nexport default {\n    // maximum number of rows shown in fancy tables\n    maxRows: 20, // to-do: use some pagination or More... button for all rows\n\n    defaultUnit: i18n.t('research.patternLab.units')[0],        // will not translate during runtime !!!\n\n    colors: {\n        tradeEntry: 'blue',\n        tradeStopLoss: 'yellow',\n        tradeExit: 'darkred'\n    },\n    \n    intervals: { \n        // interval for realoading charts and tables data from sources\n        dataReload: 1000 * 60 * 10, // 10 minutes \n\n        // interval for checking whether we should play some orderStatus change sound\n        minute: 1000 * 60, // minute\n\n        // time of shaking of login forms if unsuccessful\n        shake: 500, // half second\n\n        // time of effect of login forms showing\n        loginShow: 230,\n\n        // time of checking whether Backtest patterns backtests are done\n        seconds3: 1000 * 3, // 3 seconds,\n\n        // time of downloading optimization results\n        featEngReload: 1000 * 5 // 5 seconds\n    },    \n\n    urls: {\n        liveDepl: {\n            gateway: {\n                start: livedeplPartUrl + gwPartUrl + \"Start/\",\n                stop: livedeplPartUrl + gwPartUrl + \"Stop/\",\n                status: livedeplPartUrl + gwPartUrl + \"Status\",\n                logs: livedeplPartUrl + gwPartUrl + \"Logs\"\n            },\n            strategy: {\n                deploy: livedeplPartUrl + \"/StrategyDeploy/\",\n                stop: livedeplPartUrl + \"/StrategyStop/\"\n            },\n            report: livedeplPartUrl + \"/Report/\",\n            liquidate: livedeplPartUrl + \"/Liquidate/\"\n        },\n\n        tickerSP: {\n            base : SPPartUrl + tickerPartUrl,\n            stock: SPPartUrl + tickerPartUrl + \"OHLC?ticker=\"\n        },\n\n        patternLab: {\n            abbreviation: PLminiPartUrl,\n            asset: PLPartUrl + tickerPartUrl + searchPartUrl,\n            pattern: PLPartUrl + patternPartUrl + searchPartUrl,\n            chart: PLPartUrl + \"/HistoryData/\",\n            patternsHistory: PLPartUrl + patternPartUrl + \"Tests\",\n            backtestPatterns: {\n                results: PLPartUrl + patternPartUrl + resultPartUrl + \"s\",\n                status: PLPartUrl + patternPartUrl  + resultPartUrl + \"s\" + \"Status\"\n            },\n            alert: PLPartUrl + alertPartUrl + \"/\",\n            alerts: PLPartUrl + alertPartUrl + \"s\"\n        },\n\n        featEng: {\n            sweepRequest: optPartUrl + sweepPartUrl + requestPartUrl + \"/\"\n        },\n\n        datawarehouse: {\n            result: dwhPartUrl + \"/\" + resultPartUrl + \"/\",\n            results: dwhPartUrl + \"/\" + resultPartUrl + \"s\",\n        },\n\n        auth: baseUrl + \"/rest-auth\",\n\n        stats: {\n            \"MF Report\": statsPartUrl + mfPartUrl,\n            \"UVXY Report\": statsPartUrl + uvxyPartUrl\n        },\n\n        chart: {\n            \"MF Report\": chartPartUrl + mfPartUrl, \n            \"UVXY Report\": chartPartUrl + uvxyPartUrl\n        }\n    },\n\n    storeKeys: {\n        assetsPatternsPicker: 'research.patternLab.AssetsPatternsPicker',\n        backtestPatterns: 'research.patternLab.backtestPatterns'\n    },\n\n    translationKeys: {\n        patterns: 'research.patternLab.backtestPatterns.performanceResults.patterns',\n        trades: 'research.patternLab.backtestPatterns.performanceResults.trades',\n        performanceMetrics: 'research.patternLab.backtestPatterns.performanceResults.performanceMetrics',\n        IBLogin: 'login.IB'\n    },\n\n    strings: {\n        networkError: \"Network Error\",\n        etc: \"...\",\n        all: \"all\",\n        bullish: \"Bullish\",\n        bearish: \"Bearish\"\n    }\n}"]}]}