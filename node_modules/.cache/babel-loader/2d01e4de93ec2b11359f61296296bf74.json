{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js!/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/components/Charts/FancyChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/components/Charts/FancyChart.vue","mtime":1587030366022},{"path":"/home/dufek/Documents/gitlab/frs-apps/.babelrc","mtime":1576496397055},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["FancyChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <card type=\"chart\">\r\n    <audio id=\"connectionLost\" src=\"media/connectionLost.mp3\" preload=\"auto\"></audio>\r\n    <div class=\"card-header\">\r\n      <h4 v-if=\"showTitle\" slot=\"header\" class=\"card-title\" style=\"float: left; margin-bottom: 20px\">{{title}}</h4>\r\n      <span v-if=\"legend\" v-html=\"legend\" />\r\n      <h5 v-if=\"!noData\" class=\"card-title\" style=\"float: right;\"><i class=\"tim-icons icon-heart-2\" :class=\"{ 'text-success': live }\" style=\"color:red\"></i>  {{ updateTs | chartUpdateTsText(loading) }}</h5>\r\n    </div>\r\n    <br/>\r\n    <div class=\"chart-area\" style=\"height: 425px\">\r\n      <section v-if=\"noData\" style=\"text-align: center\">\r\n        <p style=\"padding-top: 50px\">{{ noDataText ? noDataText : $t('noData') }}</p>\r\n      </section>\r\n      <section v-else-if=\"isError\" style=\"text-align: center\">\r\n        <p style=\"padding-top: 50px\">{{ $t('dataError') }}</p>\r\n      </section>\r\n      <section v-else>\r\n        <DualRingLoader v-if=\"loading\" :color=\"'#54f1d2'\" style=\"width: 80px; height: 80px; position: absolute; top: 40%; left: 45%;\" />\r\n        <line-chart v-if=\"responsive\"\r\n                    :chart-data=\"chartData\"\r\n                    :gradient-colors=\"bigLineChart.gradientColors\"\r\n                    :gradient-stops=\"bigLineChart.gradientStops\"\r\n                    :extra-options=\"extraOptions\"\r\n                    :height=\"null\"\r\n                    :width=\"null\">\r\n        <!-- height and width nulls is workaround of responsiveness library bug - will be fixed in vue-chartjs v4.0.0 (added as milestone) -->\r\n        </line-chart>\r\n        <line-chart v-else\r\n                    :chart-data=\"chartData\"\r\n                    :gradient-colors=\"bigLineChart.gradientColors\"\r\n                    :gradient-stops=\"bigLineChart.gradientStops\"\r\n                    :extra-options=\"extraOptions\">                    \r\n        </line-chart>\r\n      </section>\r\n    </div>\r\n  </card>\r\n</template>\r\n<script>\r\nimport LineChart from '@/components/Charts/LineChart';\r\nimport * as chartConfigs from '@/components/Charts/config';\r\nimport DualRingLoader from '@bit/joshk.vue-spinners-css.dual-ring-loader';\r\n\r\nimport config from '@/config';\r\nimport helper from '@/custom/assets/js/helper';\r\nimport constants from '@/custom/assets/js/constants';\r\n\r\nconst defaultPointRadius = 4\r\nconst highlightPointRadius = 10\r\nconst defaultPointStyle = 'circle'\r\nconst highlightPointStyle = 'triangle'\r\nconst defaultDatasets = {\r\n  borderColor: config.colors.primary,\r\n  borderWidth: 2,\r\n  borderDash: [],\r\n  borderDashOffset: 0.0,\r\n  pointBackgroundColor: config.colors.primary,\r\n  pointBorderColor: 'rgba(255,255,255,0)',\r\n  pointHoverBackgroundColor: config.colors.primary,\r\n  pointBorderWidth: 20,\r\n  pointHoverRadius: 4,\r\n  pointHoverBorderWidth: 15,\r\n  pointRadius: [],\r\n  pointStyle: []\r\n}\r\n\r\n\r\nexport default {\r\n  name: \"fancy-chart\",\r\n  components: {\r\n    LineChart,\r\n    DualRingLoader\r\n  },\r\n\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      description: \"Chart title\"\r\n    },\r\n    legend: {\r\n      type: String,\r\n      description: \"Chart legend\"\r\n    },  // workaround because trades legend cannot be done correctly in chart.js\r\n    showTitle: {\r\n      type: Boolean,\r\n      description: \"Whether to show chart title\"\r\n    },\r\n    axesLabels: {\r\n      type: Array,\r\n      default: () => [],\r\n      description: \"Labels of chart axes\"\r\n    },\r\n    apiUrls: {\r\n      type: Array,\r\n      default: () => [],\r\n      description: \"URLs to API data sources\"\r\n    },\r\n    dataFields: {\r\n      type: Array,\r\n      default: () => {\r\n        return [ 'Close' ]\r\n      },\r\n      description: \"Response data fields to use for distinctive lines in chart\"      \r\n    },\r\n    dataCreator: {\r\n      type: Function,\r\n      default: responseData => {\r\n        return responseData\r\n      },\r\n      description: \"How to create data (object of type { time: [Array], equity: [Array], WARNING: [String], report_timestamp: [Date] }) from response data\"\r\n    },\r\n    noDataText: {\r\n      type: String,\r\n      description: \"Text to show when no data\"\r\n    },\r\n    fill: {\r\n      type: Boolean,\r\n      description: \"Whether to fill area above/below line\"\r\n    },\r\n    highlights: {\r\n      type: Array,\r\n      default: () => {\r\n        return [{ \r\n          points: [], \r\n          color: config.colors.primary \r\n        }]\r\n      },\r\n      description: \"Points that should be highlighted with big triangle of defined color\"\r\n    },\r\n    responsive: {\r\n      type: Boolean,\r\n      description: \"Whether chart height should scale by parent height\"\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      updateTs: null,\r\n      live: false,\r\n      error: false,\r\n      loading: false,\r\n\r\n      // chart\r\n      bigLineChart: {\r\n          gradientColors: config.colors.gradients.primaryGradient,\r\n          gradientStops: [1, 0.4, 0],\r\n      },\r\n      chartData: {\r\n        datasets: [{\r\n          ...defaultDatasets,\r\n          data: []\r\n        }],\r\n        labels: []      \r\n      },\r\n      chartMins: [],\r\n      chartMaxes: []\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    noData() {\r\n      return !this.loading && (!this.chartData.datasets.length || !this.chartData.datasets[0].data.length)\r\n    },\r\n    isError() {\r\n      return this.error\r\n    },\r\n    extraOptions() {\r\n      let eOp = JSON.parse(JSON.stringify(chartConfigs.purpleChartOptions))   // deep clone\r\n\r\n      let dfNr = 0\r\n      this.dataFields.forEach(field => {        \r\n        eOp.scales.yAxes[dfNr].id = field\r\n        eOp.scales.yAxes[dfNr].position = dfNr === 0 ? 'left' : 'right'\r\n        eOp.scales.yAxes[dfNr].ticks.suggestedMin = this.chartMins[dfNr]\r\n        eOp.scales.yAxes[dfNr].ticks.suggestedMax = this.chartMaxes[dfNr]\r\n      })\r\n\r\n      eOp.scales.xAxes[0].scaleLabel = {\r\n        display: this.axesLabels.length > 0,\r\n        labelString: this.axesLabels[0]\r\n      }\r\n      eOp.scales.yAxes[0].scaleLabel = {\r\n        display: this.axesLabels.length > 0,\r\n        labelString: this.axesLabels[1]\r\n      }\r\n\r\n      return eOp\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    initData() {\r\n      this.loadData();\r\n        \r\n      setInterval(() => { \r\n        this.loadData();\r\n      }, constants.intervals.dataReload );\r\n    },\r\n\r\n    nearestValue(label, labels, data) {\r\n      // finds label's value or nearest left neighbour\r\n      let val = 0\r\n      let i = 0\r\n\r\n      labels.forEach(oldLabel => {\r\n        if (label === oldLabel) {\r\n          // label is from this array\r\n          val = data[i]\r\n        } else if (label > oldLabel) {\r\n          // we are in another array so get last known value\r\n          if (i === labels.length - 1) {\r\n            // at the end of array\r\n            val = data[i]\r\n          } else if (label < labels[i+1]) {            \r\n            val = data[i]\r\n          }\r\n        }\r\n        // otherwise iterate further\r\n        i++\r\n      })\r\n\r\n      return val\r\n    },\r\n\r\n    loadData() {  \r\n      let loadings = {    \r\n        finished: 0,\r\n        error: 0\r\n      }\r\n      if (this.apiUrls.length > 0) {\r\n        this.loading = true\r\n        this.error = false\r\n      }\r\n\r\n      this.apiUrls.forEach(apiUrl => {\r\n        this.$http\r\n        .get(apiUrl)\r\n        .then(response => this.responseDataTransformer(response.data, loadings))\r\n        .catch(error => {\r\n          console.log(error);\r\n          if (++loadings.error === this.apiUrls.length) {\r\n            this.error = true\r\n          }\r\n\r\n          if (error.message === constants.strings.networkError) {\r\n            helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', this.$t('notifications.beConnectionLost') + '(' + this.title + ' ' + this.$t('chart') + ')')\r\n          }\r\n        })\r\n        .finally(() => {\r\n          if (++loadings.finished === this.apiUrls.length) {\r\n            this.loading = false\r\n\r\n            if (!this.live && !this.error) {\r\n              helper.notifyAudio(this, document.getElementById('connectionLost'), 'warning', this.$t('notifications.brokerConnectionLost') + '(' + this.title + ' ' + this.$t('chart') + ')')\r\n            }\r\n          }\r\n        });\r\n      })\r\n    },\r\n    responseDataTransformer(responseData, loadings=null) {\r\n      if (!loadings || !loadings.finished) {\r\n        let datasets = []\r\n        this.dataFields.forEach(_ => datasets.push({\r\n          ...defaultDatasets,\r\n          data: []\r\n        }))\r\n\r\n        this.chartData = {\r\n          datasets: datasets,\r\n          labels: []\r\n        } \r\n      }\r\n\r\n      responseData = this.dataCreator(responseData)\r\n\r\n      if (responseData && !responseData.time) {\r\n        // data in ticker symbol format\r\n        let times = []\r\n        let equities = []\r\n        let firstTime = true\r\n\r\n        this.dataFields.forEach(field => {\r\n          let fieldEquities = []\r\n\r\n          if (field in responseData) {\r\n            for (const [key, value] of Object.entries(responseData[field])) {\r\n              if (firstTime) {\r\n                // times are same for all price fields\r\n                times.push(Number(key))\r\n              }\r\n              fieldEquities.push(value)\r\n            }\r\n          }\r\n\r\n          equities.push(fieldEquities)\r\n          firstTime = false\r\n        })            \r\n\r\n        var data = {\r\n          time: times,\r\n          equity: equities,\r\n          WARNING: null,\r\n          report_timestamp: helper.formatDateTime(times[times.length - 1])\r\n        }\r\n      } else {\r\n        data = {\r\n          time: responseData ? responseData.time : [],\r\n          equity: responseData ? [ responseData.equity ] : [],\r\n          WARNING: responseData ? responseData.WARNING : null,\r\n          report_timestamp: responseData ? responseData.report_timestamp || helper.formatDateTime(responseData.time[responseData.time.length - 1]) : null\r\n        }\r\n      }\r\n\r\n      this.createChartData(data)\r\n\r\n      // if at least one source is live we are live\r\n      this.live = this.live || !data.WARNING\r\n\r\n      if (!this.updateTs) {\r\n        this.updateTs = data.report_timestamp\r\n      }\r\n      // get last report's TimeStamp\r\n      this.updateTs = [this.updateTs, data.report_timestamp].sort()[1] \r\n    },\r\n    \r\n    createChartData(data) {\r\n      let datasets = []\r\n      let datasetNr = 0\r\n\r\n      let dataTimes = helper.formatDateTimes(data.time)\r\n      let allLabels = this.chartData.labels.concat(dataTimes)\r\n      \r\n      data.equity.forEach(equity => {\r\n        // add new dates and sort it\r\n        let allData = []\r\n        // aggregate values for all dates\r\n        allLabels.forEach(label => {\r\n          let aggValue = this.nearestValue(label, this.chartData.labels, this.chartData.datasets[datasetNr].data)\r\n                          + this.nearestValue(label, dataTimes, equity)\r\n\r\n          // add to final data array\r\n          allData.push(aggValue)\r\n        })\r\n\r\n        if (Math.min(...allData) < this.chartMins[datasetNr]) {\r\n          this.chartMins[datasetNr] = Math.min(...allData)\r\n        }        \r\n        if (Math.max(...allData) > this.chartMaxes[datasetNr]) {\r\n          this.chartMaxes[datasetNr] = Math.max(...allData)\r\n        }\r\n        // to-do: fix extraOptions recomputation\r\n\r\n        let datasetSetting = JSON.parse(JSON.stringify(defaultDatasets))    // deep clone\r\n        let defColor = Object.values(config.colors)[datasetNr % Object.values(config.colors).length]      \r\n        datasetSetting.borderColor = defColor\r\n\r\n        if (this.highlights[0].points.length) {   // probably not possible to be only stop losses or trade exits\r\n          datasetSetting.pointBackgroundColor = context => {  // https://www.chartjs.org/docs/latest/general/options.html#scriptable-options\r\n            let label = new Date(allLabels[context.dataIndex]).getTime()            \r\n            let color = defColor\r\n\r\n            this.highlights.forEach(highlight => {\r\n              if (highlight.points.includes(label)) {\r\n                color = highlight.color\r\n              }\r\n            })\r\n            return color\r\n          }\r\n\r\n          datasetSetting.pointRadius = context => {\r\n            let label = new Date(allLabels[context.dataIndex]).getTime()\r\n            let radius = defaultPointRadius\r\n\r\n            this.highlights.forEach(highlight => {\r\n              if (highlight.points.includes(label)) {\r\n                radius = highlightPointRadius\r\n              }\r\n            })\r\n            return radius\r\n          }\r\n\r\n          datasetSetting.pointStyle = context => {\r\n            let label = new Date(allLabels[context.dataIndex]).getTime()\r\n            let style = defaultPointStyle\r\n\r\n            this.highlights.forEach(highlight => {\r\n              if (highlight.points.includes(label)) {\r\n                style = highlightPointStyle\r\n              }\r\n            })\r\n            return style\r\n          }\r\n        }\r\n        \r\n        datasetSetting.pointHoverBackgroundColor = defColor\r\n        \r\n        let dataset = {\r\n          ...datasetSetting,\r\n          data: allData\r\n        }\r\n        if (this.fill) {\r\n          dataset['backgroundColor'] = config.colors.primary\r\n        }\r\n        if (allData.length > 0 && this.dataFields.length > 1) {\r\n          dataset.label = this.dataFields[datasetNr++]\r\n        } \r\n\r\n        datasets.push(dataset)\r\n      })    \r\n      \r\n      this.chartData = {\r\n        datasets: datasets,\r\n        labels: allLabels\r\n      }       \r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.dataFields.forEach(_ => {\r\n      this.chartMins.push(Number.MAX_VALUE)\r\n      this.chartMaxes.push(0)\r\n    })    \r\n\r\n    this.initData();\r\n  }\r\n};\r\n</script>\r\n<style>\r\n</style>"],"sourceRoot":"src/custom/components/Charts"}]}