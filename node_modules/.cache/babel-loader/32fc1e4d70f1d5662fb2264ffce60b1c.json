{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js!/home/dufek/Documents/gitlab/frs-apps/src/custom/assets/js/helper.js","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/assets/js/helper.js","mtime":1595835860230},{"path":"/home/dufek/Documents/gitlab/frs-apps/.babelrc","mtime":1576496397055},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/dufek/Documents/gitlab/frs-apps/src/custom/assets/js/helper.js"],"names":["i18n","constants","cagr","equity","nrOfQuarters","Math","pow","length","ytd","data","last_equity","last_quarters_equity","maxDD","min","map","val","ind","max","slice","nr","now","Date","monthBefore","getMonth","yearBefore","getFullYear","timeFiltered","time","filter","dt","getDate","sortAggregator","oldRows","newRows","sortCl","concat","sort","row1","row2","weightedAverageAggregator","weight","lastRowNoAverage","rows","firstTime","allRows","rowNr","forEach","oldRow","aggRow","Object","entries","key","oldVal","newVal","Number","sep","oldValSplitted","split","isNaN","noAverage","newWeight","join","push","createTradesRow","datum","base","keys","output","trades","pnl","_","symbol","pattern","direction","formatDateTime","start","finish","createPerfMetricsRow","initial_capital","defaultUnit","stats","profit_take_value","profit_take_unit","stop_loss_value","stop_loss_unit","pad","String","formatDate","delimiter","newDt","deformatDate","date","substring","getHours","getMinutes","getSeconds","formatDateOnly","formatDateTimes","datetimes","newDatetimes","isNumber","notifyAudio","self","element","type","msg","play","$notify","message","convertTimeframe","timeframe","index","t","indexOf","convertDirection","strings","bullish","bearish","mapStrategyFromRow","row","clNr","columns","translationKeys","patterns","get","toLowerCase","profit_take","stop_loss","directions","values","getPatternLabQueryData","assets","sa","sp","id","encodeQueryData","ret","d","undefined","encodeURIComponent","getPatternLabChartUrl","asset","range","urls","patternLab","chart","encodeRouteParams","getPatternLabHistoryUrl","patternsHistory","getAssetsPatternsPickerData","store","getItem","storeKeys","assetsPatternsPicker","from","to","selectedAssets","checkedAssets","checkedAsset","selectedPatterns","checkedPatterns","checkedAllPatterns","updateStore","value","storeKey","storeData","setItem","updateStoreBacktests","newRow","Map","timeframeKey","directionKey","set","Array","getStoredBacktests","bts","backtests","bt","cls","column","getBacktestsNames","updateKey","backtestPatterns","backtestsNames","selectedBacktest","loading","name","bn","includes","pluralize","translationKey","nrsKey","objectEmpty","obj","constructor","getDefaultPrName","btId","getBacktestPatternsTableBase","btsColumns","ticker","names","symbols","roundToFixed","isInteger","toFixed","replace","RegExp","lenght","chartUpdateTsText","ts"],"mappings":"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","sourcesContent":["import i18n from \"@/i18n\"\nimport constants from './constants';\n\nexport default { \n    // statistics\n    cagr(equity, nrOfQuarters) {\n        // cagr = (df['equity'].iloc[-1] / df['equity'].iloc[0]) ** (1 / (time_span.days/365)) - 1\n        return Math.pow(equity[equity.length - 1] / equity[0], 1 / (nrOfQuarters / 4)) - 1\n    },\n\n    ytd(data, nrOfQuarters) {\n        // ytd = (this_year['equity'].iloc[-1] / this_year['equity'].iloc[0]) * 100 - 100\n        let last_equity = this.last_quarters_equity(data, nrOfQuarters)\n        return last_equity.length ? (last_equity[last_equity.length - 1] / last_equity[0]) * 100 - 100 : 0\n    },\n\n    maxDD(data, nrOfQuarters) {\n        // maxdd = ((df['equity'] - df['equity'].cummax()) / df['equity']).min() * 100\n        let last_equity = this.last_quarters_equity(data, nrOfQuarters)\n        return last_equity.length ? Math.min(...last_equity.map((val,ind) => (val - Math.max(...last_equity.slice(0, ind + 1))) / val)) * 100 : 0\n    },\n\n    last_quarters_equity(data, nr) {\n        // this_year = df[df['time'] > dt.datetime(now.year, 1, 1)]\n        let now = new Date(Date.now())\n        let monthBefore = now.getMonth() - (nr * 3)\n        let yearBefore = now.getFullYear() - (monthBefore < 0 ? 1 : 0)        \n        let timeFiltered = data.time.filter(dt => new Date(dt) >= new Date(yearBefore, monthBefore < 0 ? 12 + monthBefore : monthBefore, now.getDate()))\n        return data.equity.slice(data.equity.length - timeFiltered.length, data.equity.length)\n    },\n\n    // agregators\n    sortAggregator(oldRows, newRows, sortCl) {\n        return oldRows.concat(newRows).sort((row1, row2) => {\n          // sort in descending order by dateTime\n          if (row1[sortCl] > row2[sortCl]) return -1;\n          if (row1[sortCl] < row2[sortCl]) return 1;\n          /* else */ return 0;\n        })\n    },\n\n    weightedAverageAggregator(oldRows, newRows, weight, lastRowNoAverage=true) {\n        // average values at same place\n        let rows = []\n        let firstTime = !oldRows.length || !newRows.length\n\n        let allRows = firstTime ? oldRows.concat(newRows) : oldRows\n        let rowNr = 0\n\n        allRows.forEach(oldRow => {\n            let aggRow = {}\n            \n            for (const [key, oldVal] of Object.entries(oldRow)) {\n                if (typeof oldVal === \"boolean\") {\n                    var newVal = oldVal\n                } else {\n                if (!oldVal) {\n                    continue\n                }\n\n                if (oldVal instanceof Number || typeof oldVal === 'number') {\n                        newVal = oldVal\n                } else {\n                    // split because in portfolio card it is in '<statisticName>: <number>' format\n                    var sep = ': '\n                    var oldValSplitted = oldVal.split(sep)\n\n                    newVal = oldValSplitted[oldValSplitted.length - 1]\n                }\n\n                if (!isNaN(Number(newVal))) {\n                    // final weighted average of old and new value\n                    let noAverage = !(lastRowNoAverage && rowNr === allRows.length - 1)\n                    let newWeight = noAverage ? weight : 1\n\n                    newVal = ((firstTime ? newWeight : 1) * Number(newVal))\n                                + (firstTime\n                                    ? 0\n                                    : (newWeight * ((oldValSplitted && oldValSplitted.length > 1) \n                                                    ? Number(newRows[rowNr][key].split(sep)[1]) \n                                                    : newRows[rowNr][key]))\n                                    )\n                    if (noAverage && !firstTime) {  \n                        // it's probably Equity outstanding statistic                          \n                        newVal /= 2\n                    }\n                }\n                \n                if (oldValSplitted && oldValSplitted.length > 1) {\n                    newVal = [ oldValSplitted[0], newVal ].join(sep)\n                } \n                }\n\n                aggRow[key] = newVal\n            }\n\n            rows.push(aggRow)\n            rowNr++\n        })\n\n        return rows\n    },\n    createTradesRow(rows, datum, base) {\n        let rowNr = 0\n\n        Object.keys(datum.output.trades.pnl).forEach(_ => \n            rows.push([\n                rowNr + 1,    // #                    \n                base.symbol,    // Asset                    \n                base.pattern,    // Pattern\n                datum.direction,   // Direction\n                'Entry price',   // Entry price\n                'Exit price',   // Exit price\n                this.formatDateTime(datum.output.trades.start[rowNr]),   // Entry time\n                this.formatDateTime(datum.output.trades.finish[rowNr]),   // Exit time\n                'Amount',   // Amount\n                datum.output.trades.pnl[rowNr++]   // PnL\n            ])\n        )\n    },\n    createPerfMetricsRow(rows, datum, base) {\n        rows.push([\n            base.symbol,    // Asset\n            base.pattern,    // Pattern\n            Object.keys(datum.output.trades.pnl).length,   // # of trades\n            `${datum.initial_capital} ${constants.defaultUnit}`,   // Initial capital\n            `${datum.initial_capital + datum.output.stats[\"Cummulative pnl final\"]} ${constants.defaultUnit}`,   // End capital\n            `${datum.output.stats[\"Cummulative pnl final\"]} ${constants.defaultUnit}`,    // Cummulative PnL final\n            'CAGR',    // CAGR\n            datum.output.stats[\"Sharpe ratio\"],  // Sharpe ratio\n            `${datum.profit_take_value} ${datum.profit_take_unit}`,   // PT\n            `${datum.stop_loss_value} ${datum.stop_loss_unit}`,   // SL\n            datum.output.stats[\"Avg. trade net profit per trade\"],  // Average trade\n            datum.output.stats[\"Max drawdown strategy\"]  // Max drawdown strategy\n        ])\n    },\n\n    // date-time types formatting    \n    pad(nr) {\n        return String(nr).length < 2 ? \"0\" + nr : nr\n    },\n\n    formatDate(dt, delimiter=\"-\") {\n        // returns RRRR<delimiter>MM<delimiter>DD format\n        if (dt) {\n            let newDt = new Date(dt)\n            return newDt.getFullYear() + delimiter + this.pad(Number(newDt.getMonth() + 1)) + delimiter + this.pad(newDt.getDate())\n        }\n    },\n\n    deformatDate(date) {\n        // for RRRRMMDD formatted inputs\n        // returns new Date() format\n        return date !== null ? new Date(date.substring(0,4), Number(date.substring(4,6)) - 1, date.substring(6,8)) : null\n    },\n\n    formatDateTime(dt) {\n        // returns RRRR-MM-DD HH:MM:SS formatted date from string of type YYYY-MM-DDTHH:MM:SS\n        let newDt = new Date(dt)\n        return this.formatDate(newDt) + \" \" + this.pad(newDt.getHours()) + \":\" + this.pad(newDt.getMinutes()) + \":\" + this.pad(newDt.getSeconds())\n    },\n\n    formatDateOnly(date) {\n        // for RRRRMMDD formatted inputs\n        // returns in RRRR-M-D format\n        return date.substring(0,4) + \"-\" + date.substring(4,6) + \"-\" + date.substring(6,8)\n    },\n\n    formatDateTimes(datetimes) {\n        // formatDatetime on array\n        let newDatetimes = []\n        datetimes.forEach(dt => {\n          newDatetimes.push(this.formatDateTime(dt))\n        })\n        return newDatetimes\n    },\n\n    isNumber(val) {\n        return val instanceof Number || typeof val === 'number'\n    },\n\n    notifyAudio(self, element, type, msg) {\n        element.play();\n\n        self.$notify({\n          type: type, \n          message: msg\n        })\n    },\n\n    // convertors\n    convertTimeframe(timeframe) {\n        let index = i18n.t('research.patternLab.timeframes').indexOf(timeframe)\n        return index > -1 ? index + 1 : -1\n    },\n\n    convertDirection(nr) {\n        return !nr ? nr : (nr > 0 ? constants.strings.bullish : constants.strings.bearish)\n    },\n\n    // query & urls methods\n    mapStrategyFromRow(row, map=true) {\n        // map Patterns table row to API structure\n        let data = {}\n        let clNr = 1    // 0th is Name - no need to map\n        let columns = i18n.t(constants.translationKeys.patterns + '.columns')\n\n        let val = (map && row.get(columns[clNr].toLowerCase())) || (!map && row[columns[clNr].toLowerCase()])\n        if (val) {\n            data['start_date'] = val // From\n        }\n        clNr++\n\n        val = (map && row.get(columns[clNr].toLowerCase())) || (!map && row[columns[clNr].toLowerCase()])\n        if (val) {\n            data['finish_date'] = val    // To\n        }\n        clNr++\n\n        val = (map && row.get(columns[clNr].toLowerCase())) || (!map && row[columns[clNr].toLowerCase()])\n        if (val) {\n            data['time_frame'] = i18n.t('research.patternLab.timeframes').indexOf(val) + 1    // Time frame    // it's a big mystery why BE indexes from 1\n        }\n\n        val = (map && row.get('assetId')) || (!map && row['assetId'])\n        data['asset'] = val   // Asset\n\n        val = (map && row.get('patternId')) || (!map && row['patternId'])\n        data['pattern'] = val  // Pattern\n        clNr += 3\n\n        val = (map && row.get(columns[clNr].toLowerCase())) || (!map && row[columns[clNr].toLowerCase()])\n        if (val) {\n            data['initial_capital'] = val.split(' ')[0]\n        }\n        clNr += 2\n\n        val = (map && row.get(columns[clNr].toLowerCase())) || (!map && row[columns[clNr].toLowerCase()])\n        if (val) {\n            let profit_take = val.split(' ')\n            data['profit_take_value'] = profit_take[0]\n            data['profit_take_unit'] = profit_take[1]\n        }\n        clNr++\n\n        val = (map && row.get(columns[clNr].toLowerCase())) || (!map && row[columns[clNr].toLowerCase()])\n        if (val) {\n            let stop_loss = val.split(' ')\n            data['stop_loss_value'] =  stop_loss[0]\n            data['stop_loss_unit'] =  stop_loss[1]\n        }\n        clNr++\n\n        val = (map && row.get(columns[clNr].toLowerCase())) || (!map && row[columns[clNr].toLowerCase()])\n        if (val) {\n            data['ma_filter_period'] = val.split(' ')[0]\n        }\n        clNr++\n\n        val = (map && row.get(columns[clNr].toLowerCase())) || (!map && row[columns[clNr].toLowerCase()])\n        let directions = i18n.t('research.patternLab.backtestPatterns.entryRules.directions')\n        data['direction'] = Object.keys(directions)[Object.values(directions).indexOf(val)]\n\n        val = (map && row.get('fixed_amount')) || (!map && row['fixed_amount'])\n        if (val) {\n            data['fixed_amount'] = val  // Risk\n        }\n\n        return data\n    },\n    getPatternLabQueryData(assets, patterns, timeframe) {\n        let data = {}\n\n        data['symbols'] = assets.map(sa => sa.symbol)\n        data['patterns'] = patterns.map(sp => sp.id)        \n        data['timeframe'] = this.convertTimeframe(timeframe)\n        \n        return data\n    },\n    encodeQueryData(data) {\n        const ret = [];\n        for (let d in data) {\n            if (data[d] !== null && data[d] !== undefined) {\n                ret.push(encodeURIComponent(d) + '=' + encodeURIComponent(data[d]));\n            }\n        }\n        return \"?\" + ret.join('&');\n    },\n    getPatternLabChartUrl(asset, timeframe, range=null) {\n        return constants.urls.patternLab.chart + this.encodeRouteParams([ asset.id, this.convertTimeframe(timeframe) ]) + this.encodeQueryData(range)\n    },\n    getPatternLabHistoryUrl(assets, patterns, timeframe) {\n        return assets.length && patterns.length\n                ? [ constants.urls.patternLab.patternsHistory + this.encodeQueryData(this.getPatternLabQueryData(assets, patterns, timeframe)) ]\n                : []\n    },\n    encodeRouteParams(data) {\n        return data.join('/');\n    },\n\n    // store methods\n    getAssetsPatternsPickerData(store) {\n        let data = store.getItem(constants.storeKeys.assetsPatternsPicker)\n        if (data) {\n            return {\n                timeframe: i18n.t('research.patternLab.timeframes')[data.timeframe ? data.timeframe : 0],\n                range: {\n                    from: data.range && data.range.from ? data.range.from : null,\n                    to: data.range && data.range.to ? data.range.to : null\n                },\n                \n                // assets\n                selectedAssets: data.selectedAssets ? data.selectedAssets : [],\n                checkedAssets: data.checkedAssets ? data.checkedAssets : (data.selectedAssets ? data.selectedAssets : []),\n                checkedAsset: data.checkedAsset ? data.checkedAsset : (data.checkedAssets && data.checkedAssets.length ? data.checkedAssets[0] : null),\n\n                // patterns\n                selectedPatterns: data.selectedPatterns ? data.selectedPatterns : [],\n                checkedPatterns: data.checkedPatterns ? data.checkedPatterns : [],\n                checkedAllPatterns: data.checkedAllPatterns\n            }\n        }\n    },\n    updateStore(store, key, value, storeKey=constants.storeKeys.assetsPatternsPicker) {\n        let storeData = store.getItem(storeKey)\n        if (!storeData) {\n            storeData = {}\n        }\n        storeData[key] = value\n        store.setItem(storeKey, storeData)\n    },\n    updateStoreBacktests(store, key, value, storeKey=constants.storeKeys.assetsPatternsPicker) {\n        this.updateStore(store, key, value.map(row => {\n            let newRow = new Map(row)\n\n            let timeframeKey = i18n.t(constants.translationKeys.patterns + '.columns')[3].toLowerCase()\n            let directionKey = i18n.t(constants.translationKeys.patterns + '.columns')[11].toLowerCase()\n            newRow.set(directionKey, Object.values(i18n.t('research.patternLab.backtestPatterns.entryRules.directions')).indexOf(row.get(directionKey)))\n            newRow.set(timeframeKey, i18n.t('research.patternLab.timeframes').indexOf(row.get(timeframeKey)))\n\n            return Array.from(newRow.values())\n        }), storeKey)    // cannot store language dependent keys\n    },\n    getStoredBacktests(data) {\n        let bts = []\n\n        if (data.backtests) {\n            data.backtests.forEach(bt => {\n                let row = new Map()\n                let clNr = 0                \n\n                row.set('btId', bt[clNr++])\n                row.set('assetId', bt[clNr++])\n                row.set('patternId', bt[clNr++])\n\n                // add columns values from translations\n                let cls = i18n.t(constants.translationKeys.patterns + '.columns')\n                cls.forEach(column => { \n                    if (column) { \n                        row.set(column.toLowerCase(), bt[clNr++]) \n                    } \n                })\n                \n                let timeframeKey = cls[3].toLowerCase()\n                let directionKey = cls[11].toLowerCase()\n                row.set(directionKey, Object.values(i18n.t('research.patternLab.backtestPatterns.entryRules.directions'))[row.get(directionKey)])\n                row.set(timeframeKey, i18n.t('research.patternLab.timeframes')[row.get(timeframeKey)])\n\n                row.set('fixed_amount', bt[15])     // Risk\n\n                bts.push(row)\n            })\n        }\n\n        return bts\n    },\n    getBacktestsNames(store, storeKey, updateKey) {             \n        let data = store.getItem(constants.storeKeys.backtestPatterns)\n        let backtestsNames = []\n        let selectedBacktest = null\n\n        if (data) {\n          var loading = data.loading\n          \n          this.getStoredBacktests(data).forEach(bt => backtestsNames.push({ id: bt.get('btId'), name: bt.get(i18n.t(constants.translationKeys.patterns + '.columns')[0].toLowerCase()) }))\n\n          data = store.getItem(storeKey)\n          if (data && 'selectedBacktest' in data && backtestsNames.map(bn => bn.name).includes(data.selectedBacktest.name)) {\n            selectedBacktest = data.selectedBacktest \n          }\n          if (!selectedBacktest && backtestsNames.length) {\n            selectedBacktest = backtestsNames[0]\n          }\n\n          updateKey++\n        } else {\n          loading = false\n        }\n\n        return { backtestsNames, loading, selectedBacktest, updateKey }\n    },\n\n    // plurazlizer\n    pluralize(nr, translationKey) {\n        let nrsKey = translationKey + 's'\n\n        if (nr === 0) {\n            return i18n.t(nrsKey)\n        }\n        if (nr === 1) {\n            return i18n.t(translationKey)\n        }\n        if (nr < 5) {\n            return i18n.t(nrsKey + 'To4')\n        } else {\n            return i18n.t(nrsKey)\n        }\n    },\n    objectEmpty(obj) {\n        return Object.keys(obj).length === 0 && obj.constructor === Object\n    },\n\n    getDefaultPrName(btId) {\n        return 'pr_' + btId\n    },\n\n    getBacktestPatternsTableBase(datum, store, btsColumns) {\n        let name = this.getDefaultPrName(datum.id)\n        let symbol = datum.ticker\n        let pattern = datum.pattern\n\n        let data = store.getItem(constants.storeKeys.backtestPatterns)\n        if (data) {\n            let backtests = this.getStoredBacktests(data)\n            if (backtests) {\n                let names = backtests.filter(bt => bt.get('btId') === datum.id)\n                if (names.length) {\n                    name = names[0].get(btsColumns[0].toLowerCase())\n                }\n                let symbols = backtests.filter(bt => bt.get('assetId') === datum.ticker)\n                if (symbols.length) {\n                    symbol = symbols[0].get(btsColumns[4].toLowerCase())\n                }                \n                let patterns = backtests.filter(bt => bt.get('patternId') === datum.pattern)\n                if (patterns.length) {\n                    pattern = patterns[0].get(btsColumns[5].toLowerCase())\n                }                    \n            }\n        }\n\n        return { name:name, symbol:symbol, pattern:pattern }\n    },\n\n    // global filters\n    roundToFixed(value) {\n        if (!value || Number.isInteger(value)) {\n            return value\n        }\n\n        // rounds to 2 mantissa places\n        return value ? ((value instanceof Number || typeof value === 'number')\n                        ? value.toFixed(2)\n                        : [\n                            isNaN(Number(value.split(' ')[0])) ? value.split(' ')[0] : Number(value.split(' ')[0]).toFixed(2),\n                            value.split(' ')[1].replace(new RegExp('&nbsp;', \"g\"), ' ')\n                          ].concat(value.split(' ').slice(2, value.split(' ').lenght)).join(' '))\n                    : value\n    },\n    \n    chartUpdateTsText(ts, loading) {\n        // returns RRRR-M-D H:M:S like formatted text for chart (if not loading)\n        if (loading) {\n            return null\n        }\n\n        if (ts) {            \n            let newDt = new Date(ts)\n            return i18n.t('chartUpdatedPrefix') + ' ' + newDt.getFullYear() + \"-\" + Number(newDt.getMonth() + 1) + \"-\" + newDt.getDate() + \" \" + newDt.getHours() + \":\" + newDt.getMinutes() + \":\" + newDt.getSeconds()\n        }\n\n        return i18n.t('chartNeverUpdated')\n    }\n}"]}]}