{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js!/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/research/patternLab/Alerts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/research/patternLab/Alerts.vue","mtime":1587030366018},{"path":"/home/dufek/Documents/gitlab/frs-apps/.babelrc","mtime":1576496397055},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Alerts.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"row flex-stretch\">\r\n\r\n    <div class=\"col-lg-3 col-md-12 killflex container\">\r\n      <assets-patterns-picker :title=\"$t('research.patternLab.alerts.title')\"\r\n                              :btnText=\"$t('research.patternLab.alerts.addAlert')\" \r\n                              :class=\"killflex\"\r\n                              :showDatePickers=\"false\"\r\n                              @btnClicked=\"addAlert\" />\r\n    </div>\r\n\r\n    <div class=\"col-lg-9 col-md-12\" style=\"text-align: center\">\r\n      <DualRingLoader v-if=\"loading\" :color=\"'#54f1d2'\" />\r\n      <fancy-table v-else \r\n                  :title=\"$t(alertsKey + '.title')\"\r\n                  :showTitle=\"false\"\r\n                  :apiUrls=\"alertsUrl\"\r\n                  :authorize=\"true\"\r\n                  :rowsCreator=\"rowsCreator\"\r\n                  :columns=\"columns\"\r\n                  :checkboxColumns=\"$t(alertsKey + '.checkboxColumns')\"\r\n                  @checked=\"checkedEmit\"\r\n                  :sortable=\"true\"\r\n                  :filterable=\"true\"\r\n                  :key=\"tableKey\" />\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n<script>\r\n  import FancyTable from '@/custom/components/Tables/FancyTable';\r\n  import AssetsPatternsPicker from '@/custom/components/AssetsPatternsPicker'\r\n  import DualRingLoader from '@bit/joshk.vue-spinners-css.dual-ring-loader';\r\n\r\n  import constants from '@/custom/assets/js/constants';\r\n  import helper from '@/custom/assets/js/helper';\r\n  \r\n  \r\n  export default {\r\n    components: {\r\n      AssetsPatternsPicker,\r\n      FancyTable,\r\n      DualRingLoader\r\n    },\r\n\r\n    data() {\r\n      return {     \r\n        errorTitle: ' (' + this.$t('research.alerts.title') + ').',   \r\n        alertsKey: 'research.patternLab.alerts',\r\n\r\n        assetsPatterns: null,\r\n        loading: false,\r\n        alerts: [],\r\n\r\n        tableKey: 0\r\n      }\r\n    },\r\n\r\n    computed: {        \r\n      alertsUrl() {\r\n        return [ constants.urls.patternLab.alerts ]\r\n      },\r\n      columns() {\r\n        return this.$t(this.alertsKey + '.columns').concat(this.$t(this.alertsKey + '.checkboxColumns'))\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      initData() {\r\n        this.assetsPatterns = helper.getAssetsPatternsPickerData(this.$store)\r\n      },\r\n\r\n      // emited events\r\n      addAlert() {\r\n        this.alerts = []\r\n        this.assetsPatterns = helper.getAssetsPatternsPickerData(this.$store)        \r\n\r\n        if (this.assetsPatterns) {\r\n          this.assetsPatterns.checkedAssets.forEach(asset => \r\n            this.assetsPatterns.checkedPatterns.forEach(pattern =>\r\n              this.$http\r\n              .post(constants.urls.patternLab.alerts, { pattern: pattern.id, ticker: asset.id }, this.$store.getItem('headers'))\r\n              .then(response => this.alerts.push(response.data))\r\n              .catch(error => {\r\n                console.log(error);\r\n                if (error.message === constants.strings.networkError) {\r\n                  helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', this.errorTitle)\r\n                }\r\n              })\r\n          ))\r\n        }\r\n\r\n        this.loading = true\r\n        this.setCheckAlertsInterval()\r\n      },\r\n      checkedEmit(row) {\r\n        if (!this.alerts.length) {\r\n          this.$http\r\n          .get(constants.urls.patternLab.alerts, this.$store.getItem('headers'))\r\n          .then(response => response.data.forEach(datum => this.alerts.push(datum)))\r\n          .catch(error => {\r\n            console.log(error);\r\n            if (error.message === constants.strings.networkError) {\r\n              helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', this.errorTitle)\r\n            }\r\n          })\r\n          .finally(() => this.putAlert(row))\r\n        } else {\r\n          this.putAlert(row)\r\n        }\r\n      },\r\n      putAlert(row) {\r\n        let rowAlerts = this.alerts.filter(alert => alert.pattern === this.getIdByName(this.assetsPatterns ? this.assetsPatterns.selectedPatterns : [], (pattern) => pattern.name, row[this.columns[0].toLowerCase()]) \r\n                      && alert.ticker === this.getIdByName(this.assetsPatterns ? this.assetsPatterns.selectedAssets : [], (asset) => asset.symbol, row[this.columns[1].toLowerCase()]))\r\n\r\n        if (rowAlerts.length) {\r\n          this.$http\r\n          .put(constants.urls.patternLab.alert + rowAlerts[0].id, { app: row[this.columns[3].toLowerCase()], email: row[this.columns[2].toLowerCase()] }, this.$store.getItem('headers'))\r\n          .catch(error => {\r\n            console.log(error);\r\n            if (error.message === constants.strings.networkError) {\r\n              helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', this.errorTitle)\r\n            }\r\n          })\r\n        } else {\r\n          console.log(`${this.$t('serverIncontinency')}: Couldn't find changed alert on server!`)\r\n        }\r\n      },\r\n\r\n      setCheckAlertsInterval() {\r\n        let interval = setInterval(() => { \r\n          this.checkAlerts(interval)\r\n        }, constants.intervals.backtestsDone )        \r\n      },\r\n      checkAlerts(interval) {\r\n        let idsDone = []\r\n\r\n        this.$http\r\n        .get(constants.urls.patternLab.alerts, this.$store.getItem('headers'))\r\n        .then(response => response.data.forEach(datum => {\r\n          if (this.alerts.map(alert => alert.id).includes(datum.id)) {\r\n            idsDone.push(datum.id)       \r\n          }   \r\n        }))\r\n        .catch(error => {\r\n          console.log(error);\r\n          if (error.message === constants.strings.networkError) {\r\n            helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', this.errorTitle)\r\n          }\r\n        })\r\n        .finally(() => {\r\n          if (idsDone.length === this.alerts.length) {\r\n            this.loading = false\r\n            clearInterval(interval)\r\n            this.tableKey++\r\n          }\r\n        })\r\n      },\r\n      \r\n      rowsCreator(data) {\r\n        let rows = []\r\n\r\n        data.forEach(datum => {\r\n          let pattern = this.assetsPatterns ? this.getItemById(this.assetsPatterns.selectedPatterns, datum.pattern) : null\r\n          let asset = this.assetsPatterns ? this.getItemById(this.assetsPatterns.selectedAssets, datum.ticker) : null\r\n\r\n          if (pattern && asset) {\r\n            rows.push([\r\n              pattern.name,        // Pattern\r\n              asset.symbol,       // Asset\r\n              datum.email,  // Email notification\r\n              datum.app     // App notification\r\n            ])\r\n          }\r\n        })\r\n\r\n        return rows\r\n      },\r\n\r\n      getItemById(items, id) {\r\n        let itemsFiltered = items.filter(item => item.id === id)\r\n        return itemsFiltered.length ? itemsFiltered[0] : null\r\n      },\r\n      getIdByName(items, nameSelector, name) {\r\n        let itemsFiltered = items.filter(item => nameSelector(item) === name)\r\n        return itemsFiltered.length ? itemsFiltered[0].id : null\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      this.initData()\r\n    }\r\n  }  \r\n</script>\r\n<style>\r\n</style>]"],"sourceRoot":"src/custom/apps/research/patternLab"}]}