{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js!/home/dufek/Documents/gitlab/frs-apps/src/registerServiceWorker.js","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/registerServiceWorker.js","mtime":1587030366030},{"path":"/home/dufek/Documents/gitlab/frs-apps/.babelrc","mtime":1576496397055},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqLwppbXBvcnQgeyByZWdpc3RlciB9IGZyb20gJ3JlZ2lzdGVyLXNlcnZpY2Utd29ya2VyJzsKCmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7CiAgcmVnaXN0ZXIoIiIuY29uY2F0KHByb2Nlc3MuZW52LkJBU0VfVVJMLCAic2VydmljZS13b3JrZXIuanMiKSwgewogICAgcmVnaXN0cmF0aW9uT3B0aW9uczogewogICAgICBzY29wZTogcHJvY2Vzcy5lbnYuQkFTRV9VUkwKICAgIH0sCiAgICByZWFkeTogZnVuY3Rpb24gcmVhZHkoKSB7CiAgICAgIGNvbnNvbGUubG9nKCdBcHAgaXMgYmVpbmcgc2VydmVkIGZyb20gY2FjaGUgYnkgYSBzZXJ2aWNlIHdvcmtlci5cbicgKyAnRm9yIG1vcmUgZGV0YWlscywgdmlzaXQgaHR0cHM6Ly9nb28uZ2wvQUZza3FCJyk7CiAgICB9LAogICAgcmVnaXN0ZXJlZDogZnVuY3Rpb24gcmVnaXN0ZXJlZCgpIHsKICAgICAgY29uc29sZS5sb2coJ1NlcnZpY2Ugd29ya2VyIGhhcyBiZWVuIHJlZ2lzdGVyZWQuJyk7CiAgICB9LAogICAgY2FjaGVkOiBmdW5jdGlvbiBjYWNoZWQoKSB7CiAgICAgIGNvbnNvbGUubG9nKCdDb250ZW50IGhhcyBiZWVuIGNhY2hlZCBmb3Igb2ZmbGluZSB1c2UuJyk7CiAgICB9LAogICAgdXBkYXRlZm91bmQ6IGZ1bmN0aW9uIHVwZGF0ZWZvdW5kKCkgewogICAgICBjb25zb2xlLmxvZygnTmV3IGNvbnRlbnQgaXMgZG93bmxvYWRpbmcuJyk7CiAgICB9LAogICAgdXBkYXRlZDogZnVuY3Rpb24gdXBkYXRlZCgpIHsKICAgICAgY29uc29sZS5sb2coJ05ldyBjb250ZW50IGlzIGF2YWlsYWJsZS4gUmVmcmVzaGluZy4uJyk7CiAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQodHJ1ZSk7CiAgICB9LAogICAgb2ZmbGluZTogZnVuY3Rpb24gb2ZmbGluZSgpIHsKICAgICAgY29uc29sZS5sb2coJ05vIGludGVybmV0IGNvbm5lY3Rpb24gZm91bmQuIEFwcCBpcyBydW5uaW5nIGluIG9mZmxpbmUgbW9kZS4nKTsKICAgIH0sCiAgICBlcnJvcjogZnVuY3Rpb24gZXJyb3IoX2Vycm9yKSB7CiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGR1cmluZyBzZXJ2aWNlIHdvcmtlciByZWdpc3RyYXRpb246JywgX2Vycm9yKTsKICAgIH0KICB9KTsKfQ=="},{"version":3,"sources":["/home/dufek/Documents/gitlab/frs-apps/src/registerServiceWorker.js"],"names":["register","process","env","NODE_ENV","BASE_URL","registrationOptions","scope","ready","console","log","registered","cached","updatefound","updated","window","location","reload","offline","error"],"mappings":"AAAA;AAEA,SAASA,QAAT,QAAyB,yBAAzB;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,EAAAA,QAAQ,WAAIC,OAAO,CAACC,GAAR,CAAYE,QAAhB,wBAA6C;AACnDC,IAAAA,mBAAmB,EAAE;AACnBC,MAAAA,KAAK,EAAEL,OAAO,CAACC,GAAR,CAAYE;AADA,KAD8B;AAInDG,IAAAA,KAJmD,mBAI1C;AACPC,MAAAA,OAAO,CAACC,GAAR,CACE,0DACA,+CAFF;AAID,KATkD;AAUnDC,IAAAA,UAVmD,wBAUrC;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACD,KAZkD;AAanDE,IAAAA,MAbmD,oBAazC;AACRH,MAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACD,KAfkD;AAgBnDG,IAAAA,WAhBmD,yBAgBpC;AACbJ,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD,KAlBkD;AAmBnDI,IAAAA,OAnBmD,qBAmBxC;AACTL,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACAK,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB;AACD,KAtBkD;AAuBnDC,IAAAA,OAvBmD,qBAuBxC;AACTT,MAAAA,OAAO,CAACC,GAAR,CAAY,+DAAZ;AACD,KAzBkD;AA0BnDS,IAAAA,KA1BmD,iBA0B5CA,MA1B4C,EA0BrC;AACZV,MAAAA,OAAO,CAACU,KAAR,CAAc,2CAAd,EAA2DA,MAA3D;AACD;AA5BkD,GAA7C,CAAR;AA8BD","sourcesContent":["/* eslint-disable no-console */\r\n\r\nimport { register } from 'register-service-worker'\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  register(`${process.env.BASE_URL}service-worker.js`, {\r\n    registrationOptions: {\r\n      scope: process.env.BASE_URL,\r\n    },\r\n    ready () {\r\n      console.log(\r\n        'App is being served from cache by a service worker.\\n' +\r\n        'For more details, visit https://goo.gl/AFskqB'\r\n      )\r\n    },\r\n    registered () {\r\n      console.log('Service worker has been registered.')\r\n    },\r\n    cached () {\r\n      console.log('Content has been cached for offline use.')\r\n    },\r\n    updatefound () {\r\n      console.log('New content is downloading.')\r\n    },\r\n    updated () {\r\n      console.log('New content is available. Refreshing..')\r\n      window.location.reload(true)\r\n    },\r\n    offline () {\r\n      console.log('No internet connection found. App is running in offline mode.')\r\n    },\r\n    error (error) {\r\n      console.error('Error during service worker registration:', error)\r\n    }\r\n  })\r\n}\r\n"]}]}