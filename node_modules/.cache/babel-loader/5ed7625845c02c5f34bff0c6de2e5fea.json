{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js!/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/research/PortfolioManager.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/research/PortfolioManager.vue","mtime":1587025922788},{"path":"/home/dufek/Documents/gitlab/frs-apps/.babelrc","mtime":1576496397055},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM3LnByb21pc2UuZmluYWxseSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuaXRlcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgUG9ydGZvbGlvQ2FyZCBmcm9tICJAL2N1c3RvbS9jb21wb25lbnRzL0NhcmRzL1BvcnRmb2xpb0NhcmQudnVlIjsKaW1wb3J0IER1YWxSaW5nTG9hZGVyIGZyb20gJ0BiaXQvam9zaGsudnVlLXNwaW5uZXJzLWNzcy5kdWFsLXJpbmctbG9hZGVyJzsKaW1wb3J0IGNvbnN0YW50cyBmcm9tICdAL2N1c3RvbS9hc3NldHMvanMvY29uc3RhbnRzJzsKaW1wb3J0IGhlbHBlciBmcm9tICdAL2N1c3RvbS9hc3NldHMvanMvaGVscGVyJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFBvcnRmb2xpb0NhcmQ6IFBvcnRmb2xpb0NhcmQsCiAgICBEdWFsUmluZ0xvYWRlcjogRHVhbFJpbmdMb2FkZXIKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkZXNpZ25lZFN0cmF0ZWdpZXM6IFtdLAogICAgICBsaXZlU3RyYXRlZ2llczogW10sCiAgICAgIGxvYWRpbmc6IGZhbHNlCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIG9wdGltYWxTdHJhdGVnaWVzOiBmdW5jdGlvbiBvcHRpbWFsU3RyYXRlZ2llcygpIHsKICAgICAgdmFyIGlkID0gMDsKICAgICAgcmV0dXJuIE9iamVjdC5lbnRyaWVzKGNvbnN0YW50cy51cmxzLmNoYXJ0KS5tYXAoZnVuY3Rpb24gKGVudHJ5KSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGlkOiBpZCsrLAogICAgICAgICAgbmFtZTogZW50cnlbMF0sCiAgICAgICAgICB1cmw6IGVudHJ5WzFdCiAgICAgICAgfTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0U3RyYXRlZ2llczogZnVuY3Rpb24gaW5pdFN0cmF0ZWdpZXMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICB0aGlzLmRlc2lnbmVkU3RyYXRlZ2llcyA9IFtdOwogICAgICB0aGlzLmxpdmVTdHJhdGVnaWVzID0gW107CiAgICAgIHRoaXMuJGh0dHAuZ2V0KGNvbnN0YW50cy51cmxzLmRhdGF3YXJlaG91c2UucmVzdWx0cykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChkYXR1bSkgewogICAgICAgICAgaWYgKGRhdHVtLmluX3BvcnRmb2xpbyAmJiAhZGF0dW0ubGl2ZSkgewogICAgICAgICAgICBfdGhpcy5kZXNpZ25lZFN0cmF0ZWdpZXMucHVzaCh7CiAgICAgICAgICAgICAgaWQ6IGRhdHVtLm9yaWdpbmFsX3Jlc3VsdF9pZCwKICAgICAgICAgICAgICBuYW1lOiBkYXR1bS5uYW1lLAogICAgICAgICAgICAgIHVybDogbnVsbCAvLyB0by1kbzogZ2V0IHVybCBvZiBzdGF0aXN0aWNzIG9mIHRoZSBzdHJhdGVneSBpbnN0ZWFkIG9mIG51bGwKCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQoKICAgICAgICAgIGlmIChkYXR1bS5saXZlKSB7CiAgICAgICAgICAgIF90aGlzLmxpdmVTdHJhdGVnaWVzLnB1c2goewogICAgICAgICAgICAgIGlkOiBkYXR1bS5vcmlnaW5hbF9yZXN1bHRfaWQsCiAgICAgICAgICAgICAgbmFtZTogZGF0dW0ubmFtZSwKICAgICAgICAgICAgICB1cmw6IG51bGwgLy8gdG8tZG86IGdldCB1cmwgb2Ygc3RhdGlzdGljcyBvZiB0aGUgc3RyYXRlZ3kgaW5zdGVhZCBvZiBudWxsCgogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwoKICAgICAgICBpZiAoZXJyb3IubWVzc2FnZSA9PT0gY29uc3RhbnRzLnN0cmluZ3MubmV0d29ya0Vycm9yKSB7CiAgICAgICAgICBoZWxwZXIubm90aWZ5QXVkaW8oX3RoaXMsIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb25uZWN0aW9uTG9zdCcpLCAnZGFuZ2VyJywgX3RoaXMuJHQoY29uc3RhbnRzLnN0b3JlS2V5cy5wb3J0Zm9saW9NYW5hZ2VyKSk7CiAgICAgICAgfQogICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gX3RoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICB9KTsKICAgIH0sCiAgICAvLyBlbWl0dGVkIGV2ZW50cwogICAgZ29MaXZlOiBmdW5jdGlvbiBnb0xpdmUoaWQpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLiRodHRwLnBvc3QoY29uc3RhbnRzLnVybHMubGl2ZURlcGwuc3RyYXRlZ3kuZGVwbG95LCB7CiAgICAgICAgYnRfaWQ6IGlkCiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKCiAgICAgICAgaWYgKGVycm9yLm1lc3NhZ2UgPT09IGNvbnN0YW50cy5zdHJpbmdzLm5ldHdvcmtFcnJvcikgewogICAgICAgICAgaGVscGVyLm5vdGlmeUF1ZGlvKF90aGlzMiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Nvbm5lY3Rpb25Mb3N0JyksICdkYW5nZXInLCAiIi5jb25jYXQoX3RoaXMyLiR0KF90aGlzMi53YXJlaG91c2VLZXkpLCAiICIpLmNvbmNhdChfdGhpczIuJHQoJ3Jlc2VhcmNoLnBvcnRmb2xpb01hbmFnZXIubGl2ZScpKSk7CiAgICAgICAgfQogICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gX3RoaXMyLmluaXRTdHJhdGVnaWVzKCk7CiAgICAgIH0pOwogICAgfSwKICAgIHN0b3JlZDogZnVuY3Rpb24gc3RvcmVkKGlkKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdGhpcy4kaHR0cC5wYXRjaChjb25zdGFudHMudXJscy5kYXRhd2FyZWhvdXNlLnJlc3VsdCArIGhlbHBlci5lbmNvZGVSb3V0ZVBhcmFtcyhbaWQsIGNvbnN0YW50cy51cmxzLnBhdHRlcm5MYWIuYWJicmV2aWF0aW9uXSksIHsKICAgICAgICBpbl9wb3J0Zm9saW86IGZhbHNlCiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKCiAgICAgICAgaWYgKGVycm9yLm1lc3NhZ2UgPT09IGNvbnN0YW50cy5zdHJpbmdzLm5ldHdvcmtFcnJvcikgewogICAgICAgICAgaGVscGVyLm5vdGlmeUF1ZGlvKF90aGlzMywgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Nvbm5lY3Rpb25Mb3N0JyksICdkYW5nZXInLCAiIi5jb25jYXQoX3RoaXMzLiR0KF90aGlzMy53YXJlaG91c2VLZXkpLCAiICIpLmNvbmNhdChfdGhpczMuJHQoJ3Jlc2VhcmNoLnBvcnRmb2xpb01hbmFnZXIubGl2ZScpKSk7CiAgICAgICAgfQogICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gX3RoaXMzLmluaXRTdHJhdGVnaWVzKCk7CiAgICAgIH0pOwogICAgfSwKICAgIHN0b3BlZDogZnVuY3Rpb24gc3RvcGVkKGlkKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgdGhpcy4kaHR0cC5wb3N0KGNvbnN0YW50cy51cmxzLmxpdmVEZXBsLnN0cmF0ZWd5LnN0b3AsIHsKICAgICAgICBidF9pZDogaWQKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwoKICAgICAgICBpZiAoZXJyb3IubWVzc2FnZSA9PT0gY29uc3RhbnRzLnN0cmluZ3MubmV0d29ya0Vycm9yKSB7CiAgICAgICAgICBoZWxwZXIubm90aWZ5QXVkaW8oX3RoaXM0LCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29ubmVjdGlvbkxvc3QnKSwgJ2RhbmdlcicsICIiLmNvbmNhdChfdGhpczQuJHQoX3RoaXM0LndhcmVob3VzZUtleSksICIgIikuY29uY2F0KF90aGlzNC4kdCgncmVzZWFyY2gucG9ydGZvbGlvTWFuYWdlci5saXZlJykpKTsKICAgICAgICB9CiAgICAgIH0pLmZpbmFsbHkoZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBfdGhpczQuaW5pdFN0cmF0ZWdpZXMoKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5pbml0U3RyYXRlZ2llcygpOwogIH0KfTs="},{"version":3,"sources":["PortfolioManager.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <DualRingLoader v-if=\"loading\" :color=\"'#54f1d2'\" style=\"margin-left: 250px\" />\r\n    <portfolio-card v-else \r\n                    :title=\"$t('research.portfolioManager.designedPortfolio')\"\r\n                    :strategies=\"designedStrategies\"\r\n                    @wentLive=\"goLive\"\r\n                    @stored=\"stored\">\r\n    </portfolio-card>\r\n    <portfolio-card v-if=\"!loading\"\r\n                    :title=\"$t('research.portfolioManager.livePortfolio')\"\r\n                    :strategies=\"liveStrategies\"\r\n                    :enableStop=\"true\"\r\n                    @stoped=\"stoped\">\r\n    </portfolio-card>\r\n    <portfolio-card :title=\"$t('research.portfolioManager.optimalPortfolio')\"\r\n                    :strategies=\"optimalStrategies\"\r\n                    @wentLive=\"goLive\"\r\n                    @stored=\"stored\">\r\n    </portfolio-card>\r\n    <!-- to-do: stats as a source from Ware house? -->\r\n  </div>\r\n</template>\r\n<script>\r\n  import PortfolioCard from \"@/custom/components/Cards/PortfolioCard.vue\";\r\n  import DualRingLoader from '@bit/joshk.vue-spinners-css.dual-ring-loader';\r\n\r\n  import constants from '@/custom/assets/js/constants';\r\n  import helper from '@/custom/assets/js/helper';\r\n\r\n\r\n  export default {\r\n    components: {\r\n      PortfolioCard,\r\n      DualRingLoader\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        designedStrategies: [],\r\n        liveStrategies: [],\r\n\r\n        loading: false\r\n      }\r\n    },\r\n\r\n    computed: {\r\n      optimalStrategies() {\r\n        let id = 0\r\n        return Object.entries(constants.urls.chart).map(entry => {\r\n          return {\r\n            id: id++,\r\n            name: entry[0],\r\n            url: entry[1]\r\n          }\r\n        })\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      initStrategies() {\r\n        this.loading = true\r\n\r\n        this.designedStrategies = []\r\n        this.liveStrategies = []\r\n        this.$http\r\n        .get(constants.urls.datawarehouse.results)\r\n        .then(response => response.data.forEach(datum => {\r\n          if (datum.in_portfolio && !datum.live) {\r\n            this.designedStrategies.push({\r\n               id: datum.original_result_id,\r\n               name: datum.name, \r\n               url: null    // to-do: get url of statistics of the strategy instead of null\r\n            }) \r\n          }\r\n\r\n          if (datum.live) {\r\n            this.liveStrategies.push({\r\n               id: datum.original_result_id,\r\n               name: datum.name, \r\n               url: null    // to-do: get url of statistics of the strategy instead of null\r\n            }) \r\n          }\r\n        }))\r\n        .catch(error => {\r\n          console.log(error)\r\n          if (error.message === constants.strings.networkError) {\r\n            helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', this.$t(constants.storeKeys.portfolioManager))\r\n          }\r\n        })\r\n        .finally(() => this.loading = false)\r\n      },\r\n\r\n      // emitted events\r\n      goLive(id) {        \r\n        this.$http\r\n        .post(constants.urls.liveDepl.strategy.deploy, { bt_id: id })\r\n        .catch(error => {\r\n            console.log(error)\r\n            if (error.message === constants.strings.networkError) {\r\n                helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t(this.warehouseKey)} ${this.$t('research.portfolioManager.live')}`)\r\n            }\r\n        })\r\n        .finally(() => this.initStrategies())\r\n      },\r\n      stored(id) {        \r\n        this.$http\r\n        .patch(constants.urls.datawarehouse.result + helper.encodeRouteParams([ id, constants.urls.patternLab.abbreviation ]), { in_portfolio: false })\r\n        .catch(error => {\r\n            console.log(error)\r\n            if (error.message === constants.strings.networkError) {\r\n                helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t(this.warehouseKey)} ${this.$t('research.portfolioManager.live')}`)\r\n            }\r\n        })\r\n        .finally(() => this.initStrategies())\r\n      },\r\n      stoped(id) {        \r\n        this.$http\r\n        .post(constants.urls.liveDepl.strategy.stop, { bt_id: id })\r\n        .catch(error => {\r\n            console.log(error)\r\n            if (error.message === constants.strings.networkError) {\r\n                helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t(this.warehouseKey)} ${this.$t('research.portfolioManager.live')}`)\r\n            }\r\n        })\r\n        .finally(() => this.initStrategies())\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      this.initStrategies()\r\n    }\r\n  };\r\n</script>\r\n<style>\r\n</style>"],"sourceRoot":"src/custom/apps/research"}]}