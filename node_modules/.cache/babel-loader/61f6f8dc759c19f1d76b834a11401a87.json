{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js!/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/components/Tables/BaseTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/components/Tables/BaseTable.vue","mtime":1587025922796},{"path":"/home/dufek/Documents/gitlab/frs-apps/.babelrc","mtime":1576496397055},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BaseTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <table class=\"table tablesorter tableflow\" :class=\"tableClass\">\r\n    <thead :class=\"theadClasses\">\r\n    <tr>\r\n      <slot name=\"columns\">\r\n        <th v-for=\"column in columns\" \r\n            :key=\"column\"\r\n            :title=\"headerTitle\"\r\n            @dblclick=\"filter(column)\"\r\n            @keyup.esc=\"cancelFilter\"\r\n            :class=\"{ 'interactive': sortable || filterable, 'checkbox': filterable && column in filtering && checkboxColumns.includes(column), 'notCheckbox': !(filterable && column in filtering && checkboxColumns.includes(column)) }\" >\r\n            <b @click=\"sort(column)\">{{column}}</b>&nbsp;<i v-if=\"column in sorting\" :class=\"[ sorting[column] === 'asc' ? 'tim-icons icon-minimal-up' : 'tim-icons icon-minimal-down' ]\"></i>\r\n            <base-input v-show=\"filterable && column in filtering && !checkboxColumns.includes(column)\" placeholder=\"Filter\" v-model=\"filterText\" style=\"min-width: 75px\" />\r\n            <base-checkbox v-show=\"filterable && column in filtering && checkboxColumns.includes(column)\" v-model=\"filterChecked\" />\r\n        </th>\r\n      </slot>\r\n    </tr>\r\n    </thead>\r\n    <tbody :class=\"tbodyClasses\">\r\n    <tr v-for=\"(item, rowIndex) in sortedFilteredData\" \r\n        :key=\"rowIndex\"\r\n        :title=\"clickable ? (selectedRow === rowIndex ? $t('titles.showPatternCancel') : $t('titles.showPattern')) : ''\"\r\n        :class=\"{ 'selected': clickable && selectedRow === rowIndex }\"\r\n        @dblclick=\"select(rowIndex)\" >\r\n        <!-- fix not showing clickable title -->\r\n      <slot :row=\"item\">\r\n        <td v-for=\"(column, clIndex) in columns\"\r\n            :key=\"clIndex\"\r\n            v-if=\"hasValue(item, column)\"\r\n            :title=\"valueTitle(item, rowIndex, clIndex, column)\"\r\n            @dblclick=\"edit(item, rowIndex, clIndex, column)\"\r\n            @keyup.enter=\"finishEdit(rowIndex, column)\" \r\n            @keyup.esc=\"editing = null\"            \r\n            :class=\"{ 'interactive': (editable || clickable) && !(saveable && clIndex === columns.length - 1), 'checkbox': checkboxColumns.includes(column), 'notCheckbox': !checkboxColumns.includes(column) }\" >\r\n              <!-- :data-name=\"column\"     -->\r\n              <base-button v-if=\"saveable && clIndex === columns.length - 1 && allowSave && !(savedRows.includes(item.btId))\" @click=\"save(item)\" type=\"secondary\" size=\"sm\" fill>{{ $t('research.save') }}</base-button>\r\n              <p v-else-if=\"saveable && clIndex === columns.length - 1 && allowSave && savedRows.includes(item.btId)\">{{ $t('research.saved') }}</p>\r\n              <input type=\"checkbox\" v-else-if=\"checkboxColumns.includes(column)\" v-model=\"item[column.toLowerCase()]\" @change=\"check(item)\" />\r\n              <base-input v-else-if=\"isEditing(rowIndex, column)\" v-model=\"editText\" style=\"min-width: 75px\" />\r\n              <p v-else>{{ itemValue(item, column) | toFixed2 }}</p>\r\n            </td>\r\n      </slot>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n</template>\r\n<script>\r\n  import helper from '@/custom/assets/js/helper'\r\n  \r\n  export default {\r\n    name: 'base-table',\r\n\r\n    props: {\r\n      columns: {\r\n        type: Array,\r\n        default: () => [],\r\n        description: \"Table columns\"\r\n      },\r\n      checkboxColumns: {\r\n        type: Array,\r\n        default: () => [],\r\n        description: \"Columns that are checkboxes\"\r\n      },\r\n      data: {\r\n        type: Array,\r\n        default: () => [],\r\n        description: \"Table data\"\r\n      },\r\n      titles: {\r\n        type: Object,\r\n        default: () => {},\r\n        description: \"Table data values descriptions\"\r\n      },\r\n      type: {\r\n        type: String, // striped | hover\r\n        default: \"\",\r\n        description: \"Whether table is striped or hover type\"\r\n      },\r\n      sortable: {\r\n        type: Boolean,\r\n        description: \"Whether columns can be sorted by header click\"\r\n      },\r\n      filterable: {\r\n        type: Boolean,\r\n        description: \"Whether columns can be filtered by header double-click\"\r\n      },\r\n      editable: {\r\n        type: Boolean,\r\n        description: \"Whether values can be directly edited by double-click\"\r\n      },\r\n      clickable: {\r\n        type: Boolean,\r\n        description: \"Whether rows can be double-clicked for some action\"\r\n      },\r\n      saveable: {\r\n        type: Boolean,\r\n        description: \"Whether rows have Save button at last column (to do emit Save action)\"\r\n      },\r\n      allowSave: {\r\n        type: Boolean,\r\n        description: \"Whether rows can use Save button functionality\" // ie. backtest was run and row has result ID\r\n      },\r\n      savedRows: {\r\n        type: Array,\r\n        default: () => [],\r\n        description: \"Table rows that are already saved\"\r\n      },\r\n      theadClasses: {\r\n        type: String,\r\n        default: '',\r\n        description: \"<thead> css classes\"\r\n      },\r\n      tbodyClasses: {\r\n        type: String,\r\n        default: '',\r\n        description: \"<tbody> css classes\"\r\n      }\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        sorting: {},\r\n\r\n        filtering: {},\r\n        filterText: null,\r\n        filterChecked: false,\r\n\r\n        editing: null,\r\n        editText: null,\r\n\r\n        selectedRow: -1\r\n      }\r\n    },\r\n\r\n    computed: {\r\n      sortedFilteredData() {\r\n        let data = this.data.map(row => row instanceof Map ? Object.fromEntries(row) : row)     // because Patterns (backtests) table is Array of Maps\r\n\r\n        if (!helper.objectEmpty(this.filtering)) {\r\n          data = this.filterData(data)\r\n        }\r\n        if (!helper.objectEmpty(this.sorting)) {\r\n          this.sortData(data)\r\n        }\r\n\r\n        if (this.saveable) {\r\n          data.forEach(row => row[\"\"] = \"\")\r\n          this.columns.push(\"\");          \r\n        }\r\n        \r\n        return data\r\n      },\r\n\r\n      tableClass() {\r\n        return this.type && `table-${this.type}`;\r\n      },\r\n\r\n      headerTitle() {\r\n        let title = ''\r\n\r\n        if (this.sortable) {\r\n          title += this.$t('titles.sort')\r\n        }\r\n        if (this.filterable) {\r\n          title += ' ' + (helper.objectEmpty(this.filtering) ? this.$t('titles.filter') : this.$t('titles.filterCancel'))\r\n        }\r\n\r\n        return title\r\n      }\r\n    },\r\n\r\n    filters: {\r\n      toFixed2(nr) {\r\n        if (!nr || Number.isInteger(nr) || typeof nr === \"boolean\") {\r\n          return nr\r\n        }\r\n\r\n        if (helper.isNumber(nr)) {\r\n          return nr.toFixed(2)\r\n        }\r\n\r\n        // split because in portfolio card it is in '<statisticName>: <number>' format\r\n        let sep = ': '\r\n        let nrSplitted = nr.split(sep)\r\n        let nrIndex = nrSplitted.length - 1\r\n        \r\n        nrSplitted[nrIndex] = nrSplitted[nrIndex].split(' ').length === 1 && isNaN(Number(nrSplitted[nrIndex]))\r\n                              ? nrSplitted[nrIndex]\r\n                              : helper.roundToFixed(!isNaN(Number(nrSplitted[nrIndex])) ? Number(nrSplitted[nrIndex]) : nrSplitted[nrIndex])\r\n        return nrSplitted.join(sep)\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      sortData(data) {\r\n        data = data.sort((row1,row2) => {        \r\n          let column = Object.keys(this.sorting)[0]          \r\n          let order = Object.values(this.sorting)[0]\r\n          let item1AsNr = Number(String(row1[column.toLowerCase()]).split(' ')[0])\r\n          let item2AsNr = Number(String(row2[column.toLowerCase()]).split(' ')[0])\r\n\r\n          return isNaN(item1AsNr)   // ie.is String\r\n                  ? (order === 'asc' \r\n                    ? String(row1[column.toLowerCase()]).localeCompare(String(row2[column.toLowerCase()])) \r\n                    : String(row2[column.toLowerCase()]).localeCompare(String(row1[column.toLowerCase()])))\r\n                  : (order === 'asc' \r\n                    ? item1AsNr - item2AsNr\r\n                    : item2AsNr - item1AsNr)\r\n        })\r\n      },\r\n      filterData(data) {\r\n        let column = Object.keys(this.filtering)[0]\r\n\r\n        return data.filter(row => (column in this.filtering && \r\n                                  ((this.filterText && String(row[column.toLowerCase()]).toLowerCase().includes(this.filterText.toLowerCase()))\r\n                                   || (this.checkboxColumns.includes(column) && this.filterChecked === row[column.toLowerCase()])))\r\n                                  || !(column in this.filtering) \r\n                                  || (!this.checkboxColumns.includes(column) && !this.filterText)\r\n                          )\r\n      },\r\n\r\n      sort(column) {  // to-do: sort by multiple columns?\r\n        if (this.sortable) {\r\n          let origOrder = this.sorting[column]\r\n          this.sorting = {} \r\n          if (origOrder !== 'desc') {\r\n            this.sorting[column] = origOrder === 'asc' ? 'desc' : 'asc'\r\n          }          \r\n        }\r\n      },\r\n      filter(column) {\r\n        if (Object.keys(this.filtering)[0] !== column) {    // only if it's not the same column\r\n          this.cancelFilter()  \r\n          this.filtering[column] = true\r\n        }\r\n      },\r\n      cancelFilter() {\r\n        this.filtering = {}\r\n        this.filterText = null\r\n        this.filterChecked = false\r\n      },\r\n\r\n      edit(item, rowIndex, clIndex, column) { \r\n        if (this.saveable && clIndex === this.columns.length - 1) {\r\n          return\r\n        }\r\n\r\n        let val = this.itemValue(item, column)   \r\n        \r\n        let del = ' '\r\n        if (column === 'Name') {  // special case for Backtest - patterns table\r\n          del += '('\r\n        }\r\n        this.editText = val ? ((!isNaN(Number(val)) ? String(val) : val).split(del)[0]) : ''\r\n        this.editing = [rowIndex, column]\r\n      },\r\n      finishEdit(rowIndex, column) {\r\n        this.$emit('edited', {\r\n          position: [rowIndex, column],    // to-do: probably bug - after sort  this returns sorted (new) index, store has unsorted (different) index\r\n          value: this.editText})\r\n        this.editing = null\r\n      },\r\n      isEditing(rowIndex, column) {\r\n        return this.editable && this.editing && this.editing[0] === rowIndex && this.editing[1] === column\r\n      },   \r\n      \r\n      save(item) {\r\n        this.$emit('saved', item)\r\n      },\r\n\r\n      check(item) {\r\n        this.$emit('checked', item)\r\n      },\r\n\r\n      select(rowIndex) {\r\n        this.selectedRow = this.selectedRow === rowIndex ? -1 : rowIndex  \r\n        this.$emit('selected', this.selectedRow)\r\n      },\r\n\r\n      hasValue(item, column) {\r\n        return item[column.toLowerCase()] !== \"undefined\";\r\n      },\r\n      itemValue(item, column) {\r\n        return item[column.toLowerCase()];\r\n      },\r\n\r\n      valueTitle(item, rowIndex, clIndex, column) {\r\n        if (this.saveable && clIndex === this.columns.length - 1) {\r\n          return this.$t('titles.save2dataWarehouse')\r\n        }\r\n\r\n        let suffix = this.editable ? ' ' + (this.isEditing(rowIndex, column) ? this.$t('titles.editCancel') : this.$t('titles.edit')) : ''\r\n        let value = this.itemValue(item, column)\r\n\r\n        if (!value || !(typeof value === 'string' || value instanceof String) || !this.titles) {\r\n          return suffix\r\n        }\r\n\r\n        // split because in portfolio card it is in '<statisticName>: <number>' format\r\n        return this.titles[value.split(': ')[0].toLowerCase()] + suffix\r\n      }\r\n    },\r\n\r\n    watch: {\r\n      filterText(val) {\r\n        let filterCl = null\r\n\r\n        Object.keys(this.filtering).forEach(cl => { \r\n          if (this.filtering[cl]) {\r\n            filterCl = cl\r\n          } \r\n        })\r\n        this.$emit('filtered', { column: filterCl, filter: val })        \r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style>\r\n.interactive {\r\n  cursor: pointer\r\n}\r\n\r\n.notCheckbox {\r\n  text-align: right;\r\n  white-space: pre-wrap\r\n}\r\n\r\n.checkbox {\r\n  text-align: center\r\n}\r\n\r\n.selected {\r\n  background-color: darkslategrey\r\n}\r\n</style>"],"sourceRoot":"src/custom/components/Tables"}]}