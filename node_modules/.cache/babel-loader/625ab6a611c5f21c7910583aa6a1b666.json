{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js!/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/components/AssetsPatternsPicker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/components/AssetsPatternsPicker.vue","mtime":1587025922792},{"path":"/home/dufek/Documents/gitlab/frs-apps/.babelrc","mtime":1576496397055},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["AssetsPatternsPicker.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <card>\n    <div class=\" row xl-flex\">\n        <audio id=\"connectionLost\" src=\"media/connectionLost.mp3\" preload=\"auto\"></audio>\n\n        <div class=\"col-12 col-xl-4\"  style=\"min-width: 300px;\" v-if=\"showDatePickers\">\n            <!-- timeframe dropdown -->\n            <div :style=\"'position: relative; left: ' + tfLeftPos + 'px; z-index: 1' + (tfLeftPos === defaultTfLeftPos ? '' : '; top: 10px')\">\n                <base-dropdown class=\"dd\" \n                               menu-classes=\"dropdown-black\" \n                               title-classes=\"btn btn-secondary\"\n                               :title=\"timeframe\">\n                    <ul style=\"list-style-type: none;\">\n                        <li v-for=\"tframe in $t('research.patternLab.timeframes').filter(el => el !== timeframe)\">            \n                            <a class=\"dropdown-item\" \n                               @click=\"selectTimeframe(tframe)\" \n                               href=\"#\">\n                               {{ tframe }}\n                            </a>\n                        </li>\n                    </ul>\n                </base-dropdown>\n            </div>\n\n            <!-- date pickers -->\n            <div class=\"col-xs-3\" :style=\"'position: relative' + (tfLeftPos === defaultTfLeftPos ? '' : '')\">\n                <div class=\"controls\">\n                            <div>\n                                <!-- <slot :row=\"item\"> -->\n                                <div>{{ $t('research.from') }}<datepicker v-model=\"range.from\" \n                                                :disabled-dates=\"disabledDatesFrom\" \n                                                :clear-button=\"true\" \n                                                :format=\"dateFormat\" \n                                                :placeholder=\"$t('research.pickDate')\" />\n                                </div>\n                                <!-- </slot> -->\n                            </div>\n                            <div>\n                                <!-- <slot :row=\"item\"> -->\n                                <div>{{ $t('research.to') }}<datepicker v-model=\"range.to\" \n                                                :disabled-dates=\"disabledDatesTo\" \n                                                :clear-button=\"true\" \n                                                :format=\"dateFormat\" \n                                                :placeholder=\"$t('research.pickDate')\" />\n                                </div>\n                                <!-- </slot> -->\n                            </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- assets -->\n        <div class=\"col-12 col-xl-4\" style=\"text-align: center;\">\n            <label>{{ $t('research.patternLab.assets') }}</label>\n            <Dropdown :options=\"assets\"\n                      :disabled=\"false\"\n                      name=\"ddAssets\"\n                      :maxItem=\"maxItems\"\n                      :placeholder=\"$t('research.patternLab.type2search')\"\n                      @filter=\"getAssets\"\n                      @selected=\"ddSelectAsset\">\n            </Dropdown>\n            <base-table :data=\"selectedAssets\" :columns=\"[ 'symbol', 'name' ]\">\n                <template slot=\"columns\">\n                    <th></th>\n                    <th></th>\n                </template>  \n                <template slot-scope=\"{row}\">\n                    <div class=\"regrow\">\n                        <td style=\"border: none\">\n                            <input v-if=\"oneAssetLimit\" type=\"radio\" :id=\"row.id\" :value=\"row\" v-model=\"checkedAsset\">\n                            <input v-else type=\"checkbox\" :id=\"row.id\" :value=\"row\" v-model=\"checkedAssets\">\n                        </td>\n                        <td style=\"border: none; color:white;margin: 0 1em; display: inline-block;\">{{row.symbol}}</td>\n                        <td style=\"border: none; border-left: 1px; text-align: left\">{{row.name}}</td>\n                    </div>\n                    <td class=\"td-actions text-right\" style=\"border: none\">                        \n                        <base-button size=\"sm\" icon @click=\"removeAsset(row)\" style=\"height: 1rem;width: 1rem;min-width: 1rem;font-size: 0.5rem;\">\n                            <i class=\"tim-icons icon-simple-remove\"></i>\n                        </base-button>\n                    </td>\n                </template>    \n            </base-table>\n        </div>\n\n        <!-- patterns -->\n        <div class=\"col-12 col-xl-4\" style=\"text-align: center;\">\n            <label>{{ $t('research.patternLab.patterns') }}</label>\n            <Dropdown :options=\"patterns\"\n                      :disabled=\"false\"\n                      name=\"ddPatterns\"\n                      :maxItem=\"maxItems\"\n                      :placeholder=\"$t('research.patternLab.type2search')\"\n                      @filter=\"getPatterns\"\n                      @selected=\"ddSelectPattern\">\n            </Dropdown>\n            <ul style=\"list-style-type: none; text-align: left; margin-top: 15px; padding-left: 0px\">\n                <li v-if=\"selectedPatterns.length\" :title=\"checkedAllPatterns ? $t('research.patternLab.uncheckAll') : $t('research.patternLab.checkAll')\">   \n                    <input type=\"checkbox\" @click=\"checkAllPatterns\" v-model=\"checkedAllPatterns\">\n                </li>\n                <li v-for=\"selectedPattern in selectedPatterns\">   \n                    <input type=\"checkbox\" :id=\"selectedPattern.id\" :value=\"selectedPattern\" v-model=\"checkedPatterns\">\n                    <label :for=\"selectedPattern.id\" style=\"margin-left: 10px\">{{ selectedPattern.name }}</label>\n                </li>\n            </ul> \n        </div>\n\n        </div>\n        <!-- Add button -->\n        <div class=\"button-wrap\">\n            <base-button native-type=\"submit\" type=\"secondary\" @click=\"btnClick\" style=\"width: 300px\">{{ btnText }}</base-button>\n        </div>\n    </card>\n</template>\n<script>\nimport Datepicker from 'vuejs-datepicker';\nimport Dropdown from 'vue-simple-search-dropdown';\nimport { BaseTable } from '@/components'\n\nimport constants from '@/custom/assets/js/constants';\nimport helper from '@/custom/assets/js/helper';\n\n\nexport default {\n    name: 'assets-patterns-picker',\n    components: {  \n      Datepicker,   \n      Dropdown,\n      BaseTable   \n    },\n    props: {\n        title: {\n            type: String,\n            description: \"Title used in errors\"\n        },\n        oneAssetLimit: {\n            type: Boolean,\n            description: \"Whether only one asset can be checked\"\n        },\n        showDatePickers: {\n            type: Boolean,\n            default: true,\n            description: \"Whether datepickers (and timeFrame dropdown) section should be showed\"\n        },\n        tfLeftPos: {\n            type: Number,\n            default: 0,\n            description: \"Position of timeFrame dropdown from left in pixels\"\n        },\n        btnText: {\n            type: String,\n            description: \"Text of main submit button\"\n        }\n    },\n\n    data() {\n        return {\n            defaultTfLeftPos: 0,\n            timeframe: this.$t('research.patternLab.timeframes')[0],\n\n            // datepickers\n            range: {\n                from: null,\n                to: null\n            },\n\n            // assets\n            disabledDatesAsset: null,            \n            selectedAssets: [],\n            checkedAssets: [],\n            checkedAsset: null, // only used when oneAssetLimit is true\n            assets: [],\n\n            // patterns\n            selectedPatterns: [],\n            checkedPatterns: [],\n            checkedAllPatterns: false,\n            patterns: []\n        }\n    },\n\n    computed: {\n        dateFormat() {\n            return \"yyyy-MM-dd\"\n        },\n        disabledDatesFrom() {\n            return {\n                from: this.disabledDatesAsset \n                      ? (this.range.to ? new Date(Math.min(this.range.to, this.disabledDatesAsset.from)) \n                      : this.disabledDatesAsset.from) : this.range.to,\n                to: this.disabledDatesAsset ? this.disabledDatesAsset.to : null\n            }\n        },\n        disabledDatesTo() {\n            return {\n                from: this.disabledDatesAsset ? this.disabledDatesAsset.from : null,\n                to: this.disabledDatesAsset \n                    ? (this.range.from ? new Date(Math.max(this.range.from, this.disabledDatesAsset.to)) \n                    : this.disabledDatesAsset.to) : this.range.from\n            }\n        },\n        maxItems() {\n            return constants.maxRows\n        },\n    },\n\n    methods: {\n        initData() {\n            let data = helper.getAssetsPatternsPickerData(this.$store)\n            if (data) {\n                ({ timeframe:this.timeframe, selectedAssets:this.selectedAssets, checkedAssets:this.checkedAssets, \n                   checkedAsset:this.checkedAsset, selectedPatterns:this.selectedPatterns, checkedPatterns:this.checkedPatterns, \n                   checkedAllPatterns:this.checkedAllPatterns } \n                = data)\n                this.range = { \n                    from: helper.deformatDate(data.range.from),\n                    to: helper.deformatDate(data.range.to)\n                }\n            }\n        },\n\n        selectTimeframe(timeframe) {\n            this.timeframe = timeframe\n            helper.updateStore(this.$store, 'timeframe', this.$t('research.patternLab.timeframes').indexOf(this.timeframe))\n            this.$emit('timeframeChanged')\n        },\n\n        // selecting asset/patterns\n        ddSelectAsset(asset) {\n            if (!('id' in asset)) {\n                return\n            }\n\n            this.ddSelect(asset, asset => asset.id, this.selectedAssets)\n\n            if (this.oneAssetLimit) {\n                this.checkedAsset = asset\n            } else {\n                this.ddSelect(asset, asset => asset.id, this.checkedAssets)\n            }\n        },\n        ddSelectPattern(pattern) {\n            if (!('id' in pattern)) {\n                return\n            }\n\n            this.ddSelect(pattern, pattern => pattern.id, this.selectedPatterns)\n            this.ddSelect(pattern, pattern => pattern.id, this.checkedPatterns)\n\n            if (this.checkedAllPatterns) {  // works only in debug - why?\n                this.checkedAllPatterns = false\n            } else if (this.checkedPatterns.length === this.selectedPatterns.length) {\n                this.checkedAllPatterns = true\n            }\n        },\n        ddSelect(item, itemKeySelector, selectedItems) {\n            if (!selectedItems.map(itemKeySelector).includes(itemKeySelector(item))) {\n                selectedItems.push(item)\n            }\n        },\n\n        removeAsset(asset) {\n            this.selectedAssets.splice(this.selectedAssets.map(sa => sa.symbol).indexOf(asset.symbol), 1);\n\n            // remove also checked asset\n            if (this.oneAssetLimit) {\n                if (this.checkedAsset && this.checkedAsset.id === asset.id) {\n                    if (this.selectedAssets.length) {\n                        this.checkedAsset = this.selectedAssets[0]\n                    } else {\n                        this.checkedAsset = null                    \n                    }\n                }\n            } else if (this.checkedAssets.map(a => a.symbol).includes(asset.symbol)) {                \n                this.checkedAssets.splice(this.checkedAssets.map(a => a.symbol).indexOf(asset.symbol), 1)                \n            }\n\n            // if only checked asset was removed\n            if (!this.checkedAssets.length && this.selectedAssets.length) {\n                this.checkedAssets.push(this.selectedAssets[0])                \n            }\n        },\n        updateDisabledDatesAsset() {\n            this.disabledDatesAsset = null\n            let fromChanged = false\n            let toChanged = false\n            let checkedAssets = this.oneAssetLimit ? (this.checkedAsset ? [ this.checkedAsset ] : []) : this.checkedAssets\n\n            checkedAssets.forEach(asset => {\n                this.$http\n                .get(helper.getPatternLabChartUrl(asset, this.timeframe)) // to-do: cache this result !\n                .then(response => {\n                    let newFrom = new Date(Math.max(...Object.keys(response.data.Close)))    // maximum asset date !                    \n                    let newTo = new Date(Math.min(...Object.keys(response.data.Close)))       // minimum asset date !\n\n                    this.disabledDatesAsset = {\n                        from: new Date(this.disabledDatesAsset ? Math.min(this.disabledDatesAsset.from, newFrom) : newFrom),\n                        to: new Date(this.disabledDatesAsset ? Math.max(this.disabledDatesAsset.to, newTo) : newTo)\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                    \n                    if (error.message === constants.strings.networkError) {\n                        helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', this.$t('notifications.beConnectionLost') + '(' + this.$t('sidebar.patternLab') + ')')\n                    }\n                })\n                .finally(() => {\n                    if (this.range.from && (this.range.from < this.disabledDatesAsset.to || this.range.from > this.disabledDatesAsset.from)) {\n                        this.range.from = this.disabledDatesAsset.to\n\n                        if (!fromChanged) {\n                            this.$notify({\n                                type: 'warning', \n                                message: this.$t('notifications.fromChanged') + ' (' + this.$t('sidebar.patternLab') + ' ' + this.$t('research.patternLab.chart.title') + ').'\n                            })\n                            fromChanged = true\n                        }\n                    }\n                    if (this.range.to && (this.range.to > this.disabledDatesAsset.from || this.range.to < this.disabledDatesAsset.to)) {\n                        this.range.to = this.disabledDatesAsset.from\n\n                        if (!toChanged) {\n                            this.$notify({\n                                type: 'warning', \n                                message: this.$t('notifications.toChanged') + ' (' + this.$t('sidebar.patternLab') + ' ' + this.$t('research.patternLab.chart.title') + ').'\n                            })\n                            toChanged = true\n                        }\n                    }\n                })\n            })\n        },\n        getAssets(query) {\n            // to-do: eliminate component's bug - redudant call for selected item\n            if (query) {\n                this.$http\n                .get(constants.urls.patternLab.asset + query)\n                .then(response => {\n                    this.assets = response.data.results\n                                .filter(result => !this.selectedAssets.map(sa => sa.symbol).includes(result.symbol))\n                                .map(result => {                                     \n                                    return {\n                                        id: result.id, \n                                        symbol: result.symbol,\n                                        name: result.name ? result.name : result.symbol\n                                    }\n                                })\n                })\n                .catch(error => {\n                    console.log(error);\n                    \n                    if (error.message === constants.strings.networkError) {\n                        helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', this.$t('notifications.beConnectionLost') + '(' + this.$t('sidebar.patternLab') + ')')\n                    }\n                })\n                .finally(() => {})\n            }\n        },\n\n        checkAllPatterns() {\n            if (this.checkedAllPatterns) {\n                this.checkedPatterns = []\n            } else {          \n                this.checkedPatterns = this.selectedPatterns          \n            }\n        },\n        getPatterns(query) {\n            // to-do: eliminate component's bug - redudant call for selected item        \n            if (query) {\n                this.$http\n                .get(constants.urls.patternLab.pattern + query)\n                .then(response => {\n                    this.patterns = response.data.filter(result => !this.selectedPatterns.map(sp => sp.name).includes(result.name))\n                })\n                .catch(error => {\n                    console.log(error);\n                    \n                    if (error.message === constants.strings.networkError) {\n                        helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', this.$t('notifications.beConnectionLost') + '(' + this.$t('sidebar.patternLab') + ')')\n                    }\n                })\n                .finally(() => {})\n            }\n        },\n\n        btnClick() {\n            if ((!this.oneAssetLimit && !this.checkedAssets.length) || (this.oneAssetLimit && !this.checkedAsset)) {\n                this.$notify({\n                    type: 'warning', \n                    message: this.$t('notifications.addNoAsset') + ' (' + this.$t('sidebar.patternLab') + ' ' + this.title + ').'\n                })    \n\n                return\n            }\n            \n            if (!this.checkedPatterns.length) {\n                this.$notify({\n                    type: 'warning', \n                    message: this.$t('notifications.addNoPattern') + ' (' + this.$t('sidebar.patternLab') + ' ' + this.title + ').'\n                })  \n            }\n\n            this.$emit('btnClicked')\n        }\n    },\n\n    mounted() {\n      this.initData()\n    },\n\n    watch: {\n        range: {\n            handler(val){\n                helper.updateStore(this.$store, 'range', { from: helper.formatDate(val.from, ''), to: helper.formatDate(val.to, '') }) \n            },\n            deep: true\n        },\n\n        // assets\n        selectedAssets(value) {\n            helper.updateStore(this.$store, 'selectedAssets', value)            \n        },\n        checkedAssets(value) {\n            helper.updateStore(this.$store, 'checkedAssets', value) \n            this.updateDisabledDatesAsset()\n        },\n        checkedAsset(value) {\n            helper.updateStore(this.$store, 'checkedAsset', value) \n            this.updateDisabledDatesAsset()\n        },\n\n        // patterns\n        selectedPatterns(value) {\n            helper.updateStore(this.$store, 'selectedPatterns', value)            \n        },\n        checkedPatterns(value) {\n            helper.updateStore(this.$store, 'checkedPatterns', value)            \n        },\n        checkedAllPatterns(value) {\n            helper.updateStore(this.$store, 'checkedAllPatterns', value)            \n        }\n    }\n}\n</script>\n<style>\n\n</style>"],"sourceRoot":"src/custom/components"}]}