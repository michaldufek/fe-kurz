{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js!/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/dashboard/Details.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/dashboard/Details.vue","mtime":1587025922788},{"path":"/home/dufek/Documents/gitlab/frs-apps/.babelrc","mtime":1576496397055},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9ob21lL2R1ZmVrL0RvY3VtZW50cy9naXRsYWIvZnJzLWFwcHMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczIvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczcucHJvbWlzZS5maW5hbGx5IjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFN0cmF0ZWd5Q2FyZCBmcm9tICdAL2N1c3RvbS9jb21wb25lbnRzL0NhcmRzL1N0cmF0ZWd5Q2FyZC52dWUnOwppbXBvcnQgY29uc3RhbnRzIGZyb20gJ0AvY3VzdG9tL2Fzc2V0cy9qcy9jb25zdGFudHMnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgU3RyYXRlZ3lDYXJkOiBTdHJhdGVneUNhcmQKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzdHJhdGVnaWVzRGF0YTogW10sCiAgICAgIGNvbm5lY3RlZDogZmFsc2UsCiAgICAgIGVtYWlsOiAnJwogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXRTdHJhdGVnaWVzOiBmdW5jdGlvbiBpbml0U3RyYXRlZ2llcygpIHsKICAgICAgdmFyIGRhdGEgPSB0aGlzLiRzdG9yZS5nZXRJdGVtKGNvbnN0YW50cy50cmFuc2xhdGlvbktleXMuSUJMb2dpbik7CgogICAgICBpZiAoZGF0YSkgewogICAgICAgIHRoaXMuZW1haWwgPSBkYXRhLmVtYWlsOwogICAgICAgIHRoaXMuY2hlY2tHV3J1bm5pbmcoKTsgLy8gbm8gbmVlZCB0byBzZXQgaW50ZXJ2YWwgYmVjYXVzZSBvbmx5IGxpdmUgcG9ydGZvbGlvIHNob3VsZCBiZSBoZXJlCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5zZXRTdHJhdGVnaWVzKCk7CiAgICAgIH0KICAgIH0sCiAgICBjaGVja0dXcnVubmluZzogZnVuY3Rpb24gY2hlY2tHV3J1bm5pbmcoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLiRodHRwLmdldChjb25zdGFudHMudXJscy5saXZlRGVwbC5nYXRld2F5LnN0YXR1cyArICcvJyArIHRoaXMuZW1haWwpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgaWYgKCdlcnJvcicgaW4gcmVzcG9uc2UuZGF0YSkgewogICAgICAgICAgaGVscGVyLm5vdGlmeUF1ZGlvKF90aGlzLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29ubmVjdGlvbkxvc3QnKSwgJ2RhbmdlcicsICIiLmNvbmNhdChfdGhpcy4kdCgnc2lkZWJhci5kZXRhaWxzJyksICIgIikuY29uY2F0KF90aGlzLiR0KCdsb2dpbi5JQi5zdGF0dXMnKSwgIiAtICIpLmNvbmNhdChyZXNwb25zZS5kYXRhLmVycm9yKSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzLmNvbm5lY3RlZCA9IHJlc3BvbnNlLmRhdGEuc3RhdHVzOwogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwoKICAgICAgICBpZiAoZXJyb3IubWVzc2FnZSA9PT0gY29uc3RhbnRzLnN0cmluZ3MubmV0d29ya0Vycm9yKSB7CiAgICAgICAgICBoZWxwZXIubm90aWZ5QXVkaW8oX3RoaXMsIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb25uZWN0aW9uTG9zdCcpLCAnZGFuZ2VyJywgIiIuY29uY2F0KF90aGlzLiR0KCdzaWRlYmFyLmRldGFpbHMnKSwgIiAiKS5jb25jYXQoX3RoaXMuJHQoJ2xvZ2luLklCLnN0YXR1cycpKSk7CiAgICAgICAgfQogICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy5zZXRTdHJhdGVnaWVzKCk7CiAgICAgIH0pOwogICAgfSwKICAgIHNldFN0cmF0ZWdpZXM6IGZ1bmN0aW9uIHNldFN0cmF0ZWdpZXMoKSB7CiAgICAgIHRoaXMuc3RyYXRlZ2llc0RhdGEgPSBbXTsKCiAgICAgIGlmICh0aGlzLmNvbm5lY3RlZCkgewogICAgICAgIHRoaXMuc3RyYXRlZ2llc0RhdGEucHVzaCh7CiAgICAgICAgICB0aXRsZTogIkxpdmUgUmVwb3J0IiwKICAgICAgICAgIGFwaVVybDogY29uc3RhbnRzLnVybHMubGl2ZURlcGwucmVwb3J0ICsgdGhpcy5lbWFpbAogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIGZvciAodmFyIF9pID0gMCwgX09iamVjdCRlbnRyaWVzID0gT2JqZWN0LmVudHJpZXMoY29uc3RhbnRzLnVybHMuY2hhcnQpOyBfaSA8IF9PYmplY3QkZW50cmllcy5sZW5ndGg7IF9pKyspIHsKICAgICAgICAgIHZhciBfT2JqZWN0JGVudHJpZXMkX2kgPSBfc2xpY2VkVG9BcnJheShfT2JqZWN0JGVudHJpZXNbX2ldLCAyKSwKICAgICAgICAgICAgICBrZXkgPSBfT2JqZWN0JGVudHJpZXMkX2lbMF0sCiAgICAgICAgICAgICAgdmFsdWUgPSBfT2JqZWN0JGVudHJpZXMkX2lbMV07CgogICAgICAgICAgdGhpcy5zdHJhdGVnaWVzRGF0YS5wdXNoKHsKICAgICAgICAgICAgdGl0bGU6IGtleSwKICAgICAgICAgICAgYXBpVXJsOiB2YWx1ZQogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5pbml0U3RyYXRlZ2llcygpOwogIH0KfTs="},{"version":3,"sources":["Details.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAYA,OAAA,YAAA,MAAA,4CAAA;AACA,OAAA,SAAA,MAAA,8BAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,YAAA,EAAA;AADA,GADA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA,KAFA;AAGA,MAAA,KAAA,EAAA;AAHA,KAAA;AAKA,GAXA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,UAAA,IAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,eAAA,CAAA,OAAA,CAAA;;AACA,UAAA,IAAA,EAAA;AACA,aAAA,KAAA,GAAA,IAAA,CAAA,KAAA;AACA,aAAA,cAAA,GAFA,CAEA;AACA,OAHA,MAGA;AACA,aAAA,aAAA;AACA;AACA,KATA;AAWA,IAAA,cAXA,4BAWA;AAAA;;AACA,WAAA,KAAA,CACA,GADA,CACA,SAAA,CAAA,IAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA,GAAA,GAAA,GAAA,KAAA,KADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,YAAA,WAAA,QAAA,CAAA,IAAA,EAAA;AACA,UAAA,MAAA,CAAA,WAAA,CAAA,KAAA,EAAA,QAAA,CAAA,cAAA,CAAA,gBAAA,CAAA,EAAA,QAAA,YAAA,KAAA,CAAA,EAAA,CAAA,iBAAA,CAAA,cAAA,KAAA,CAAA,EAAA,CAAA,iBAAA,CAAA,gBAAA,QAAA,CAAA,IAAA,CAAA,KAAA;AACA,SAFA,MAEA;AACA,UAAA,KAAA,CAAA,SAAA,GAAA,QAAA,CAAA,IAAA,CAAA,MAAA;AACA;AACA,OARA,EASA,KATA,CASA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;;AACA,YAAA,KAAA,CAAA,OAAA,KAAA,SAAA,CAAA,OAAA,CAAA,YAAA,EAAA;AACA,UAAA,MAAA,CAAA,WAAA,CAAA,KAAA,EAAA,QAAA,CAAA,cAAA,CAAA,gBAAA,CAAA,EAAA,QAAA,YAAA,KAAA,CAAA,EAAA,CAAA,iBAAA,CAAA,cAAA,KAAA,CAAA,EAAA,CAAA,iBAAA,CAAA;AACA;AACA,OAdA,EAeA,OAfA,CAeA,YAAA;AACA,QAAA,KAAA,CAAA,aAAA;AACA,OAjBA;AAkBA,KA9BA;AAgCA,IAAA,aAhCA,2BAgCA;AACA,WAAA,cAAA,GAAA,EAAA;;AAEA,UAAA,KAAA,SAAA,EAAA;AACA,aAAA,cAAA,CAAA,IAAA,CAAA;AACA,UAAA,KAAA,EAAA,aADA;AAEA,UAAA,MAAA,EAAA,SAAA,CAAA,IAAA,CAAA,QAAA,CAAA,MAAA,GAAA,KAAA;AAFA,SAAA;AAIA,OALA,MAMA;AACA,2CAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,IAAA,CAAA,KAAA,CAAA,qCAAA;AAAA;AAAA,cAAA,GAAA;AAAA,cAAA,KAAA;;AACA,eAAA,cAAA,CAAA,IAAA,CAAA;AACA,YAAA,KAAA,EAAA,GADA;AAEA,YAAA,MAAA,EAAA;AAFA,WAAA;AAIA;AACA;AACA;AAjDA,GAbA;AAiEA,EAAA,OAjEA,qBAiEA;AACA,SAAA,cAAA;AACA;AAnEA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <ul style=\"list-style-type: none;\">\r\n      <li v-for=\"strategyData in strategiesData\">\r\n        <strategy-card :title=\"strategyData.title\"\r\n                       :apiUrl=\"strategyData.apiUrl\">\r\n        </strategy-card>\r\n      </li>\r\n    </ul>\r\n  </div> \r\n</template>\r\n<script>\r\n  import StrategyCard from '@/custom/components/Cards/StrategyCard.vue';\r\n  import constants from '@/custom/assets/js/constants';\r\n\r\n  export default {\r\n    components: {\r\n      StrategyCard\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        strategiesData: [],\r\n        connected: false,\r\n        email: ''\r\n      };\r\n    },\r\n\r\n    methods: {\r\n      initStrategies() { \r\n        let data = this.$store.getItem(constants.translationKeys.IBLogin)\r\n        if (data) {\r\n          this.email = data.email\r\n          this.checkGWrunning()   // no need to set interval because only live portfolio should be here\r\n        } else {\r\n          this.setStrategies()\r\n        }\r\n      },\r\n\r\n      checkGWrunning() {\r\n        this.$http\r\n        .get(constants.urls.liveDepl.gateway.status + '/' + this.email)\r\n        .then(response => {\r\n          if ('error' in response.data) {\r\n            helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t('sidebar.details')} ${this.$t('login.IB.status')} - ${response.data.error}`)\r\n          } else {\r\n            this.connected = response.data.status\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n          if (error.message === constants.strings.networkError) {\r\n            helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t('sidebar.details')} ${this.$t('login.IB.status')}`)\r\n          }\r\n        })\r\n        .finally(() => {\r\n          this.setStrategies()\r\n        })\r\n      },\r\n\r\n      setStrategies() {        \r\n        this.strategiesData = []\r\n\r\n        if (this.connected) {\r\n          this.strategiesData.push({\r\n            title: \"Live Report\",\r\n            apiUrl: constants.urls.liveDepl.report + this.email\r\n          })\r\n        }\r\n        else {\r\n          for (const [key, value] of Object.entries(constants.urls.chart)) {\r\n            this.strategiesData.push({\r\n              title: key,\r\n              apiUrl: value\r\n            })\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      this.initStrategies();\r\n    }\r\n  }\r\n</script>\r\n<style>\r\n</style>"],"sourceRoot":"src/custom/apps/dashboard"}]}