{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js!/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/research/patternLab/Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/research/patternLab/Chart.vue","mtime":1587025922792},{"path":"/home/dufek/Documents/gitlab/frs-apps/.babelrc","mtime":1576496397055},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNy5wcm9taXNlLmZpbmFsbHkiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgQXNzZXRzUGF0dGVybnNQaWNrZXIgZnJvbSAnQC9jdXN0b20vY29tcG9uZW50cy9Bc3NldHNQYXR0ZXJuc1BpY2tlcic7CmltcG9ydCBGYW5jeUNoYXJ0IGZyb20gJ0AvY3VzdG9tL2NvbXBvbmVudHMvQ2hhcnRzL0ZhbmN5Q2hhcnQnOwppbXBvcnQgT2hsY0NoYXJ0IGZyb20gJ0AvY3VzdG9tL2NvbXBvbmVudHMvQ2hhcnRzL09obGNDaGFydCc7CmltcG9ydCBGYW5jeVRhYmxlIGZyb20gJ0AvY3VzdG9tL2NvbXBvbmVudHMvVGFibGVzL0ZhbmN5VGFibGUnOwppbXBvcnQgY29uc3RhbnRzIGZyb20gJ0AvY3VzdG9tL2Fzc2V0cy9qcy9jb25zdGFudHMnOwppbXBvcnQgaGVscGVyIGZyb20gJ0AvY3VzdG9tL2Fzc2V0cy9qcy9oZWxwZXInOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQXNzZXRzUGF0dGVybnNQaWNrZXI6IEFzc2V0c1BhdHRlcm5zUGlja2VyLAogICAgRmFuY3lDaGFydDogRmFuY3lDaGFydCwKICAgIE9obGNDaGFydDogT2hsY0NoYXJ0LAogICAgRmFuY3lUYWJsZTogRmFuY3lUYWJsZQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIC8vIGZpeGVzIHgtYXhlcyBsYWJlbCBvdmVybGFwcGluZwogICAgLy8gaHR0cHM6Ly93d3cuY2hhcnRqcy5vcmcvZG9jcy9sYXRlc3QvYXhlcy9jYXJ0ZXNpYW4vP2g9YXV0b3NraXAKICAgIHJldHVybiB7CiAgICAgIHN0b3JlS2V5OiAncmVzZWFyY2gucGF0dGVybkxhYi5jaGFydCcsCiAgICAgIC8vIGFzc2V0cy1wYXR0ZXJucy1waWNrZXIKICAgICAgcmFuZ2U6IHsKICAgICAgICBmcm9tOiBudWxsLAogICAgICAgIHRvOiBudWxsCiAgICAgIH0sCiAgICAgIHRpbWVmcmFtZTogbnVsbCwKICAgICAgYXNzZXQ6IG51bGwsCiAgICAgIHBhdHRlcm5zOiBbXSwKICAgICAgLy8gY2hhcnQKICAgICAgY2hhcnRUeXBlOiB0aGlzLiR0KCdyZXNlYXJjaC5wYXR0ZXJuTGFiLmNoYXJ0VHlwZXMnKVswXSwKICAgICAgY2hhcnRVcmw6IG51bGwsCiAgICAgIGNoYXJ0S2V5OiAwLAogICAgICAvLyBwYXR0ZXJucyBoaXN0b3J5CiAgICAgIHBhdHRlcm5zSGlzdG9yeVVybDogW10sCiAgICAgIHBhdHRlcm5MYWJlbHM6IFtdLAogICAgICB0YWJsZUtleTogMAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBvaGxjQ2hhcnRUaXRsZTogZnVuY3Rpb24gb2hsY0NoYXJ0VGl0bGUoKSB7CiAgICAgIC8vIHRpdGxlIGluIGZvcm0gPGFzc2V0PiAoW3BhdHRlcm5zXSkgLSBtb3JlIHRoYW4gMyBwYXR0ZXJucyB3aWxsIGJlIHJlcGxhY2VkIGJ5ICcuLi4nCiAgICAgIGlmICh0aGlzLmFzc2V0KSB7CiAgICAgICAgdmFyIG1heFBhdHRlcm5zID0gMzsKICAgICAgICB2YXIgcGF0dGVybnMgPSB0aGlzLnBhdHRlcm5zLnNsaWNlKDAsIG1heFBhdHRlcm5zKS5tYXAoZnVuY3Rpb24gKHApIHsKICAgICAgICAgIHJldHVybiBwLm5hbWU7CiAgICAgICAgfSk7CgogICAgICAgIGlmICh0aGlzLnBhdHRlcm5zLmxlbmd0aCA+IG1heFBhdHRlcm5zKSB7CiAgICAgICAgICBwYXR0ZXJucyA9IHBhdHRlcm5zLmNvbmNhdChbJy4uLiddKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiB0aGlzLmFzc2V0LnN5bWJvbCArIChwYXR0ZXJucy5sZW5ndGggPyAnICgnICsgcGF0dGVybnMuam9pbignLCAnKSArICcpJyA6ICcnKTsKICAgICAgfQogICAgfSwKICAgIGhpZ2hsaWdodHM6IGZ1bmN0aW9uIGhpZ2hsaWdodHMoKSB7CiAgICAgIHJldHVybiBbewogICAgICAgIHBvaW50czogdGhpcy5wYXR0ZXJuTGFiZWxzLAogICAgICAgIGNvbG9yOiBjb25zdGFudHMuY29sb3JzLnRyYWRlRW50cnkKICAgICAgfV07CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0RGF0YTogZnVuY3Rpb24gaW5pdERhdGEoKSB7CiAgICAgIHZhciBkYXRhID0gdGhpcy4kc3RvcmUuZ2V0SXRlbSh0aGlzLnN0b3JlS2V5KTsKCiAgICAgIGlmIChkYXRhKSB7CiAgICAgICAgdGhpcy5jaGFydFR5cGUgPSB0aGlzLiR0KCdyZXNlYXJjaC5wYXR0ZXJuTGFiLmNoYXJ0VHlwZXMnKVtkYXRhLmNoYXJ0VHlwZV07CiAgICAgIH0KCiAgICAgIHRoaXMuYWRkQ2hhcnQoKTsKICAgIH0sCiAgICAvLyBjaGFydCBtZXRob2RzCiAgICBhZGRDaGFydDogZnVuY3Rpb24gYWRkQ2hhcnQoKSB7CiAgICAgIHZhciBkYXRhID0gaGVscGVyLmdldEFzc2V0c1BhdHRlcm5zUGlja2VyRGF0YSh0aGlzLiRzdG9yZSk7CgogICAgICBpZiAoZGF0YSkgewogICAgICAgIHRoaXMucmFuZ2UgPSBkYXRhLnJhbmdlOwogICAgICAgIHRoaXMudGltZWZyYW1lID0gZGF0YS50aW1lZnJhbWU7CiAgICAgICAgdGhpcy5hc3NldCA9IGRhdGEuY2hlY2tlZEFzc2V0OwogICAgICAgIHRoaXMucGF0dGVybnMgPSBkYXRhLmNoZWNrZWRQYXR0ZXJuczsKICAgICAgfQoKICAgICAgdGhpcy5sb2FkQ2hhcnQoKTsKICAgICAgdGhpcy5wYXR0ZXJuc0hpc3RvcnlVcmwgPSBudWxsOwoKICAgICAgaWYgKHRoaXMucGF0dGVybnMubGVuZ3RoKSB7CiAgICAgICAgLy8gbG9hZCBwYXR0ZXJucyBoaXN0b3J5IHRhYmxlCiAgICAgICAgdGhpcy5wYXR0ZXJuc0hpc3RvcnlVcmwgPSBoZWxwZXIuZ2V0UGF0dGVybkxhYkhpc3RvcnlVcmwodGhpcy5hc3NldCA/IFt0aGlzLmFzc2V0XSA6IFtdLCB0aGlzLnBhdHRlcm5zLCB0aGlzLnRpbWVmcmFtZSk7CiAgICAgIH0KCiAgICAgIHRoaXMucGF0dGVybkxhYmVscyA9IFtdOwogICAgICB0aGlzLnRhYmxlS2V5Kys7IC8vIGZvcmNlIHJlbG9hZCBvZiBmYW5jeS10YWJsZSBjb21wb25lbnQKICAgIH0sCiAgICBsb2FkQ2hhcnQ6IGZ1bmN0aW9uIGxvYWRDaGFydCgpIHsKICAgICAgdGhpcy5jaGFydFVybCA9IG51bGw7CgogICAgICBpZiAodGhpcy5hc3NldCkgewogICAgICAgIHRoaXMuY2hhcnRVcmwgPSBoZWxwZXIuZ2V0UGF0dGVybkxhYkNoYXJ0VXJsKHRoaXMuYXNzZXQsIHRoaXMudGltZWZyYW1lLCB0aGlzLnJhbmdlKTsKICAgICAgfQoKICAgICAgdGhpcy5jaGFydEtleSsrOyAvLyBmb3JjZSByZWxvYWQgb2YgZmFuY3ktY2hhcnQgY29tcG9uZW50CiAgICB9LAogICAgLy8gZW1pdGVkIGV2ZW50cwogICAgdGltZWZyYW1lQ2hhbmdlZDogZnVuY3Rpb24gdGltZWZyYW1lQ2hhbmdlZCgpIHsKICAgICAgdmFyIGRhdGEgPSBoZWxwZXIuZ2V0QXNzZXRzUGF0dGVybnNQaWNrZXJEYXRhKHRoaXMuJHN0b3JlKTsKCiAgICAgIGlmIChkYXRhKSB7CiAgICAgICAgdGhpcy50aW1lZnJhbWUgPSBkYXRhLnRpbWVmcmFtZTsKICAgICAgfQoKICAgICAgdGhpcy5sb2FkQ2hhcnQoKTsKICAgIH0sCiAgICBzZWxlY3RlZDogZnVuY3Rpb24gc2VsZWN0ZWQocm93SW5kZXgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGlmIChyb3dJbmRleCA+IC0xKSB7CiAgICAgICAgdmFyIGRhdGEgPSB0aGlzLiRzdG9yZS5nZXRJdGVtKHRoaXMuc3RvcmVLZXkpOwogICAgICAgIHZhciBzaWduYWxTZXQgPSBudWxsOyAvLyBwYXR0ZXJuc0hpc3RvcnlVcmwgYW5kIGRhdGEgKHdpdGggcm93c1NpZ25hbElkcykgbXVzdCBleGlzdCBpZiB3ZSBtYW5hZ2VkIHRvIGdldCBoZXJlIC0gbm8gbmVlZCB0byBjaGVjawoKICAgICAgICB0aGlzLiRodHRwLmdldCh0aGlzLnBhdHRlcm5zSGlzdG9yeVVybCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgIHZhciBmaWx0ZXJlZCA9IHJlc3BvbnNlLmRhdGEuZmlsdGVyKGZ1bmN0aW9uIChkYXR1bSkgewogICAgICAgICAgICByZXR1cm4gZGF0dW0uaWQgPT09IGRhdGEucm93c1NpZ25hbElkc1tyb3dJbmRleF07CiAgICAgICAgICB9KTsKICAgICAgICAgIHNpZ25hbFNldCA9IGZpbHRlcmVkLmxlbmd0aCA/IGZpbHRlcmVkWzBdLnNpZ25hbF9zZXQgOiBudWxsOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwoKICAgICAgICAgIGlmIChlcnJvci5tZXNzYWdlID09PSBjb25zdGFudHMuc3RyaW5ncy5uZXR3b3JrRXJyb3IpIHsKICAgICAgICAgICAgaGVscGVyLm5vdGlmeUF1ZGlvKF90aGlzLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29ubmVjdGlvbkxvc3QnKSwgJ2RhbmdlcicsIF90aGlzLiR0KCdub3RpZmljYXRpb25zLmJlQ29ubmVjdGlvbkxvc3QnKSArICcoJyArIF90aGlzLiR0KCdzaWRlYmFyLnBhdHRlcm5MYWInKSArICcgJyArIF90aGlzLiR0KF90aGlzLnN0b3JlS2V5ICsgJy50aXRsZScpICsgJyknKTsKICAgICAgICAgIH0KICAgICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIGlmIChzaWduYWxTZXQpIHsKICAgICAgICAgICAgX3RoaXMucGF0dGVybkxhYmVscyA9IHNpZ25hbFNldC5tYXAoZnVuY3Rpb24gKHMpIHsKICAgICAgICAgICAgICByZXR1cm4gbmV3IERhdGUocy5kYXRlKS5nZXRUaW1lKCk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBfdGhpcy5jaGFydEtleSsrOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgY29uc29sZS5sb2coIiIuY29uY2F0KF90aGlzLiR0KCdzZXJ2ZXJJbmNvbnRpbmVuY3knKSwgIjogQ291bGRuJ3QgZmluZCBzZWxlY3RlZCBzaWduYWwgc2V0IG9uIHNlcnZlciEiKSk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5wYXR0ZXJuTGFiZWxzID0gW107CiAgICAgICAgdGhpcy5jaGFydEtleSsrOwogICAgICB9CiAgICB9LAogICAgc2VsZWN0Q2hhcnRUeXBlOiBmdW5jdGlvbiBzZWxlY3RDaGFydFR5cGUoY2hhcnRUeXBlKSB7CiAgICAgIHRoaXMuY2hhcnRUeXBlID0gY2hhcnRUeXBlOwogICAgICB0aGlzLmxvYWRDaGFydCgpOwogICAgfSwKICAgIC8vIHRhYmxlIG1ldGhvZHMgKHBhdHRlcm5zIGhpc3RvcnkpCiAgICByb3dzQ3JlYXRvcjogZnVuY3Rpb24gcm93c0NyZWF0b3IocmVzcG9uc2VEYXRhKSB7CiAgICAgIHZhciByb3dzID0gW107CiAgICAgIHZhciByb3dzU2lnbmFsSWRzID0gW107CiAgICAgIHJlc3BvbnNlRGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgdmFyIHBhdHRlcm4gPSBkYXRhLnBhdHRlcm4ubmFtZTsKICAgICAgICBkYXRhLnNpZ25hbF9zZXQuZm9yRWFjaChmdW5jdGlvbiAoc2lnbmFsKSB7CiAgICAgICAgICB2YXIgcm93ID0gW107CiAgICAgICAgICByb3cucHVzaChzaWduYWwuZGF0ZSk7CiAgICAgICAgICByb3cucHVzaChwYXR0ZXJuKTsKICAgICAgICAgIHJvdy5wdXNoKGhlbHBlci5jb252ZXJ0RGlyZWN0aW9uKHNpZ25hbC5kaXJlY3Rpb24pKTsKICAgICAgICAgIHJvd3MucHVzaChyb3cpOwogICAgICAgICAgcm93c1NpZ25hbElkcy5wdXNoKGRhdGEuaWQpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgaGVscGVyLnVwZGF0ZVN0b3JlKHRoaXMuJHN0b3JlLCAncm93c1NpZ25hbElkcycsIHJvd3NTaWduYWxJZHMsIHRoaXMuc3RvcmVLZXkpOwogICAgICByZXR1cm4gcm93czsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBjaGFydFR5cGU6IGZ1bmN0aW9uIGNoYXJ0VHlwZSh2YWwpIHsKICAgICAgaGVscGVyLnVwZGF0ZVN0b3JlKHRoaXMuJHN0b3JlLCAnY2hhcnRUeXBlJywgdGhpcy4kdCgncmVzZWFyY2gucGF0dGVybkxhYi5jaGFydFR5cGVzJykuaW5kZXhPZih2YWwpLCB0aGlzLnN0b3JlS2V5KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmluaXREYXRhKCk7CiAgfQp9Ow=="},{"version":3,"sources":["Chart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA,OAAA,oBAAA,MAAA,0CAAA;AACA,OAAA,UAAA,MAAA,uCAAA;AACA,OAAA,SAAA,MAAA,sCAAA;AACA,OAAA,UAAA,MAAA,uCAAA;AAEA,OAAA,SAAA,MAAA,8BAAA;AACA,OAAA,MAAA,MAAA,2BAAA;AAGA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,oBAAA,EAAA,oBADA;AAEA,IAAA,UAAA,EAAA,UAFA;AAGA,IAAA,SAAA,EAAA,SAHA;AAIA,IAAA,UAAA,EAAA;AAJA,GADA;AAQA,EAAA,IARA,kBAQA;AACA;AACA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,2BADA;AAGA;AACA,MAAA,KAAA,EAAA;AACA,QAAA,IAAA,EAAA,IADA;AAEA,QAAA,EAAA,EAAA;AAFA,OAJA;AAQA,MAAA,SAAA,EAAA,IARA;AASA,MAAA,KAAA,EAAA,IATA;AAUA,MAAA,QAAA,EAAA,EAVA;AAYA;AACA,MAAA,SAAA,EAAA,KAAA,EAAA,CAAA,gCAAA,EAAA,CAAA,CAbA;AAcA,MAAA,QAAA,EAAA,IAdA;AAeA,MAAA,QAAA,EAAA,CAfA;AAiBA;AACA,MAAA,kBAAA,EAAA,EAlBA;AAmBA,MAAA,aAAA,EAAA,EAnBA;AAoBA,MAAA,QAAA,EAAA;AApBA,KAAA;AAsBA,GAjCA;AAmCA,EAAA,QAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA;AACA,UAAA,KAAA,KAAA,EAAA;AACA,YAAA,WAAA,GAAA,CAAA;AACA,YAAA,QAAA,GAAA,KAAA,QAAA,CAAA,KAAA,CAAA,CAAA,EAAA,WAAA,EAAA,GAAA,CAAA,UAAA,CAAA;AAAA,iBAAA,CAAA,CAAA,IAAA;AAAA,SAAA,CAAA;;AACA,YAAA,KAAA,QAAA,CAAA,MAAA,GAAA,WAAA,EAAA;AACA,UAAA,QAAA,GAAA,QAAA,CAAA,MAAA,CAAA,CAAA,KAAA,CAAA,CAAA;AACA;;AAEA,eAAA,KAAA,KAAA,CAAA,MAAA,IAAA,QAAA,CAAA,MAAA,GAAA,OAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,CAAA;AACA;AACA,KAZA;AAcA,IAAA,UAdA,wBAcA;AACA,aAAA,CAAA;AACA,QAAA,MAAA,EAAA,KAAA,aADA;AAEA,QAAA,KAAA,EAAA,SAAA,CAAA,MAAA,CAAA;AAFA,OAAA,CAAA;AAIA;AAnBA,GAnCA;AAyDA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,UAAA,IAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,KAAA,QAAA,CAAA;;AACA,UAAA,IAAA,EAAA;AACA,aAAA,SAAA,GAAA,KAAA,EAAA,CAAA,gCAAA,EAAA,IAAA,CAAA,SAAA,CAAA;AACA;;AAEA,WAAA,QAAA;AACA,KARA;AAUA;AACA,IAAA,QAXA,sBAWA;AACA,UAAA,IAAA,GAAA,MAAA,CAAA,2BAAA,CAAA,KAAA,MAAA,CAAA;;AACA,UAAA,IAAA,EAAA;AACA,aAAA,KADA,GACA,IADA,CACA,KADA;AACA,aAAA,SADA,GACA,IADA,CACA,SADA;AACA,aAAA,KADA,GACA,IADA,CACA,YADA;AACA,aAAA,QADA,GACA,IADA,CACA,eADA;AAEA;;AAEA,WAAA,SAAA;AAEA,WAAA,kBAAA,GAAA,IAAA;;AACA,UAAA,KAAA,QAAA,CAAA,MAAA,EAAA;AACA;AACA,aAAA,kBAAA,GAAA,MAAA,CAAA,uBAAA,CAAA,KAAA,KAAA,GAAA,CAAA,KAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,QAAA,EAAA,KAAA,SAAA,CAAA;AACA;;AACA,WAAA,aAAA,GAAA,EAAA;AACA,WAAA,QAAA,GAdA,CAcA;AACA,KA1BA;AA2BA,IAAA,SA3BA,uBA2BA;AACA,WAAA,QAAA,GAAA,IAAA;;AACA,UAAA,KAAA,KAAA,EAAA;AACA,aAAA,QAAA,GAAA,MAAA,CAAA,qBAAA,CAAA,KAAA,KAAA,EAAA,KAAA,SAAA,EAAA,KAAA,KAAA,CAAA;AACA;;AACA,WAAA,QAAA,GALA,CAKA;AACA,KAjCA;AAmCA;AACA,IAAA,gBApCA,8BAoCA;AACA,UAAA,IAAA,GAAA,MAAA,CAAA,2BAAA,CAAA,KAAA,MAAA,CAAA;;AACA,UAAA,IAAA,EAAA;AACA,aAAA,SADA,GACA,IADA,CACA,SADA;AAEA;;AAEA,WAAA,SAAA;AACA,KA3CA;AA4CA,IAAA,QA5CA,oBA4CA,QA5CA,EA4CA;AAAA;;AACA,UAAA,QAAA,GAAA,CAAA,CAAA,EAAA;AACA,YAAA,IAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,KAAA,QAAA,CAAA;AACA,YAAA,SAAA,GAAA,IAAA,CAFA,CAIA;;AACA,aAAA,KAAA,CACA,GADA,CACA,KAAA,kBADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,cAAA,QAAA,GAAA,QAAA,CAAA,IAAA,CAAA,MAAA,CAAA,UAAA,KAAA;AAAA,mBAAA,KAAA,CAAA,EAAA,KAAA,IAAA,CAAA,aAAA,CAAA,QAAA,CAAA;AAAA,WAAA,CAAA;AACA,UAAA,SAAA,GAAA,QAAA,CAAA,MAAA,GAAA,QAAA,CAAA,CAAA,CAAA,CAAA,UAAA,GAAA,IAAA;AACA,SALA,EAMA,KANA,CAMA,UAAA,KAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,KAAA;;AACA,cAAA,KAAA,CAAA,OAAA,KAAA,SAAA,CAAA,OAAA,CAAA,YAAA,EAAA;AACA,YAAA,MAAA,CAAA,WAAA,CAAA,KAAA,EAAA,QAAA,CAAA,cAAA,CAAA,gBAAA,CAAA,EAAA,QAAA,EAAA,KAAA,CAAA,EAAA,CAAA,gCAAA,IAAA,GAAA,GAAA,KAAA,CAAA,EAAA,CAAA,oBAAA,CAAA,GAAA,GAAA,GAAA,KAAA,CAAA,EAAA,CAAA,KAAA,CAAA,QAAA,GAAA,QAAA,CAAA,GAAA,GAAA;AACA;AACA,SAXA,EAYA,OAZA,CAYA,YAAA;AACA,cAAA,SAAA,EAAA;AACA,YAAA,KAAA,CAAA,aAAA,GAAA,SAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,qBAAA,IAAA,IAAA,CAAA,CAAA,CAAA,IAAA,EAAA,OAAA,EAAA;AAAA,aAAA,CAAA;AACA,YAAA,KAAA,CAAA,QAAA;AACA,WAHA,MAGA;AACA,YAAA,OAAA,CAAA,GAAA,WAAA,KAAA,CAAA,EAAA,CAAA,oBAAA,CAAA;AACA;AACA,SAnBA;AAoBA,OAzBA,MAyBA;AACA,aAAA,aAAA,GAAA,EAAA;AACA,aAAA,QAAA;AACA;AACA,KA1EA;AA4EA,IAAA,eA5EA,2BA4EA,SA5EA,EA4EA;AACA,WAAA,SAAA,GAAA,SAAA;AACA,WAAA,SAAA;AACA,KA/EA;AAiFA;AACA,IAAA,WAlFA,uBAkFA,YAlFA,EAkFA;AACA,UAAA,IAAA,GAAA,EAAA;AACA,UAAA,aAAA,GAAA,EAAA;AAEA,MAAA,YAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,OAAA,GAAA,IAAA,CAAA,OAAA,CAAA,IAAA;AAEA,QAAA,IAAA,CAAA,UAAA,CAAA,OAAA,CAAA,UAAA,MAAA,EAAA;AACA,cAAA,GAAA,GAAA,EAAA;AAEA,UAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,IAAA;AACA,UAAA,GAAA,CAAA,IAAA,CAAA,OAAA;AACA,UAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,gBAAA,CAAA,MAAA,CAAA,SAAA,CAAA;AAEA,UAAA,IAAA,CAAA,IAAA,CAAA,GAAA;AACA,UAAA,aAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAAA;AACA,SATA;AAUA,OAbA;AAeA,MAAA,MAAA,CAAA,WAAA,CAAA,KAAA,MAAA,EAAA,eAAA,EAAA,aAAA,EAAA,KAAA,QAAA;AACA,aAAA,IAAA;AACA;AAvGA,GAzDA;AAmKA,EAAA,KAAA,EAAA;AACA,IAAA,SADA,qBACA,GADA,EACA;AACA,MAAA,MAAA,CAAA,WAAA,CAAA,KAAA,MAAA,EAAA,WAAA,EAAA,KAAA,EAAA,CAAA,gCAAA,EAAA,OAAA,CAAA,GAAA,CAAA,EAAA,KAAA,QAAA;AACA;AAHA,GAnKA;AAyKA,EAAA,OAzKA,qBAyKA;AACA,SAAA,QAAA;AACA;AA3KA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"row \">\r\n      <div class=\"col-xl-4 col-md-6 col-12 killflex container\">\r\n        <assets-patterns-picker :title=\"$t('research.patternLab.chart.title')\"\r\n                                :oneAssetLimit=\"true\"\r\n                                :btnText=\"$t('research.patternLab.chart.addChart')\" \r\n                                @btnClicked=\"addChart\" \r\n                                @timeframeChanged=\"timeframeChanged\" />      \r\n      </div>\r\n\r\n      <!-- chart -->\r\n      <div class=\"col-xl-8 col-md-6 col-12\">\r\n        <!-- chart settings -->\r\n        <div style=\"position: relative; z-index: 1\">\r\n          <base-dropdown class=\"dd\" \r\n                         menu-classes=\"dropdown-black\" \r\n                         title-classes=\"btn btn-secondary\"\r\n                         :title=\"chartType\">\r\n            <ul style=\"list-style-type: none;\">\r\n              <li v-for=\"chartType in $t('research.patternLab.chartTypes').filter(el => el !== chartType)\">            \r\n                <a class=\"dropdown-item\" \r\n                   @click=\"selectChartType(chartType)\" \r\n                   href=\"#\">\r\n                  {{ chartType }}\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </base-dropdown>          \r\n        </div>\r\n\r\n        <fancy-chart v-if=\"chartType === $t('research.patternLab.chartTypes')[0]\"\r\n                     :title=\"$t('sidebar.patternLab') + ' ' + $t('research.patternLab.chart.title')\"\r\n                     :apiUrls=\"chartUrl ? [ chartUrl ] : []\"\r\n                      :highlights=\"highlights\"\r\n                     :dataFields=\"[ 'Close', 'Volume' ]\"\r\n                     :responsive=\"true\"\r\n                     style=\"height: 100%\"\r\n                     :key=\"chartKey\" />\r\n        <ohlc-chart v-else \r\n                    :title=\"ohlcChartTitle\"\r\n                    :apiUrl=\"chartUrl\" \r\n                    :type=\"chartType\"\r\n                    style=\"height: 830px\" \r\n                    :key=\"chartKey\" />\r\n      </div>\r\n\r\n      <!-- patterns history -->\r\n      </div>\r\n      <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <fancy-table :title=\"$t('research.patternLab.chart.patternsHistory.title')\"\r\n                     noDataText=\"No patterns detected.\"\r\n                     :apiUrls=\"patternsHistoryUrl\"\r\n                     :columns=\"$t('research.patternLab.chart.patternsHistory.columns')\"\r\n                     :rowsCreator=\"rowsCreator\"\r\n                     :clickable=\"true\"\r\n                     @selected=\"selected\"\r\n                     :key=\"tableKey\">\r\n        </fancy-table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import AssetsPatternsPicker from '@/custom/components/AssetsPatternsPicker'\r\n  import FancyChart from '@/custom/components/Charts/FancyChart';\r\n  import OhlcChart from '@/custom/components/Charts/OhlcChart';\r\n  import FancyTable from '@/custom/components/Tables/FancyTable';  \r\n\r\n  import constants from '@/custom/assets/js/constants';\r\n  import helper from '@/custom/assets/js/helper';\r\n\r\n\r\n  export default {\r\n    components: {  \r\n      AssetsPatternsPicker,\r\n      FancyChart,\r\n      OhlcChart,\r\n      FancyTable\r\n    },\r\n\r\n    data() {\r\n      // fixes x-axes label overlapping\r\n      // https://www.chartjs.org/docs/latest/axes/cartesian/?h=autoskip\r\n      return {\r\n        storeKey: 'research.patternLab.chart',\r\n\r\n        // assets-patterns-picker\r\n        range: {\r\n          from: null,\r\n          to: null\r\n        },\r\n        timeframe: null,\r\n        asset: null,\r\n        patterns: [],\r\n\r\n        // chart\r\n        chartType: this.$t('research.patternLab.chartTypes')[0],\r\n        chartUrl: null,\r\n        chartKey: 0,        \r\n\r\n        // patterns history\r\n        patternsHistoryUrl: [],\r\n        patternLabels: [],\r\n        tableKey: 0\r\n      }\r\n    },\r\n\r\n    computed: {\r\n      ohlcChartTitle() {\r\n        // title in form <asset> ([patterns]) - more than 3 patterns will be replaced by '...'\r\n        if (this.asset) {\r\n          const maxPatterns = 3\r\n          let patterns = this.patterns.slice(0, maxPatterns).map(p => p.name)\r\n          if (this.patterns.length > maxPatterns) {\r\n            patterns = patterns.concat([ '...' ])\r\n          }\r\n\r\n          return this.asset.symbol + (patterns.length ? ' (' + patterns.join(', ') + ')' : '')\r\n        }\r\n      },\r\n\r\n      highlights() {\r\n        return [{\r\n          points: this.patternLabels,\r\n          color: constants.colors.tradeEntry \r\n        }]\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      initData() {\r\n        let data = this.$store.getItem(this.storeKey)\r\n        if (data) {\r\n          this.chartType = this.$t('research.patternLab.chartTypes')[data.chartType]\r\n        }\r\n        \r\n        this.addChart()\r\n      },\r\n\r\n      // chart methods\r\n      addChart() {\r\n        let data = helper.getAssetsPatternsPickerData(this.$store)\r\n        if (data) {\r\n          ({ range:this.range, timeframe:this.timeframe, checkedAsset:this.asset, checkedPatterns:this.patterns } = data)\r\n        }\r\n        \r\n        this.loadChart()\r\n\r\n        this.patternsHistoryUrl = null\r\n        if (this.patterns.length) {\r\n          // load patterns history table\r\n          this.patternsHistoryUrl = helper.getPatternLabHistoryUrl(this.asset ? [ this.asset ] : [], this.patterns, this.timeframe)     \r\n        }\r\n        this.patternLabels = []\r\n        this.tableKey++ // force reload of fancy-table component\r\n      },\r\n      loadChart() {\r\n        this.chartUrl = null\r\n        if (this.asset) {\r\n          this.chartUrl = helper.getPatternLabChartUrl(this.asset, this.timeframe, this.range) \r\n        }\r\n        this.chartKey++ // force reload of fancy-chart component\r\n      },      \r\n\r\n      // emited events\r\n      timeframeChanged() {\r\n        let data = helper.getAssetsPatternsPickerData(this.$store)\r\n        if (data) {\r\n          ({ timeframe:this.timeframe } = data)\r\n        }\r\n\r\n        this.loadChart()\r\n      },\r\n      selected(rowIndex) {\r\n        if (rowIndex > -1) {\r\n          let data = this.$store.getItem(this.storeKey)\r\n          let signalSet = null\r\n\r\n          // patternsHistoryUrl and data (with rowsSignalIds) must exist if we managed to get here - no need to check\r\n          this.$http\r\n          .get(this.patternsHistoryUrl)\r\n          .then(response => {\r\n            let filtered = response.data.filter(datum => datum.id === data.rowsSignalIds[rowIndex])\r\n            signalSet = filtered.length ? filtered[0].signal_set : null\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n            if (error.message === constants.strings.networkError) {\r\n              helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', this.$t('notifications.beConnectionLost') + '(' + this.$t('sidebar.patternLab') + ' ' + this.$t(this.storeKey + '.title') + ')')\r\n            }\r\n          })\r\n          .finally(() => {\r\n            if (signalSet) {\r\n              this.patternLabels = signalSet.map(s => new Date(s.date).getTime())\r\n              this.chartKey++\r\n            } else {\r\n              console.log(`${this.$t('serverIncontinency')}: Couldn't find selected signal set on server!`)\r\n            }\r\n          }) \r\n        } else {\r\n          this.patternLabels = []\r\n          this.chartKey++\r\n        }       \r\n      },\r\n      \r\n      selectChartType(chartType) {\r\n        this.chartType = chartType\r\n        this.loadChart()\r\n      },\r\n\r\n      // table methods (patterns history)\r\n      rowsCreator(responseData) {\r\n        let rows = []\r\n        let rowsSignalIds = []\r\n\r\n        responseData.forEach(data => {            \r\n            let pattern = data.pattern.name\r\n            \r\n            data.signal_set.forEach(signal => {\r\n              let row = []\r\n\r\n              row.push(signal.date)\r\n              row.push(pattern)\r\n              row.push(helper.convertDirection(signal.direction))\r\n\r\n              rows.push(row);\r\n              rowsSignalIds.push(data.id)\r\n            })\r\n          });\r\n\r\n        helper.updateStore(this.$store, 'rowsSignalIds', rowsSignalIds, this.storeKey)\r\n        return rows\r\n      }\r\n    },\r\n\r\n    watch: {\r\n      chartType(val) {   \r\n        helper.updateStore(this.$store, 'chartType', this.$t('research.patternLab.chartTypes').indexOf(val), this.storeKey)\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      this.initData()      \r\n    }\r\n  }  \r\n</script>\r\n<style>\r\n</style>"],"sourceRoot":"src/custom/apps/research/patternLab"}]}