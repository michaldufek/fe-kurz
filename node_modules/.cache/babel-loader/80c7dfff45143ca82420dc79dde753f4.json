{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js!/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/research/optimization/ParameterSweep.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/research/optimization/ParameterSweep.vue","mtime":1587030366018},{"path":"/home/dufek/Documents/gitlab/frs-apps/.babelrc","mtime":1576496397055},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5zcGxpdCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBEYXRlcGlja2VyIGZyb20gJ3Z1ZWpzLWRhdGVwaWNrZXInOwppbXBvcnQgRmFuY3lUYWJsZSBmcm9tICdAL2N1c3RvbS9jb21wb25lbnRzL1RhYmxlcy9GYW5jeVRhYmxlJzsKaW1wb3J0IEZhbmN5Q2hhcnQgZnJvbSAnQC9jdXN0b20vY29tcG9uZW50cy9DaGFydHMvRmFuY3lDaGFydCc7CmltcG9ydCBoZWxwZXIgZnJvbSAnQC9jdXN0b20vYXNzZXRzL2pzL2hlbHBlcic7IC8vIGltcG9ydCBjb25zdGFudHMgZnJvbSAnQC9jdXN0b20vYXNzZXRzL2pzL2NvbnN0YW50cyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgRGF0ZXBpY2tlcjogRGF0ZXBpY2tlciwKICAgIEZhbmN5VGFibGU6IEZhbmN5VGFibGUsCiAgICBGYW5jeUNoYXJ0OiBGYW5jeUNoYXJ0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc3RvcmVLZXk6ICdyZXNlYXJjaC5mZWF0dXJlc0VuZ2luZWVyaW5nLnBhcmFtZXRlclN3ZWVwJywKICAgICAgYmFja3Rlc3RzTmFtZXM6IFtdLAogICAgICBzZWxlY3RlZEJhY2t0ZXN0OiBudWxsLAogICAgICBwcm9maXRUYXJnZXQ6IHsKICAgICAgICBjaGVja2VkOiB0cnVlLAogICAgICAgIGZyb206IG51bGwsCiAgICAgICAgdG86IG51bGwsCiAgICAgICAgc3RlcDogbnVsbAogICAgICB9LAogICAgICBzdG9wTG9zczogewogICAgICAgIGNoZWNrZWQ6IHRydWUsCiAgICAgICAgZnJvbTogbnVsbCwKICAgICAgICB0bzogbnVsbCwKICAgICAgICBzdGVwOiBudWxsCiAgICAgIH0sCiAgICAgIHBlcmlvZDogewogICAgICAgIGZyb206IG51bGwsCiAgICAgICAgdG86IG51bGwKICAgICAgfSwKICAgICAgZXN0aW1hdGVkOiAnNS41IGhvdXJzJywKICAgICAgd2FybkVzdGltYXRlZDogZmFsc2UsCiAgICAgIHJ1bm5pbmc6IGZhbHNlLAogICAgICB1cGRhdGVLZXk6IDAKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgYnROYW1lc0ZpbHRlcmVkOiBmdW5jdGlvbiBidE5hbWVzRmlsdGVyZWQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gdGhpcy5zZWxlY3RlZEJhY2t0ZXN0ID8gdGhpcy5iYWNrdGVzdHNOYW1lcy5maWx0ZXIoZnVuY3Rpb24gKGJ0KSB7CiAgICAgICAgcmV0dXJuIGJ0LmlkICE9PSBfdGhpcy5zZWxlY3RlZEJhY2t0ZXN0LmlkOwogICAgICB9KSA6IHRoaXMuYmFja3Rlc3RzTmFtZXM7CiAgICB9LAogICAgZGF0ZUZvcm1hdDogZnVuY3Rpb24gZGF0ZUZvcm1hdCgpIHsKICAgICAgcmV0dXJuICJ5eXl5LU1NLWRkIjsKICAgIH0sCiAgICBydW5UZXh0OiBmdW5jdGlvbiBydW5UZXh0KCkgewogICAgICByZXR1cm4gdGhpcy5ydW5uaW5nID8gdGhpcy4kdCh0aGlzLnN0b3JlS2V5ICsgJy5zdG9wJykgOiB0aGlzLiR0KHRoaXMuc3RvcmVLZXkgKyAnLnJ1bicpOyAvLyByZXR1cm4gdGhpcy5ydW5uaW5nID8gdGhpcy4kdCgncmVzZWFyY2guc3RvcCcpIDogdGhpcy4kdCh0aGlzLnN0b3JlS2V5ICsgJy5ydW4nKQogICAgfSAvLyB0YWJsZUludGVydmFsKCkgewogICAgLy8gICAgIHJldHVybiBjb25zdGFudHMuaW50ZXJ2YWxzLmZlYXRFbmdSZWxvYWQKICAgIC8vIH0KCiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0RGF0YTogZnVuY3Rpb24gaW5pdERhdGEoKSB7CiAgICAgIHZhciBfaGVscGVyJGdldEJhY2t0ZXN0c04gPSBoZWxwZXIuZ2V0QmFja3Rlc3RzTmFtZXModGhpcy4kc3RvcmUsIHRoaXMuc3RvcmVLZXksIHRoaXMudXBkYXRlS2V5KTsKCiAgICAgIHRoaXMuYmFja3Rlc3RzTmFtZXMgPSBfaGVscGVyJGdldEJhY2t0ZXN0c04uYmFja3Rlc3RzTmFtZXM7CiAgICAgIHRoaXMuc2VsZWN0ZWRCYWNrdGVzdCA9IF9oZWxwZXIkZ2V0QmFja3Rlc3RzTi5zZWxlY3RlZEJhY2t0ZXN0OwogICAgICB0aGlzLnVwZGF0ZUtleSA9IF9oZWxwZXIkZ2V0QmFja3Rlc3RzTi51cGRhdGVLZXk7CiAgICAgIHZhciBzcGxpdHRlZCA9IHRoaXMuZXN0aW1hdGVkLnNwbGl0KCcgJyk7CiAgICAgIHRoaXMud2FybkVzdGltYXRlZCA9IHRoaXMuZXN0aW1hdGVkICYmIHNwbGl0dGVkWzBdID4gNSAmJiBzcGxpdHRlZFsxXSA9PT0gJ2hvdXJzJzsKICAgIH0sCiAgICBydW5DbGljazogZnVuY3Rpb24gcnVuQ2xpY2soKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMucnVubmluZykgewogICAgICAgIHRoaXMuc3RvcCgpOwogICAgICB9IGVsc2UgewogICAgICAgIGlmICh0aGlzLndhcm5Fc3RpbWF0ZWQpIHsKICAgICAgICAgIHRoaXMuJGNvbmZpcm0odGhpcy4kdCh0aGlzLnN0b3JlS2V5ICsgJy5lc3RpbWF0ZWRUaW1lJykgKyAnICcgKyB0aGlzLiR0KHRoaXMuc3RvcmVLZXkgKyAnLmNvbmZpcm1Fc3RpbWF0ZWQnKSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIF90aGlzMi5ydW4oKTsKICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHt9KTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIHRoaXMucnVuKCk7CiAgICAgIH0KICAgIH0sCiAgICBzYXZlQ2xpY2s6IGZ1bmN0aW9uIHNhdmVDbGljaygpIHt9LAogICAgcnVuOiBmdW5jdGlvbiBydW4oKSB7CiAgICAgIHRoaXMucnVubmluZyA9IHRydWU7IC8vIGxldCBkYXRhID0ge30KICAgICAgLy8gaWYgKHRoaXMucGVyaW9kLmZyb20pIHsKICAgICAgLy8gICAgIGRhdGFbJ3N0YXJ0X2RhdGUnXSA9IHRoaXMucGVyaW9kLmZyb20KICAgICAgLy8gfQogICAgICAvLyBpZiAodGhpcy5wZXJpb2QudG8pIHsKICAgICAgLy8gICAgIGRhdGFbJ2ZpbmlzaF9kYXRlJ10gPSB0aGlzLnBlcmlvZC50bwogICAgICAvLyB9CiAgICAgIC8vIGlmICh0aGlzLnByb2ZpdFRhcmdldC5jaGVja2VkKSB7CiAgICAgIC8vICAgICBpZiAodGhpcy5wcm9maXRUYXJnZXQuZnJvbSkgewogICAgICAvLyAgICAgICAgIGRhdGFbJ3Byb2ZpdF90YWtlX3N0YXJ0J10gPSB0aGlzLnByb2ZpdFRhcmdldC5mcm9tCiAgICAgIC8vICAgICB9CiAgICAgIC8vICAgICBpZiAodGhpcy5wcm9maXRUYXJnZXQudG8pIHsKICAgICAgLy8gICAgICAgICBkYXRhWydwcm9maXRfdGFrZV9zdG9wJ10gPSB0aGlzLnByb2ZpdFRhcmdldC50bwogICAgICAvLyAgICAgfQogICAgICAvLyAgICAgaWYgKHRoaXMucHJvZml0VGFyZ2V0LnN0ZXApIHsKICAgICAgLy8gICAgICAgICBkYXRhWydwcm9maXRfdGFrZV9zdGVwJ10gPSB0aGlzLnByb2ZpdFRhcmdldC5zdGVwCiAgICAgIC8vICAgICB9CiAgICAgIC8vICAgICAvLyAicHJvZml0X3Rha2VfdW5pdCI6ICJVU0QiLAogICAgICAvLyB9CiAgICAgIC8vIGlmICh0aGlzLnN0b3BMb3NzLmNoZWNrZWQpIHsKICAgICAgLy8gICAgIGlmICh0aGlzLnN0b3BMb3NzLmZyb20pIHsKICAgICAgLy8gICAgICAgICBkYXRhWydzdG9wX2xvc3Nfc3RhcnQnXSA9IHRoaXMuc3RvcExvc3MuZnJvbQogICAgICAvLyAgICAgfQogICAgICAvLyAgICAgaWYgKHRoaXMuc3RvcExvc3MudG8pIHsKICAgICAgLy8gICAgICAgICBkYXRhWydzdG9wX2xvc3Nfc3RvcCddID0gdGhpcy5zdG9wTG9zcy50bwogICAgICAvLyAgICAgfQogICAgICAvLyAgICAgaWYgKHRoaXMuc3RvcExvc3Muc3RlcCkgewogICAgICAvLyAgICAgICAgIGRhdGFbJ3N0b3BfbG9zc19zdGVwJ10gPSB0aGlzLnN0b3BMb3NzLnN0ZXAKICAgICAgLy8gICAgIH0KICAgICAgLy8gICAgIC8vICJzdG9wX2xvc3NfdW5pdCI6ICJVU0QiCiAgICAgIC8vIH0KICAgICAgLy8gLy8gIm9yaWdpbl9yZXN1bHQiOiAwLAogICAgICAvLyB0aGlzLiRodHRwCiAgICAgIC8vIC5wb3N0KGNvbnN0YW50cy51cmxzLmZlYXRFbmcuc3dlZXBSZXF1ZXN0LCBkYXRhKQogICAgICAvLyAudGhlbihfID0+IHRoaXMucnVubmluZyA9IHRydWUpCiAgICAgIC8vIC5jYXRjaChlcnJvciA9PiB7CiAgICAgIC8vICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgIC8vICAgICBpZiAoZXJyb3IubWVzc2FnZSA9PT0gY29uc3RhbnRzLnN0cmluZ3MubmV0d29ya0Vycm9yKSB7CiAgICAgIC8vICAgICAgICAgaGVscGVyLm5vdGlmeUF1ZGlvKHRoaXMsIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb25uZWN0aW9uTG9zdCcpLCAnZGFuZ2VyJywgdGhpcy5lcnJvclRpdGxlKQogICAgICAvLyAgICAgfQogICAgICAvLyB9KQogICAgfSwKICAgIHN0b3A6IGZ1bmN0aW9uIHN0b3AoKSB7CiAgICAgIHRoaXMucnVubmluZyA9IGZhbHNlOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuaW5pdERhdGEoKTsKICB9LAogIHdhdGNoOiB7CiAgICBzZWxlY3RlZEJhY2t0ZXN0OiBmdW5jdGlvbiBzZWxlY3RlZEJhY2t0ZXN0KHZhbCkgewogICAgICBoZWxwZXIudXBkYXRlU3RvcmUodGhpcy4kc3RvcmUsICdzZWxlY3RlZEJhY2t0ZXN0JywgdmFsLCB0aGlzLnN0b3JlS2V5KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["ParameterSweep.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n\n    <div class=\"row\">\n        <!-- select backtest -->\n        <span style=\"float: left; margin: 8px 15px 30px 30px\">{{ $t(storeKey + '.selectBacktest') }}</span>\n        <base-dropdown class=\"dd\" \n                        menu-classes=\"dropdown-black\" \n                        title-classes=\"btn btn-secondary\"\n                        :title=\"selectedBacktest ? selectedBacktest.name : null\"\n                        style=\"width: 20%\">\n            <ul style=\"list-style-type: none;\">\n                <li v-for=\"bt in btNamesFiltered\" :key=\"bt.id\">            \n                    <a class=\"dropdown-item\" \n                        @click=\"selectBacktest(bt)\" \n                        href=\"#\">\n                        {{ bt.name }}\n                    </a>\n                </li>\n            </ul>\n        </base-dropdown>    \n    </div>\n\n    <div class=\"row\">\n        <!-- parameters checkboxes       -->\n        <card class=\"col-lg-3 col-12 container\">\n            <h4>{{ $t(storeKey + '.parameters') }}</h4>\n            <base-checkbox v-model=\"profitTarget.checked\">\n                {{ $t(storeKey + '.profitTarget') }}\n            </base-checkbox>\n            <base-checkbox v-model=\"stopLoss.checked\">\n                {{ $t(storeKey + '.stopLoss') }}\n            </base-checkbox>\n        </card>\n\n        <!-- date pickers -->\n        <card class=\"col-lg-3 col-12 container\">\n            <h4>{{ $t(storeKey + '.period') }}</h4>\n            <div class=\"controls\">\n                <table class=\"table tablesorter\">\n                    <tbody>\n                        <tr>\n                            <!-- <slot :row=\"item\"> -->\n                            <td class=\"fullpicker\" style=\"border-top: 0px;\">\n                                {{ $t('research.from') }}<br>\n                                <datepicker v-model=\"period.from\" \n                                            :clear-button=\"true\" \n                                            :format=\"dateFormat\" \n                                            :placeholder=\"$t('research.pickDate')\" />\n                            </td>\n                            <!-- </slot> -->\n                        </tr>\n                        <tr>\n                            <!-- <slot :row=\"item\"> -->\n                            <td class=\"fullpicker\" style=\"border-top: 0px;\">\n                                {{ $t('research.to') }}<br>\n                                <datepicker v-model=\"period.to\" \n                                            :clear-button=\"true\" \n                                            :format=\"dateFormat\" \n                                            :placeholder=\"$t('research.pickDate')\" />\n                            </td>\n                            <!-- </slot> -->\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </card>\n\n        <!-- Profit Target range -->\n        <card v-if=\"profitTarget.checked\" class=\"col-lg-3 col-md-12 container\">\n            <h4>{{ $t(storeKey + '.profitTarget') + ' ' + $t(storeKey + '.range') }}</h4>\n\n            <table>\n                <tr>\n                    <td style=\"width: 50%\">\n                        <p>{{ $t('research.from') }}</p>\n                    </td>\n                    <td>\n                        <base-input alternative\n                                    type=\"text\"\n                                    v-model=\"profitTarget.from\"\n                                    :placeholder=\"$t('number')\">\n                        </base-input>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <p>{{ $t('research.to') }}</p>\n                    </td>\n                    <td>\n                        <base-input alternative\n                                    type=\"text\"\n                                    v-model=\"profitTarget.to\"\n                                    :placeholder=\"$t('number')\">\n                        </base-input>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <p>{{ $t(storeKey + '.step') }}</p>\n                    </td>\n                    <td>\n                        <base-input alternative\n                                    type=\"text\"\n                                    v-model=\"profitTarget.step\"\n                                    :placeholder=\"$t('number')\">\n                        </base-input>\n                    </td>\n                </tr>\n            </table>\n        </card>\n\n        <!-- Stop Loss range -->\n        <card v-if=\"stopLoss.checked\" class=\"col-lg-3 col-md-12 container\">\n            <h4>{{ $t(storeKey + '.stopLoss') + ' ' + $t(storeKey + '.range') }}</h4>\n\n            <table>\n                <tr>\n                    <td style=\"width: 50%\">\n                        <p>{{ $t('research.from') }}</p>\n                    </td>\n                    <td>\n                        <base-input alternative\n                                    type=\"text\"\n                                    v-model=\"stopLoss.from\"\n                                    :placeholder=\"$t('number')\">\n                        </base-input>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <p>{{ $t('research.to') }}</p>\n                    </td>\n                    <td>\n                        <base-input alternative\n                                    type=\"text\"\n                                    v-model=\"stopLoss.to\"\n                                    :placeholder=\"$t('number')\">\n                        </base-input>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <p>{{ $t(storeKey + '.step') }}</p>\n                    </td>\n                    <td>\n                        <base-input alternative\n                                    type=\"text\"\n                                    v-model=\"stopLoss.step\"\n                                    :placeholder=\"$t('number')\">\n                        </base-input>\n                    </td>\n                </tr>\n            </table>\n        </card>\n\n        <!-- estimated time of run -->\n\n    </div>\n    <!-- run button -->\n    <div class=\"row\">\n    <div class=\"col-12 flex-stretch\" style=\"margin-bottom:1em; text-align:center;\">\n        <div class=\"flex-middle\">\n            <h4 :class=\"[ warnEstimated ? 'warning' : 'noWarning' ]\">{{ $t(storeKey + '.estimatedTime') + ' ' + estimated + ' .' }}</h4>\n            <base-button native-type=\"submit\" type=\"secondary\" @click=\"runClick\" style=\"margin-right: auto; margin-left:auto;\">{{ runText }}</base-button>\n        </div>\n    </div>\n    </div>\n\n    <div class=\"row\">\n        <!-- results table -->\n        <div class=\"col-lg-8 col-md-12\">\n            <fancy-table :title=\"$t(storeKey + '.results.title')\"\n                        :showTitle=\"true\"\n                        :columns=\"$t(storeKey + '.results.columns')\">\n                        <!-- :interval=\"tableInterval\" > -->\n            </fancy-table>\n            <!-- save button -->\n            <base-button native-type=\"submit\" type=\"secondary\" @click=\"saveClick\">{{ $t('research.save') }}</base-button>\n        </div>\n\n        <!-- results chart -->\n        <div class=\"col-lg-3 col-md-12 container\">\n            <fancy-chart :title=\"$t(storeKey + '.results.chart')\" />\n        </div>\n    </div>\n\n</div>\n</template>\n<script>\nimport Datepicker from 'vuejs-datepicker';\nimport FancyTable from '@/custom/components/Tables/FancyTable';\nimport FancyChart from '@/custom/components/Charts/FancyChart';\n\nimport helper from '@/custom/assets/js/helper';\n// import constants from '@/custom/assets/js/constants';\n\n\nexport default {\n    components: {  \n      Datepicker,\n      FancyTable,\n      FancyChart \n    },\n\n    data() {\n        return {\n            storeKey: 'research.featuresEngineering.parameterSweep',\n\n            backtestsNames: [],\n            selectedBacktest: null,\n            profitTarget: {\n                checked: true,\n                from: null,\n                to: null,\n                step: null\n            },\n            stopLoss: {\n                checked: true,\n                from: null,\n                to: null,\n                step: null\n            },\n            period: {\n                from: null,\n                to: null\n            },\n\n            estimated: '5.5 hours',\n            warnEstimated: false,\n            running: false,\n\n            updateKey: 0\n        }\n    },\n\n    computed: {\n        btNamesFiltered() {\n            return this.selectedBacktest ? this.backtestsNames.filter(bt => bt.id !== this.selectedBacktest.id) : this.backtestsNames\n        },\n\n        dateFormat() {\n            return \"yyyy-MM-dd\"\n        },\n\n        runText() {\n            return this.running ? this.$t(this.storeKey + '.stop') : this.$t(this.storeKey + '.run')\n            // return this.running ? this.$t('research.stop') : this.$t(this.storeKey + '.run')\n        },\n\n        // tableInterval() {\n        //     return constants.intervals.featEngReload\n        // }\n    },\n\n    methods: {\n        initData() {\n            ({ backtestsNames:this.backtestsNames, selectedBacktest:this.selectedBacktest, updateKey:this.updateKey } = helper.getBacktestsNames(this.$store, this.storeKey, this.updateKey))\n\n            let splitted = this.estimated.split(' ')\n            this.warnEstimated = this.estimated && splitted[0] > 5 && splitted[1] === 'hours'\n        },\n\n        runClick() {\n            if (this.running) {\n                this.stop()\n            } else {\n                if (this.warnEstimated) {\n                    this.$confirm(this.$t(this.storeKey + '.estimatedTime') + ' ' + this.$t(this.storeKey + '.confirmEstimated'))\n                    .then(() => {\n                        this.run()\n                    })\n                    .catch(() => {})\n\n                    return\n                }\n                \n                this.run()\n            }\n        },\n        saveClick() {},\n\n        run() {\n            this.running = true\n\n            // let data = {}\n            // if (this.period.from) {\n            //     data['start_date'] = this.period.from\n            // }\n            // if (this.period.to) {\n            //     data['finish_date'] = this.period.to\n            // }\n            // if (this.profitTarget.checked) {\n            //     if (this.profitTarget.from) {\n            //         data['profit_take_start'] = this.profitTarget.from\n            //     }\n            //     if (this.profitTarget.to) {\n            //         data['profit_take_stop'] = this.profitTarget.to\n            //     }\n            //     if (this.profitTarget.step) {\n            //         data['profit_take_step'] = this.profitTarget.step\n            //     }\n            //     // \"profit_take_unit\": \"USD\",\n            // }\n            // if (this.stopLoss.checked) {\n            //     if (this.stopLoss.from) {\n            //         data['stop_loss_start'] = this.stopLoss.from\n            //     }\n            //     if (this.stopLoss.to) {\n            //         data['stop_loss_stop'] = this.stopLoss.to\n            //     }\n            //     if (this.stopLoss.step) {\n            //         data['stop_loss_step'] = this.stopLoss.step\n            //     }\n            //     // \"stop_loss_unit\": \"USD\"\n            // }\n            // // \"origin_result\": 0,\n\n            // this.$http\n            // .post(constants.urls.featEng.sweepRequest, data)\n            // .then(_ => this.running = true)\n            // .catch(error => {\n            //     console.log(error);\n            //     if (error.message === constants.strings.networkError) {\n            //         helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', this.errorTitle)\n            //     }\n            // })\n        },\n        stop() {\n            this.running = false\n        }\n    },\n\n    mounted() {\n        this.initData()\n    },\n\n    watch: {\n      selectedBacktest(val) {        \n        helper.updateStore(this.$store, 'selectedBacktest', val, this.storeKey)\n      }\n    },\n}\n</script>\n<style scoped>\n.warning {\n    text-align: center;\n    color: #66ffba;\n}\n\n.noWarning {\n    text-align: center;\n    color: white\n}\n</style>"],"sourceRoot":"src/custom/apps/research/optimization"}]}