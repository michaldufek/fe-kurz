{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js!/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/components/Tables/FancyTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/components/Tables/FancyTable.vue","mtime":1587030366030},{"path":"/home/dufek/Documents/gitlab/frs-apps/.babelrc","mtime":1576496397055},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["FancyTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <card class=\"card\">\r\n    <audio id=\"connectionLost\" src=\"media/connectionLost.mp3\" preload=\"auto\"></audio>\r\n    <h4 v-if=\"showTitle\" slot=\"header\" class=\"card-title\">{{title}}</h4>\r\n    <div>\r\n      <section v-if=\"noData\">\r\n        <h5>{{ noDataText ? noDataText : $t('noData') }}</h5>\r\n      </section>\r\n      <section v-else-if=\"isError\">\r\n        <p>{{ $t('dataError') }}</p>\r\n      </section>\r\n      <section v-else>\r\n        <DualRingLoader v-if=\"loading\" :color=\"'#54f1d2'\" :class=\"[finishedLoadings ? dataClass : noDataClass, loaderClass]\"/>\r\n        <base-table :data=\"data.length ? data : tableData\"\r\n                    :titles=\"titles\"\r\n                    :columns=\"columns\"\r\n                    :checkboxColumns=\"checkboxColumns\"\r\n                    @checked=\"checkedEmit\"\r\n                    thead-classes=\"text-primary\"\r\n                    :sortable=\"sortable\"\r\n                    :filterable=\"filterable\"\r\n                    :editable=\"editable\"\r\n                    :clickable=\"clickable\"\r\n                    :saveable=\"saveable\"\r\n                    :allowSave=\"allowSave\"\r\n                    :savedRows=\"savedRows\"\r\n                    @edited=\"edited\"\r\n                    @filtered=\"filtered\"\r\n                    @selected=\"selected\"\r\n                    @saved=\"saved\" >\r\n        </base-table>\r\n      </section>\r\n    </div>\r\n  </card>\r\n</template>\r\n<script>\r\nimport BaseTable from './BaseTable.vue';\r\nimport DualRingLoader from '@bit/joshk.vue-spinners-css.dual-ring-loader';\r\n\r\nimport constants from '@/custom/assets/js/constants';\r\nimport helper from '@/custom/assets/js/helper';\r\n\r\n\r\nexport default {\r\n  name: 'fancy-table',\r\n  components: {\r\n    BaseTable,\r\n    DualRingLoader    \r\n  },\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      description: \"Table title\"\r\n    },\r\n    noDataText: {\r\n      type: String,\r\n      description: \"Text to show when no data\"\r\n    },\r\n    showTitle: {\r\n      type: Boolean,\r\n      default: true,\r\n      description: \"Whether to show table title\"\r\n    },\r\n    data: {\r\n      type: Array,\r\n      default: () => [],\r\n      description: \"Table data\"\r\n    },\r\n    apiUrls: {\r\n      type: Array,\r\n      default: () => [],\r\n      description: \"URLs to API data sources\"\r\n    },\r\n    authorize: {\r\n      type: Boolean,\r\n      description: \"Whether connection to apiUrls must be authorized\"\r\n    },\r\n    rowsCreator: {\r\n      type: Function,\r\n      default: responseData => {\r\n        return responseData\r\n      },\r\n      description: \"How to create rows values (of shape [#rows, #columns]) from response data\"\r\n    },\r\n    aggregator: {\r\n      type: Function,\r\n      default: (oldRows, newRows, weight) => {\r\n        return helper.weightedAverageAggregator(oldRows, newRows, weight)\r\n      },\r\n      description: \"How to aggregate created rows from all sources (result of shape [#oldRows + #newRows, #columns])\"\r\n    },    \r\n    titles: {\r\n      type: Object,\r\n      default: () => {},\r\n      description: \"Table data values descriptions\"\r\n    },\r\n    columns: {\r\n      type: Array,\r\n      default: () => [],\r\n      description: \"Table columns\"\r\n    },\r\n    checkboxColumns: {\r\n      type: Array,\r\n      default: () => [],\r\n      description: \"Columns that are checkboxes\"\r\n    },\r\n    // interval: {\r\n    //   type: Number,\r\n    //   default: () => constants.intervals.dataReload,\r\n    //   description: \"Interval to reaload data\"\r\n    // },\r\n    sortable: {\r\n      type: Boolean,\r\n      description: \"Whether columns can be sorted by header click\"\r\n    },\r\n    filterable: {\r\n      type: Boolean,\r\n      description: \"Whether columns can be filtered by header double-click\"\r\n    },\r\n    editable: {\r\n      type: Boolean,\r\n      description: \"Whether values can be directly edited by double-click\"\r\n    },\r\n    clickable: {\r\n      type: Boolean,\r\n      description: \"Whether rows can be double-clicked for some action\"\r\n    },\r\n    saveable: {\r\n      type: Boolean,\r\n      description: \"Whether rows have Save button at last column (to do emit Save action)\"\r\n    },\r\n    allowSave: {\r\n      type: Boolean,\r\n      description: \"Whether rows can use Save button functionality\" // ie. backtest was run and row has result ID\r\n    },\r\n    savedRows: {\r\n      type: Array,\r\n      default: () => [],\r\n      description: \"Table rows that are already saved\"\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      error: false,\r\n      loading: false,\r\n      tableData: [],\r\n      finishedLoadings: 0,\r\n      \r\n      // css classes\r\n      dataClass: 'data',      \r\n      noDataClass: 'noData',\r\n      loaderClass: 'loader'\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    noData() {\r\n      return !this.loading && (!this.data || !this.data.length) && !this.tableData.length\r\n    },\r\n    isError() {\r\n      return this.error\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    initData() {\r\n      if (this.data && this.data.length) {\r\n        return \r\n      }\r\n\r\n      this.loadData();\r\n        \r\n      setInterval(() => { \r\n        this.loadData();\r\n      }, constants.intervals.dataReload ); //this.interval\r\n    },\r\n\r\n    loadData() {\r\n      this.finishedLoadings = 0\r\n      let errorLoadings = 0\r\n      if (this.apiUrls && this.apiUrls.length > 0) {\r\n        this.loading = true\r\n        this.error = false\r\n      }\r\n\r\n      const loadRoutine = () => new Promise ((resolve, reject) => {           \r\n        let responses = []\r\n\r\n        if (!this.apiUrls) {\r\n          resolve(responses)\r\n        } else {\r\n          this.apiUrls.forEach(apiUrl => {\r\n            this.$http\r\n            .get(apiUrl, this.authorize ? this.$store.getItem('headers') : null)\r\n            .then(response => {\r\n              if (!this.finishedLoadings) {\r\n                this.tableData = []\r\n              }\r\n\r\n              responses.push(response)          \r\n            })\r\n            .catch(error => {\r\n              console.log(error);\r\n              if (++errorLoadings === this.apiUrls.length) {\r\n                this.error = true\r\n                reject()\r\n              }\r\n\r\n              if (error.message === constants.strings.networkError) {\r\n                helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', this.$t('notifications.beConnectionLost') + '(' + this.title + ' ' + this.$t('table') + ')')\r\n              }\r\n            })\r\n            .finally(() => {\r\n              if (++this.finishedLoadings === this.apiUrls.length) {\r\n                this.loading = false\r\n                resolve(responses)\r\n              }\r\n            });\r\n          })\r\n        }\r\n      })\r\n\r\n      loadRoutine()\r\n      .then((responses) => {\r\n        let eqOutsSum = 0\r\n        responses.forEach(response => eqOutsSum += (response.data.equity ? response.data.equity[response.data.equity.length - 1] : 0))\r\n\r\n        responses.forEach(response => {\r\n          let newTableData = [];\r\n\r\n          this.rowsCreator(response.data).forEach(rowValues => {\r\n            let row = {}\r\n            let clNr = 0\r\n\r\n            // add keys to values (ie.column names)\r\n            this.columns.forEach(column => {\r\n              row[column.toLowerCase()] = clNr > rowValues.length - 1 ? null : rowValues[clNr]\r\n              clNr++\r\n            })\r\n\r\n            newTableData.push(row);\r\n          });\r\n\r\n          // aggregation\r\n          let weight = response.data.equity ? response.data.equity[response.data.equity.length - 1] / eqOutsSum : 1\r\n          this.tableData = this.aggregator(this.tableData, newTableData, weight).slice(0, constants.maxRows)\r\n          let td = this.tableData\r\n        })\r\n      })\r\n    },\r\n\r\n    // BaseTable emited event\r\n    edited(data) {\r\n      this.$emit('edited', data)\r\n    },\r\n    checkedEmit(data) {\r\n      this.$emit('checked', data)\r\n    },\r\n    filtered(data) {\r\n      this.$emit('filtered', data)      \r\n    },\r\n    selected(data) {\r\n      this.$emit('selected', data)\r\n    },\r\n    saved(data) {\r\n      this.$emit('saved', data)\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.initData()\r\n  }\r\n};\r\n</script>\r\n<style>\r\n.loader {\r\n  width: 80px; \r\n  height: 80px;  \r\n  position: absolute; \r\n}\r\n\r\n.loader.noData {\r\n  top: 20%; \r\n  left: 40%;    \r\n}\r\n\r\n.loader.data {\r\n  top: 40%; \r\n  left: 42.5%;\r\n}\r\n</style>"],"sourceRoot":"src/custom/components/Tables"}]}