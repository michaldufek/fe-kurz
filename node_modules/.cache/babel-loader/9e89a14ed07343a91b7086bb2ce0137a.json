{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js!/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/components/Charts/OhlcChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/components/Charts/OhlcChart.vue","mtime":1587030366022},{"path":"/home/dufek/Documents/gitlab/frs-apps/.babelrc","mtime":1576496397055},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9ob21lL2R1ZmVrL0RvY3VtZW50cy9naXRsYWIvZnJzLWFwcHMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczIvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmtleXMiOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIi9ob21lL2R1ZmVrL0RvY3VtZW50cy9naXRsYWIvZnJzLWFwcHMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczIvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM3LnByb21pc2UuZmluYWxseSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBEdWFsUmluZ0xvYWRlciBmcm9tICdAYml0L2pvc2hrLnZ1ZS1zcGlubmVycy1jc3MuZHVhbC1yaW5nLWxvYWRlcic7CmltcG9ydCBPaGxjIGZyb20gJ0AvY3VzdG9tL2NvbXBvbmVudHMvQ2hhcnRzL09obGMnOwppbXBvcnQgQ2FuZGxlc3RpY2sgZnJvbSAnQC9jdXN0b20vY29tcG9uZW50cy9DaGFydHMvQ2FuZGxlc3RpY2snOwppbXBvcnQgY29uZmlnIGZyb20gJ0AvY29uZmlnJzsKaW1wb3J0IGNvbnN0YW50cyBmcm9tICdAL2N1c3RvbS9hc3NldHMvanMvY29uc3RhbnRzJzsKaW1wb3J0IGhlbHBlciBmcm9tICdAL2N1c3RvbS9hc3NldHMvanMvaGVscGVyJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJvaGxjLWNoYXJ0IiwKICBjb21wb25lbnRzOiB7CiAgICBEdWFsUmluZ0xvYWRlcjogRHVhbFJpbmdMb2FkZXIsCiAgICBPaGxjOiBPaGxjLAogICAgQ2FuZGxlc3RpY2s6IENhbmRsZXN0aWNrCiAgfSwKICBwcm9wczogewogICAgdGl0bGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZXNjcmlwdGlvbjogIkNoYXJ0IHRpdGxlIgogICAgfSwKICAgIGFwaVVybDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlc2NyaXB0aW9uOiAiVVJMIHRvIEFQSSBkYXRhIHNvdXJjZSIKICAgIH0sCiAgICB0eXBlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVzY3JpcHRpb246ICJUeXBlIG9mIGNoYXJ0IC0gT0hMQyBvciBDYW5kbGVzdGljayIKICAgIH0sCiAgICBoaWdobGlnaHRzOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW3sKICAgICAgICAgIHBvaW50czogW10sCiAgICAgICAgICBjb2xvcjogY29uZmlnLmNvbG9ycy5wcmltYXJ5CiAgICAgICAgfV07CiAgICAgIH0sCiAgICAgIGRlc2NyaXB0aW9uOiAiUG9pbnRzIHRoYXQgc2hvdWxkIGJlIGhpZ2hsaWdodGVkIHdpdGggYmlnIHRyaWFuZ2xlIG9mIGRlZmluZWQgY29sb3IiCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdXBkYXRlVHM6IG51bGwsCiAgICAgIGxpdmU6IGZhbHNlLAogICAgICBlcnJvcjogZmFsc2UsCiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICAvLyBjaGFydAogICAgICBkYXRhY29sbGVjdGlvbjoge30sCiAgICAgIG9wdGlvbnM6IHsKICAgICAgICBzY2FsZXM6IHsKICAgICAgICAgIHhBeGVzOiBbewogICAgICAgICAgICB0aWNrczogewogICAgICAgICAgICAgIGF1dG9Ta2lwOiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgIH1dCiAgICAgICAgfQogICAgICB9CiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIG5vRGF0YTogZnVuY3Rpb24gbm9EYXRhKCkgewogICAgICByZXR1cm4gIXRoaXMubG9hZGluZyAmJiAoISgnZGF0YXNldHMnIGluIHRoaXMuZGF0YWNvbGxlY3Rpb24pIHx8ICF0aGlzLmRhdGFjb2xsZWN0aW9uLmRhdGFzZXRzLmxlbmd0aCk7CiAgICB9LAogICAgaXNFcnJvcjogZnVuY3Rpb24gaXNFcnJvcigpIHsKICAgICAgcmV0dXJuIHRoaXMuZXJyb3I7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0RGF0YTogZnVuY3Rpb24gaW5pdERhdGEoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLmxvYWREYXRhKCk7CiAgICAgIHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy5sb2FkRGF0YSgpOwogICAgICB9LCBjb25zdGFudHMuaW50ZXJ2YWxzLmRhdGFSZWxvYWQpOwogICAgfSwKICAgIGxvYWREYXRhOiBmdW5jdGlvbiBsb2FkRGF0YSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICB0aGlzLmVycm9yID0gZmFsc2U7CiAgICAgIHRoaXMuJGh0dHAuZ2V0KHRoaXMuYXBpVXJsKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzMi5maWxsQ2hhcnREYXRhKHJlc3BvbnNlLmRhdGEpOwoKICAgICAgICBfdGhpczIudXBkYXRlVHMgPSBuZXcgRGF0ZShOdW1iZXIoTWF0aC5tYXguYXBwbHkoTWF0aCwgX3RvQ29uc3VtYWJsZUFycmF5KE9iamVjdC5rZXlzKHJlc3BvbnNlLmRhdGEuT3BlbikpKSkpOwogICAgICAgIF90aGlzMi5saXZlID0gIXJlc3BvbnNlLmRhdGEuV0FSTklORzsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgIF90aGlzMi5lcnJvciA9IHRydWU7CgogICAgICAgIGlmIChlcnJvci5tZXNzYWdlID09PSBjb25zdGFudHMuc3RyaW5ncy5uZXR3b3JrRXJyb3IpIHsKICAgICAgICAgIGhlbHBlci5ub3RpZnlBdWRpbyhfdGhpczIsIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb25uZWN0aW9uTG9zdCcpLCAnZGFuZ2VyJywgX3RoaXMyLiR0KCdub3RpZmljYXRpb25zLmJlQ29ubmVjdGlvbkxvc3QnKSArICcoJyArIF90aGlzMi50aXRsZSArICcgJyArIF90aGlzMi4kdCgnY2hhcnQnKSArICcpJyk7CiAgICAgICAgfQogICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczIubG9hZGluZyA9IGZhbHNlOwoKICAgICAgICBpZiAoIV90aGlzMi5saXZlICYmICFfdGhpczIuZXJyb3IpIHsKICAgICAgICAgIGhlbHBlci5ub3RpZnlBdWRpbyhfdGhpczIsIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb25uZWN0aW9uTG9zdCcpLCAnd2FybmluZycsIF90aGlzMi4kdCgnbm90aWZpY2F0aW9ucy5icm9rZXJDb25uZWN0aW9uTG9zdCcpICsgJygnICsgX3RoaXMyLnRpdGxlICsgJyAnICsgX3RoaXMyLiR0KCdjaGFydCcpICsgJyknKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGZpbGxDaGFydERhdGE6IGZ1bmN0aW9uIGZpbGxDaGFydERhdGEoZGF0YSkgewogICAgICB2YXIgbmV3RGF0YSA9IFtdOwoKICAgICAgZm9yICh2YXIgX2kgPSAwLCBfT2JqZWN0JGVudHJpZXMgPSBPYmplY3QuZW50cmllcyhkYXRhLk9wZW4pOyBfaSA8IF9PYmplY3QkZW50cmllcy5sZW5ndGg7IF9pKyspIHsKICAgICAgICB2YXIgX09iamVjdCRlbnRyaWVzJF9pID0gX3NsaWNlZFRvQXJyYXkoX09iamVjdCRlbnRyaWVzW19pXSwgMiksCiAgICAgICAgICAgIGtleSA9IF9PYmplY3QkZW50cmllcyRfaVswXSwKICAgICAgICAgICAgdmFsID0gX09iamVjdCRlbnRyaWVzJF9pWzFdOwoKICAgICAgICBuZXdEYXRhLnB1c2goewogICAgICAgICAgdDogbmV3IERhdGUoTnVtYmVyKGtleSkpLAogICAgICAgICAgbzogdmFsLAogICAgICAgICAgaDogZGF0YS5IaWdoW2tleV0sCiAgICAgICAgICBsOiBkYXRhLkxvd1trZXldLAogICAgICAgICAgYzogZGF0YS5DbG9zZVtrZXldCiAgICAgICAgfSk7CiAgICAgIH0gLy8gdG8tZG86IGZpZ3VyZSBvdXQgaG93IHRvIHVzZSBoaWdobGlnaHRzIHdpdGggdGhpcyB0eXBlIG9mIGNoYXJ0IChzdGFuZGFyZCBGYW5jeUNoYXJ0IHdheSBkb2Vzbid0IHdvcmsgLSBkYXRhc2V0IGhpZ2hsaWdodHMgc2V0dGluZ3MgYXJlIGlnbm9yZWQpCgoKICAgICAgdGhpcy5kYXRhY29sbGVjdGlvbiA9IHsKICAgICAgICBkYXRhc2V0czogW3sKICAgICAgICAgIGxhYmVsOiB0aGlzLnRpdGxlLAogICAgICAgICAgZGF0YTogbmV3RGF0YQogICAgICAgIH1dCiAgICAgIH07CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5pbml0RGF0YSgpOwogIH0KfTs="},{"version":3,"sources":["OhlcChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <card type=\"chart\">\r\n    <audio id=\"connectionLost\" src=\"media/connectionLost.mp3\" preload=\"auto\"></audio>\r\n    <div class=\"card-header\">\r\n      <h5 class=\"card-title\" style=\"float: right;\"><i class=\"tim-icons icon-heart-2\" :class=\"{ 'text-success': live }\" style=\"color:red\"></i>  {{ updateTs | chartUpdateTsText(loading) }}</h5>\r\n    </div>\r\n    <br/>\r\n    <div class=\"chart-area\">\r\n      <section v-if=\"noData\" style=\"text-align: center\">\r\n        <p style=\"padding-top: 50px\">{{ $t('noData') }}</p>\r\n      </section>\r\n      <section v-else-if=\"isError\" style=\"text-align: center\">\r\n        <p style=\"padding-top: 50px\">{{ $t('dataError') }}</p>\r\n      </section>\r\n      <section v-else>\r\n        <DualRingLoader v-if=\"loading\" :color=\"'#54f1d2'\" style=\"width: 80px; height: 80px; position: absolute; top: 40%; left: 45%;\" />\r\n        <Ohlc v-if=\"type === $t('research.patternLab.chartTypes')[1]\"\r\n              :chart-data=\"datacollection\" \r\n              :options=\"options\"/>\r\n        <Candlestick v-else\r\n              :chart-data=\"datacollection\" \r\n              :options=\"options\"/>\r\n      </section>\r\n    </div>\r\n  </card>\r\n</template>\r\n<script>\r\nimport DualRingLoader from '@bit/joshk.vue-spinners-css.dual-ring-loader';\r\nimport Ohlc from '@/custom/components/Charts/Ohlc';\r\nimport Candlestick from '@/custom/components/Charts/Candlestick';\r\n\r\nimport config from '@/config';\r\nimport constants from '@/custom/assets/js/constants';\r\nimport helper from '@/custom/assets/js/helper';\r\n\r\n\r\nexport default {\r\n  name: \"ohlc-chart\",\r\n  components: {\r\n    DualRingLoader,\r\n    Ohlc,\r\n    Candlestick\r\n  },\r\n\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      description: \"Chart title\"\r\n    },\r\n    apiUrl: {\r\n      type: String,\r\n      description: \"URL to API data source\"\r\n    },\r\n    type: {\r\n      type: String,\r\n      description: \"Type of chart - OHLC or Candlestick\"\r\n    },\r\n    highlights: {\r\n      type: Array,\r\n      default: () => {\r\n        return [{ \r\n          points: [], \r\n          color: config.colors.primary \r\n        }]\r\n      },\r\n      description: \"Points that should be highlighted with big triangle of defined color\"\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      updateTs: null,\r\n      live: false,\r\n      error: false,\r\n      loading: false,\r\n\r\n      // chart\r\n      datacollection: {},\r\n      options: {\r\n        scales: {\r\n          xAxes: [{\r\n            ticks: {\r\n              autoSkip: true,\r\n            },\r\n          }],\r\n        },\r\n      }\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    noData() {\r\n      return !this.loading && (!('datasets' in this.datacollection) || !this.datacollection.datasets.length)\r\n    },\r\n    isError() {\r\n      return this.error\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    initData() {\r\n      this.loadData();\r\n        \r\n      setInterval(() => { \r\n        this.loadData();\r\n      }, constants.intervals.dataReload );\r\n    },\r\n\r\n    loadData() {\r\n      this.loading = true\r\n      this.error = false\r\n      \r\n      this.$http\r\n      .get(this.apiUrl)\r\n      .then(response => {\r\n        this.fillChartData(response.data)\r\n        this.updateTs = new Date(Number(Math.max(...Object.keys(response.data.Open))))\r\n        this.live = !response.data.WARNING\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        this.error = true\r\n\r\n        if (error.message === constants.strings.networkError) {\r\n          helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', this.$t('notifications.beConnectionLost') + '(' + this.title + ' ' + this.$t('chart') + ')')\r\n        }\r\n      })\r\n      .finally(() => {\r\n        this.loading = false\r\n\r\n        if (!this.live && !this.error) {\r\n          helper.notifyAudio(this, document.getElementById('connectionLost'), 'warning', this.$t('notifications.brokerConnectionLost') + '(' + this.title + ' ' + this.$t('chart') + ')')\r\n        }\r\n      });\r\n    },\r\n\r\n    fillChartData(data) {\r\n      let newData = []\r\n\r\n      for (const [key, val] of Object.entries(data.Open)) {\r\n        newData.push({\r\n          t: new Date(Number(key)),\r\n          o: val,\r\n          h: data.High[key],\r\n          l: data.Low[key],\r\n          c: data.Close[key]\r\n        })\r\n      }\r\n\r\n      // to-do: figure out how to use highlights with this type of chart (standard FancyChart way doesn't work - dataset highlights settings are ignored)\r\n\r\n      this.datacollection = {\r\n        datasets: [{\r\n          label: this.title,\r\n          data: newData         \r\n        }],\r\n      }\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.initData();\r\n  }\r\n};\r\n</script>\r\n<style>\r\n</style>"],"sourceRoot":"src/custom/components/Charts"}]}