{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js!/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/research/PortfolioManager.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/research/PortfolioManager.vue","mtime":1595835860230},{"path":"/home/dufek/Documents/gitlab/frs-apps/.babelrc","mtime":1576496397055},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM3LnByb21pc2UuZmluYWxseSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuaXRlcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgUG9ydGZvbGlvQ2FyZCBmcm9tICJAL2N1c3RvbS9jb21wb25lbnRzL0NhcmRzL1BvcnRmb2xpb0NhcmQudnVlIjsKaW1wb3J0IER1YWxSaW5nTG9hZGVyIGZyb20gJ0BiaXQvam9zaGsudnVlLXNwaW5uZXJzLWNzcy5kdWFsLXJpbmctbG9hZGVyJzsKaW1wb3J0IGNvbnN0YW50cyBmcm9tICdAL2N1c3RvbS9hc3NldHMvanMvY29uc3RhbnRzJzsKaW1wb3J0IGhlbHBlciBmcm9tICdAL2N1c3RvbS9hc3NldHMvanMvaGVscGVyJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFBvcnRmb2xpb0NhcmQ6IFBvcnRmb2xpb0NhcmQsCiAgICBEdWFsUmluZ0xvYWRlcjogRHVhbFJpbmdMb2FkZXIKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkZXNpZ25lZFN0cmF0ZWdpZXM6IFtdLAogICAgICBsaXZlU3RyYXRlZ2llczogW10sCiAgICAgIGVtYWlsOiBudWxsLAogICAgICBsb2FkaW5nOiBmYWxzZQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBvcHRpbWFsU3RyYXRlZ2llczogZnVuY3Rpb24gb3B0aW1hbFN0cmF0ZWdpZXMoKSB7CiAgICAgIHZhciBpZCA9IDA7CiAgICAgIHJldHVybiBPYmplY3QuZW50cmllcyhjb25zdGFudHMudXJscy5jaGFydCkubWFwKGZ1bmN0aW9uIChlbnRyeSkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBpZDogaWQrKywKICAgICAgICAgIG5hbWU6IGVudHJ5WzBdLAogICAgICAgICAgdXJsOiBlbnRyeVsxXQogICAgICAgIH07CiAgICAgIH0pOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgaW5pdFN0cmF0ZWdpZXM6IGZ1bmN0aW9uIGluaXRTdHJhdGVnaWVzKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgdGhpcy5kZXNpZ25lZFN0cmF0ZWdpZXMgPSBbXTsKICAgICAgdGhpcy5saXZlU3RyYXRlZ2llcyA9IFtdOwogICAgICB0aGlzLiRodHRwLmdldChjb25zdGFudHMudXJscy5kYXRhd2FyZWhvdXNlLnJlc3VsdHMpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGEuZm9yRWFjaChmdW5jdGlvbiAoZGF0dW0pIHsKICAgICAgICAgIGlmIChkYXR1bS5pbl9wb3J0Zm9saW8gJiYgIWRhdHVtLmxpdmUpIHsKICAgICAgICAgICAgX3RoaXMuZGVzaWduZWRTdHJhdGVnaWVzLnB1c2goewogICAgICAgICAgICAgIGlkOiBkYXR1bS5vcmlnaW5hbF9yZXN1bHRfaWQsCiAgICAgICAgICAgICAgbmFtZTogZGF0dW0ubmFtZSwKICAgICAgICAgICAgICB1cmw6IG51bGwgLy8gdG8tZG86IGdldCB1cmwgb2Ygc3RhdGlzdGljcyBvZiB0aGUgc3RyYXRlZ3kgaW5zdGVhZCBvZiBudWxsCgogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoZGF0dW0ubGl2ZSkgewogICAgICAgICAgICBfdGhpcy5saXZlU3RyYXRlZ2llcy5wdXNoKHsKICAgICAgICAgICAgICBpZDogZGF0dW0ub3JpZ2luYWxfcmVzdWx0X2lkLAogICAgICAgICAgICAgIG5hbWU6IGRhdHVtLm5hbWUsCiAgICAgICAgICAgICAgdXJsOiBudWxsIC8vIHRvLWRvOiBnZXQgdXJsIG9mIHN0YXRpc3RpY3Mgb2YgdGhlIHN0cmF0ZWd5IGluc3RlYWQgb2YgbnVsbAoKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKCiAgICAgICAgaWYgKGVycm9yLm1lc3NhZ2UgPT09IGNvbnN0YW50cy5zdHJpbmdzLm5ldHdvcmtFcnJvcikgewogICAgICAgICAgaGVscGVyLm5vdGlmeUF1ZGlvKF90aGlzLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29ubmVjdGlvbkxvc3QnKSwgJ2RhbmdlcicsIF90aGlzLiR0KGNvbnN0YW50cy5zdG9yZUtleXMucG9ydGZvbGlvTWFuYWdlcikpOwogICAgICAgIH0KICAgICAgfSkuZmluYWxseShmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIF90aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9LAogICAgaW5pdEVtYWlsOiBmdW5jdGlvbiBpbml0RW1haWwoKSB7CiAgICAgIHZhciBkYXRhID0gdGhpcy4kc3RvcmUuZ2V0SXRlbShjb25zdGFudHMudHJhbnNsYXRpb25LZXlzLklCTG9naW4pOwoKICAgICAgaWYgKGRhdGEpIHsKICAgICAgICB0aGlzLmVtYWlsID0gZGF0YS5lbWFpbDsKICAgICAgfQogICAgfSwKICAgIC8vIGVtaXR0ZWQgZXZlbnRzCiAgICBnb0xpdmU6IGZ1bmN0aW9uIGdvTGl2ZShpZCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMuJGh0dHAucG9zdChjb25zdGFudHMudXJscy5saXZlRGVwbC5zdHJhdGVneS5kZXBsb3ksIHsKICAgICAgICBidF9pZDogaWQsCiAgICAgICAgdXNlcmlkOiB0aGlzLmVtYWlsCiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKCiAgICAgICAgaWYgKGVycm9yLm1lc3NhZ2UgPT09IGNvbnN0YW50cy5zdHJpbmdzLm5ldHdvcmtFcnJvcikgewogICAgICAgICAgaGVscGVyLm5vdGlmeUF1ZGlvKF90aGlzMiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Nvbm5lY3Rpb25Mb3N0JyksICdkYW5nZXInLCAiIi5jb25jYXQoX3RoaXMyLiR0KF90aGlzMi53YXJlaG91c2VLZXkpLCAiICIpLmNvbmNhdChfdGhpczIuJHQoJ3Jlc2VhcmNoLnBvcnRmb2xpb01hbmFnZXIubGl2ZScpKSk7CiAgICAgICAgfQogICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gX3RoaXMyLmluaXRTdHJhdGVnaWVzKCk7CiAgICAgIH0pOwogICAgfSwKICAgIHN0b3JlZDogZnVuY3Rpb24gc3RvcmVkKGlkKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdGhpcy4kaHR0cC5wYXRjaChjb25zdGFudHMudXJscy5kYXRhd2FyZWhvdXNlLnJlc3VsdCArIGhlbHBlci5lbmNvZGVSb3V0ZVBhcmFtcyhbaWQsIGNvbnN0YW50cy51cmxzLnBhdHRlcm5MYWIuYWJicmV2aWF0aW9uXSksIHsKICAgICAgICBpbl9wb3J0Zm9saW86IGZhbHNlCiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKCiAgICAgICAgaWYgKGVycm9yLm1lc3NhZ2UgPT09IGNvbnN0YW50cy5zdHJpbmdzLm5ldHdvcmtFcnJvcikgewogICAgICAgICAgaGVscGVyLm5vdGlmeUF1ZGlvKF90aGlzMywgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Nvbm5lY3Rpb25Mb3N0JyksICdkYW5nZXInLCAiIi5jb25jYXQoX3RoaXMzLiR0KF90aGlzMy53YXJlaG91c2VLZXkpLCAiICIpLmNvbmNhdChfdGhpczMuJHQoJ3Jlc2VhcmNoLnBvcnRmb2xpb01hbmFnZXIubGl2ZScpKSk7CiAgICAgICAgfQogICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gX3RoaXMzLmluaXRTdHJhdGVnaWVzKCk7CiAgICAgIH0pOwogICAgfSwKICAgIHN0b3BlZDogZnVuY3Rpb24gc3RvcGVkKGlkKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgdGhpcy4kaHR0cC5wb3N0KGNvbnN0YW50cy51cmxzLmxpdmVEZXBsLnN0cmF0ZWd5LnN0b3AsIHsKICAgICAgICBidF9pZDogaWQsCiAgICAgICAgdXNlcmlkOiB0aGlzLmVtYWlsCiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKCiAgICAgICAgaWYgKGVycm9yLm1lc3NhZ2UgPT09IGNvbnN0YW50cy5zdHJpbmdzLm5ldHdvcmtFcnJvcikgewogICAgICAgICAgaGVscGVyLm5vdGlmeUF1ZGlvKF90aGlzNCwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Nvbm5lY3Rpb25Mb3N0JyksICdkYW5nZXInLCAiIi5jb25jYXQoX3RoaXM0LiR0KF90aGlzNC53YXJlaG91c2VLZXkpLCAiICIpLmNvbmNhdChfdGhpczQuJHQoJ3Jlc2VhcmNoLnBvcnRmb2xpb01hbmFnZXIubGl2ZScpKSk7CiAgICAgICAgfQogICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gX3RoaXM0LmluaXRTdHJhdGVnaWVzKCk7CiAgICAgIH0pOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuaW5pdEVtYWlsKCk7CiAgICB0aGlzLmluaXRTdHJhdGVnaWVzKCk7CiAgfQp9Ow=="},{"version":3,"sources":["PortfolioManager.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <DualRingLoader v-if=\"loading\" :color=\"'#54f1d2'\" style=\"margin-left: 250px\" />\r\n    <portfolio-card v-else \r\n                    :title=\"$t('research.portfolioManager.designedPortfolio')\"\r\n                    :strategies=\"designedStrategies\"\r\n                    @wentLive=\"goLive\"\r\n                    @stored=\"stored\">\r\n    </portfolio-card>\r\n    <portfolio-card v-if=\"!loading\"\r\n                    :title=\"$t('research.portfolioManager.livePortfolio')\"\r\n                    :strategies=\"liveStrategies\"\r\n                    :enableStop=\"true\"\r\n                    @stoped=\"stoped\">\r\n    </portfolio-card>\r\n    <portfolio-card :title=\"$t('research.portfolioManager.optimalPortfolio')\"\r\n                    :strategies=\"optimalStrategies\"\r\n                    @wentLive=\"goLive\"\r\n                    @stored=\"stored\">\r\n    </portfolio-card>\r\n    <!-- to-do: stats as a source from Ware house? -->\r\n  </div>\r\n</template>\r\n<script>\r\n  import PortfolioCard from \"@/custom/components/Cards/PortfolioCard.vue\";\r\n  import DualRingLoader from '@bit/joshk.vue-spinners-css.dual-ring-loader';\r\n\r\n  import constants from '@/custom/assets/js/constants';\r\n  import helper from '@/custom/assets/js/helper';\r\n\r\n\r\n  export default {\r\n    components: {\r\n      PortfolioCard,\r\n      DualRingLoader\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        designedStrategies: [],\r\n        liveStrategies: [],\r\n        email: null,\r\n\r\n        loading: false\r\n      }\r\n    },\r\n\r\n    computed: {\r\n      optimalStrategies() {\r\n        let id = 0\r\n        return Object.entries(constants.urls.chart).map(entry => {\r\n          return {\r\n            id: id++,\r\n            name: entry[0],\r\n            url: entry[1]\r\n          }\r\n        })\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      initStrategies() {\r\n        this.loading = true\r\n\r\n        this.designedStrategies = []\r\n        this.liveStrategies = []\r\n        this.$http\r\n        .get(constants.urls.datawarehouse.results)\r\n        .then(response => response.data.forEach(datum => {\r\n          if (datum.in_portfolio && !datum.live) {\r\n            this.designedStrategies.push({\r\n               id: datum.original_result_id,\r\n               name: datum.name, \r\n               url: null    // to-do: get url of statistics of the strategy instead of null\r\n            }) \r\n          }\r\n\r\n          if (datum.live) {\r\n            this.liveStrategies.push({\r\n               id: datum.original_result_id,\r\n               name: datum.name, \r\n               url: null    // to-do: get url of statistics of the strategy instead of null\r\n            }) \r\n          }\r\n        }))\r\n        .catch(error => {\r\n          console.log(error)\r\n          if (error.message === constants.strings.networkError) {\r\n            helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', this.$t(constants.storeKeys.portfolioManager))\r\n          }\r\n        })\r\n        .finally(() => this.loading = false)\r\n      },\r\n\r\n      initEmail() {\r\n        let data = this.$store.getItem(constants.translationKeys.IBLogin)\r\n        if (data) {\r\n            this.email = data.email\r\n        }\r\n      },\r\n\r\n      // emitted events\r\n      goLive(id) {        \r\n        this.$http\r\n        .post(constants.urls.liveDepl.strategy.deploy, { bt_id: id, userid: this.email })\r\n        .catch(error => {\r\n            console.log(error)\r\n            if (error.message === constants.strings.networkError) {\r\n                helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t(this.warehouseKey)} ${this.$t('research.portfolioManager.live')}`)\r\n            }\r\n        })\r\n        .finally(() => this.initStrategies())\r\n      },\r\n\r\n      stored(id) {        \r\n        this.$http\r\n        .patch(constants.urls.datawarehouse.result + helper.encodeRouteParams([ id, constants.urls.patternLab.abbreviation ]), { in_portfolio: false })\r\n        .catch(error => {\r\n            console.log(error)\r\n            if (error.message === constants.strings.networkError) {\r\n                helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t(this.warehouseKey)} ${this.$t('research.portfolioManager.live')}`)\r\n            }\r\n        })\r\n        .finally(() => this.initStrategies())\r\n      },\r\n\r\n      stoped(id) {        \r\n        this.$http\r\n        .post(constants.urls.liveDepl.strategy.stop, { bt_id: id, userid: this.email })\r\n        .catch(error => {\r\n            console.log(error)\r\n            if (error.message === constants.strings.networkError) {\r\n                helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t(this.warehouseKey)} ${this.$t('research.portfolioManager.live')}`)\r\n            }\r\n        })\r\n        .finally(() => this.initStrategies())\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      this.initEmail()\r\n      this.initStrategies()\r\n    }\r\n  };\r\n</script>\r\n<style>\r\n</style>"],"sourceRoot":"src/custom/apps/research"}]}