{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js!/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/research/patternLab/performanceResults/Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/research/patternLab/performanceResults/Chart.vue","mtime":1587025922792},{"path":"/home/dufek/Documents/gitlab/frs-apps/.babelrc","mtime":1576496397055},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Chart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <!-- dropdowns -->\n        <div style=\"position: relative; left: 10px; z-index: 1\">\n          <base-dropdown class=\"dd\" \n                         menu-classes=\"dropdown-black\" \n                         title-classes=\"btn btn-secondary\"\n                         :title=\"selectedAsset ? selectedAsset.symbol : null\"\n                         style=\"width: 17%\">\n            <ul style=\"list-style-type: none;\">\n              <li v-for=\"asset in assetsPatterns.checkedAssets.filter(a => a.id !== selectedAsset.id)\" :key=\"asset.id\">            \n                <a class=\"dropdown-item\" \n                   @click=\"selectAsset(asset)\" \n                   href=\"#\">\n                  {{ asset.symbol }}\n                </a>\n              </li>\n            </ul>\n          </base-dropdown>\n        </div>\n\n        <div style=\"position: relative; z-index: 1\">\n          <base-dropdown class=\"dd\" \n                         menu-classes=\"dropdown-black\" \n                         title-classes=\"btn btn-secondary\"\n                         :title=\"selectedBacktest ? selectedBacktest.name : null\"\n                         style=\"width: 20%\">\n            <ul style=\"list-style-type: none;\">\n              <li v-for=\"bt in btNamesFiltered\" :key=\"bt.id\">            \n                <a class=\"dropdown-item\" \n                   @click=\"selectBacktest(bt)\" \n                   href=\"#\">\n                  {{ bt.name }}\n                </a>\n              </li>\n            </ul>\n          </base-dropdown>          \n        </div>\n\n        <div style=\"position: relative; z-index: 1\">\n          <base-dropdown class=\"dd\" \n                         menu-classes=\"dropdown-black\" \n                         title-classes=\"btn btn-secondary\"\n                         :title=\"chartType\">\n            <ul style=\"list-style-type: none;\">\n              <li v-for=\"(chartType, key) in $t('research.patternLab.chartTypes').filter(el => el !== chartType)\" :key=\"key\">            \n                <a class=\"dropdown-item\" \n                   @click=\"selectChartType(chartType)\" \n                   href=\"#\">\n                  {{ chartType }}\n                </a>\n              </li>\n            </ul>\n          </base-dropdown>          \n        </div>\n\n        <!-- trades chart -->\n        <fancy-chart v-if=\"chartType === $t('research.patternLab.chartTypes')[0]\"\n                    :title=\"$t('sidebar.patternLab') + ' ' + this.$t('research.patternLab.backtestPatterns.title') + ' ' + $t(storeKey + '.title')\"\n                    :legend=\"legend\"\n                    :apiUrls=\"chartUrl ? [ chartUrl ] : []\"\n                    style=\"height: 100%\"\n                    :highlights=\"highlights\"\n                    :responsive=\"true\"                     \n                    :key=\"historyChartKey\" />\n        <ohlc-chart v-else \n                    :title=\"ohlcChartTitle\"\n                    :apiUrl=\"chartUrl\" \n                    :type=\"chartType\"\n                    :highlights=\"highlights\"\n                    style=\"height: 830px\" \n                    :key=\"historyChartKey\" />\n\n        <!-- cumulated profit chart -->\n        <fancy-chart :title=\"$t('sidebar.patternLab') + ' ' + this.$t('research.patternLab.backtestPatterns.title') + ' ' + $t(storeKey + '.title') + ' ' + $t(storeKey + '.cumulatedProfit')\"\n                     :apiUrls=\"statsChartUrl\"\n                     :dataCreator=\"profitDataCreator\"\n                     :noDataText=\"noDataText\"\n                     :axesLabels=\"[ $t(storeKey + '.xLabel'), $t(storeKey + '.cumulatedProfit') ]\"\n                     :responsive=\"true\"                     \n                     :key=\"statsChartKey\" />\n\n        <!-- drawdown chart -->\n        <fancy-chart :title=\"$t('sidebar.patternLab') + ' ' + this.$t('research.patternLab.backtestPatterns.title') + ' ' + $t(storeKey + '.title') + ' ' + $t(storeKey + '.drawdown')\"\n                     :apiUrls=\"statsChartUrl\"    \n                     :dataCreator=\"drawdownDataCreator\"\n                     :noDataText=\"noDataText\"\n                     :axesLabels=\"[ $t(storeKey + '.xLabel'), $t(storeKey + '.drawdown') ]\"\n                     :fill=\"true\"\n                     :responsive=\"true\"                    \n                     :key=\"statsChartKey\" />\n    </div>    \n</template>\n<script>\nimport FancyChart from '@/custom/components/Charts/FancyChart';\nimport OhlcChart from '@/custom/components/Charts/OhlcChart';\n\nimport constants from '@/custom/assets/js/constants';\nimport helper from '@/custom/assets/js/helper';\n\n\nexport default {\n    components: {\n        FancyChart,\n        OhlcChart\n    },\n\n    data() {\n        return {\n            storeKey: 'research.patternLab.backtestPatterns.performanceResults.chart',\n\n            // assets-patterns-picker\n            assetsPatterns: {\n              range:{\n                from: null,\n                to: null\n              },\n              checkedAssets: [],\n              checkedPatterns: []\n            },\n\n            loading: true,\n            noDataText: '',\n\n            // dropdowns\n            backtestsNames: [],\n            selectedBacktest: null,\n            selectedAsset: null,            \n            chartType: null,\n\n            // chart highlights\n            tradesEntries: [],\n            tradesStopLosses: [],\n            tradesExits: [],\n\n            // chart\n            chartUrl: null,\n            historyChartKey: 0,\n            statsChartKey: 0\n        }\n    },\n\n    computed: {\n      ohlcChartTitle() {\n          return this.selectedAsset ? this.selectedAsset.symbol : ''\n      },\n      btNamesFiltered() {\n        return this.selectedBacktest ? this.backtestsNames.filter(bt => bt.id !== this.selectedBacktest.id) : this.backtestsNames\n      },\n\n      statsChartUrl() {\n        return !this.loading ? [ constants.urls.patternLab.backtestPatterns.results ] : []\n      },\n\n      legend() {\n        return this.tradesEntries.length || this.tradesStopLosses.length || this.tradesExits.length ? `<span style=\"color:${constants.colors.tradeEntry}\">&#9650;</span> ${this.$t(this.storeKey + '.tradeEntry')}<br/><span style=\"color:${constants.colors.tradeStopLoss}\">&#9650;</span> ${this.$t(this.storeKey + '.tradeStopLoss')}<br/><span style=\"color:${constants.colors.tradeExit}\">&#9650;</span> ${this.$t(this.storeKey + '.tradeExit')}` : null\n      },\n\n      highlights() {\n        return [{\n          points: this.tradesEntries,\n          color: constants.colors.tradeEntry \n        }, \n        { \n          points: this.tradesStopLosses, \n          color: constants.colors.tradeStopLoss \n        }, \n        { \n          points: this.tradesExits, \n          color: constants.colors.tradeExit \n        }]\n      }\n    },\n    \n    methods: {\n        initData() {\n            let data = helper.getAssetsPatternsPickerData(this.$store)\n            if (data) {\n              this.assetsPatterns = data\n            }\n\n            ({ backtestsNames:this.backtestsNames, loading:this.loading, selectedBacktest:this.selectedBacktest, updateKey:this.statsChartKey } = helper.getBacktestsNames(this.$store, this.storeKey, this.statsChartKey))\n            this.initDropDowns()\n            this.loadChart()\n        },        \n\n        initDropDowns() {\n            let data = this.$store.getItem(this.storeKey)\n            if (data) {\n              ({ selectedAsset:this.selectedAsset } = data)\n            }\n            this.chartType = this.$t('research.patternLab.chartTypes')[data ? data.chartType : 0]\n\n            if (!this.selectedAsset && this.assetsPatterns.checkedAssets.length) {\n                this.selectedAsset = this.assetsPatterns.checkedAssets[0]\n            }\n        },\n\n        loadChart(reloadHistory=true) {\n            this.chartUrl = null\n            if (this.selectedAsset) {\n                this.chartUrl = helper.getPatternLabChartUrl(this.selectedAsset, this.assetsPatterns.timeframe, this.assetsPatterns.range)\n            }\n\n            // force reload of chart components \n            if (reloadHistory) {\n              this.historyChartKey++\n            }\n        },\n\n        selectAsset(asset) {\n            this.selectedAsset = asset\n            this.loadChart()\n        },\n        selectBacktest(bt) {\n            this.selectedBacktest = bt\n            this.statsChartKey++\n            this.loadChart()\n        },\n        selectChartType(chartType) {\n            this.chartType = chartType\n            this.loadChart()\n        },\n\n        profitDataCreator(responseData) {\n          let data = responseData.filter(d => d.id === this.selectedBacktest.id)\n          if (data.length) {\n            let datum = data[0]\n\n            this.noDataText = null\n            this.tradesEntries = []\n            this.tradesStopLosses = []\n            this.tradesExits = []\n            let base = helper.getBacktestPatternsTableBase(datum, this.$store, this.$t(constants.translationKeys.patterns + '.columns'))\n            if (datum.error) {              \n              this.noDataText = `${this.$t(this.storeKey + '.problemsPrefix')} '${base.name}' ${this.$t(this.storeKey + '.problemsSuffix')} ${datum.msg}`\n            } else {\n              if (base.symbol === this.selectedAsset.symbol) {\n                this.tradesEntries = Object.values(datum.output.trades.start)\n                this.tradesStopLosses = datum.stop_loss_unit === constants.defaultUnit ? [ datum.stop_loss_value ] : []   // temporary until BE doesn't return stop_loss_value for % !!!\n                this.tradesExits = Object.values(datum.output.trades.finish)\n              }\n\n              return {\n                time: Object.values(datum.output.trades.finish),\n                equity: Object.values(datum.output.stats.pnl_cum)\n              }\n            }\n          }\n          // otherwise let exception happen, ie. it's server error\n        },\n        drawdownDataCreator(responseData) {\n          let data = responseData.filter(d => d.id === this.selectedBacktest.id)\n          if (data.length) {\n            let datum = data[0]\n\n            this.noDataText = null\n            if (datum.error) {\n              let btName = helper.getBacktestPatternsTableBase(datum, this.$store, this.$t(constants.translationKeys.patterns + '.columns')).name\n              this.noDataText = `${this.$t(this.storeKey + '.problemsPrefix')} '${btName}' ${this.$t(this.storeKey + '.problemsSuffix')} ${datum.msg}`\n            } else {\n              return {\n                time: Object.values(datum.output.trades.finish),\n                equity: Object.values(datum.output.stats[\"Drawdown Underwater plot\"])\n              }\n            }\n          }\n          // otherwise let exception happen, ie. it's server error\n        }\n    },\n\n    watch: {\n      selectedAsset(val) {        \n        helper.updateStore(this.$store, 'selectedAsset', val, this.storeKey)\n      },\n      selectedBacktest(val) {        \n        helper.updateStore(this.$store, 'selectedBacktest', val, this.storeKey)\n      },\n      chartType(val) {        \n        helper.updateStore(this.$store, 'chartType', this.$t('research.patternLab.chartTypes').indexOf(val), this.storeKey)\n      }\n    },\n\n    mounted() {\n        this.initData()\n    }\n}\n</script>\n<style scoped>\n\n</style>"],"sourceRoot":"src/custom/apps/research/patternLab/performanceResults"}]}