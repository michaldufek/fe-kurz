{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js!/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/layout/application/patternLab/performanceResults/TopNavbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/layout/application/patternLab/performanceResults/TopNavbar.vue","mtime":1587025922796},{"path":"/home/dufek/Documents/gitlab/frs-apps/.babelrc","mtime":1576496397055},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5Lml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuc29ydCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNy5wcm9taXNlLmZpbmFsbHkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFhMU1ggZnJvbSAneGxzeC94bHN4JzsKaW1wb3J0IGNvbnN0YW50cyBmcm9tICdAL2N1c3RvbS9hc3NldHMvanMvY29uc3RhbnRzJzsKaW1wb3J0IGhlbHBlciBmcm9tICdAL2N1c3RvbS9hc3NldHMvanMvaGVscGVyJzsKZXhwb3J0IGRlZmF1bHQgewogIG1ldGhvZHM6IHsKICAgIGV4cG9ydENsaWNrOiBmdW5jdGlvbiBleHBvcnRDbGljaygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBzaGVldHMgPSBbXTsKICAgICAgdmFyIHNoZWV0S2V5cyA9IFtjb25zdGFudHMudHJhbnNsYXRpb25LZXlzLnBhdHRlcm5zLCBjb25zdGFudHMudHJhbnNsYXRpb25LZXlzLnRyYWRlcywgY29uc3RhbnRzLnRyYW5zbGF0aW9uS2V5cy5wZXJmb3JtYW5jZU1ldHJpY3NdOwogICAgICB2YXIgc2hlZXRLZXlzRG9uZSA9IFtdOwogICAgICBzaGVldEtleXMuZm9yRWFjaChmdW5jdGlvbiAoc2hlZXRLZXkpIHsKICAgICAgICB2YXIgc2hlZXQgPSB7CiAgICAgICAgICBuYW1lOiBfdGhpcy4kdChzaGVldEtleSArICcudGl0bGUnKSwKICAgICAgICAgIGNvbHVtbnM6IFtdLAogICAgICAgICAgZGF0YTogW10KICAgICAgICB9OyAvLyBjcmVhdGUgY29sdW1ucyBvYmplY3RzCgogICAgICAgIHZhciBjb2x1bW5zID0gX3RoaXMuJHQoc2hlZXRLZXkgKyAnLmNvbHVtbnMnKTsKCiAgICAgICAgY29sdW1ucy5mb3JFYWNoKGZ1bmN0aW9uIChjb2x1bW4pIHsKICAgICAgICAgIHJldHVybiBzaGVldC5jb2x1bW5zLnB1c2goewogICAgICAgICAgICBsYWJlbDogY29sdW1uLAogICAgICAgICAgICBmaWVsZDogY29sdW1uLnRvTG93ZXJDYXNlKCkKICAgICAgICAgIH0pOwogICAgICAgIH0pOyAvLyBjcmVhdGUgZGF0YSBvYmplY3RzCgogICAgICAgIGlmIChzaGVldEtleSA9PT0gY29uc3RhbnRzLnRyYW5zbGF0aW9uS2V5cy5wYXR0ZXJucykgewogICAgICAgICAgdmFyIGRhdGEgPSBfdGhpcy4kc3RvcmUuZ2V0SXRlbShjb25zdGFudHMuc3RvcmVLZXlzLmJhY2t0ZXN0UGF0dGVybnMpOwoKICAgICAgICAgIGlmIChkYXRhKSB7CiAgICAgICAgICAgIF90aGlzLmNyZWF0ZURhdGEoaGVscGVyLmdldFN0b3JlZEJhY2t0ZXN0cyhkYXRhKSwgc2hlZXQsIGNvbHVtbnMpOwogICAgICAgICAgfQoKICAgICAgICAgIHNoZWV0cy5wdXNoKHNoZWV0KTsKICAgICAgICAgIHNoZWV0S2V5c0RvbmUucHVzaChzaGVldEtleSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzLiRodHRwLmdldChjb25zdGFudHMudXJscy5wYXR0ZXJuTGFiLmJhY2t0ZXN0UGF0dGVybnMucmVzdWx0cykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgdmFyIHJvd3MgPSBbXTsKICAgICAgICAgICAgcmVzcG9uc2UuZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChkYXR1bSkgewogICAgICAgICAgICAgIHZhciBiYXNlID0gaGVscGVyLmdldEJhY2t0ZXN0UGF0dGVybnNUYWJsZUJhc2UoZGF0dW0sIF90aGlzLiRzdG9yZSwgX3RoaXMuJHQoY29uc3RhbnRzLnRyYW5zbGF0aW9uS2V5cy5wYXR0ZXJucyArICcuY29sdW1ucycpKTsKCiAgICAgICAgICAgICAgaWYgKGRhdHVtLmVycm9yKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiUGF0dGVybiByZXN1bHRzIG9mICciLmNvbmNhdChiYXNlLm5hbWUsICInIGhhcyBzb21lIHByb2JsZW1zOiAiKS5jb25jYXQoZGF0dW0ubXNnKSk7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGlmIChzaGVldEtleSA9PT0gY29uc3RhbnRzLnRyYW5zbGF0aW9uS2V5cy50cmFkZXMpIHsKICAgICAgICAgICAgICAgICAgaGVscGVyLmNyZWF0ZVRyYWRlc1Jvdyhyb3dzLCBkYXR1bSwgYmFzZSk7CiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHNoZWV0S2V5ID09PSBjb25zdGFudHMudHJhbnNsYXRpb25LZXlzLnBlcmZvcm1hbmNlTWV0cmljcykgewogICAgICAgICAgICAgICAgICBoZWxwZXIuY3JlYXRlUGVyZk1ldHJpY3NSb3cocm93cywgZGF0dW0sIGJhc2UpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBfdGhpcy5jcmVhdGVEYXRhKHJvd3MsIHNoZWV0LCBjb2x1bW5zKTsKICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CgogICAgICAgICAgICBpZiAoZXJyb3IubWVzc2FnZSA9PT0gY29uc3RhbnRzLnN0cmluZ3MubmV0d29ya0Vycm9yKSB7CiAgICAgICAgICAgICAgaGVscGVyLm5vdGlmeUF1ZGlvKF90aGlzLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29ubmVjdGlvbkxvc3QnKSwgJ2RhbmdlcicsIF90aGlzLiR0KCdub3RpZmljYXRpb25zLmJlQ29ubmVjdGlvbkxvc3QnKSArICcoJyArIF90aGlzLnRpdGxlICsgJyAnICsgX3RoaXMuJHQoJ3RhYmxlJykgKyAnKScpOwogICAgICAgICAgICB9CiAgICAgICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgc2hlZXRzLnB1c2goc2hlZXQpOwogICAgICAgICAgICBzaGVldEtleXNEb25lLnB1c2goc2hlZXRLZXkpOwoKICAgICAgICAgICAgaWYgKHNoZWV0S2V5cy5zb3J0KCkuam9pbignLCcpID09PSBzaGVldEtleXNEb25lLnNvcnQoKS5qb2luKCcsJykpIHsKICAgICAgICAgICAgICAvLyBhcnJheXMgYXJlIHNhbWUsIGllLndlIGFyZSBmaW5pc2hlZAogICAgICAgICAgICAgIF90aGlzLmV4cG9ydEV4Y2VsKHNoZWV0cyk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgY3JlYXRlRGF0YTogZnVuY3Rpb24gY3JlYXRlRGF0YShvbGRSb3dzLCBzaGVldCwgY29sdW1ucykgewogICAgICBvbGRSb3dzLmZvckVhY2goZnVuY3Rpb24gKG9sZFJvdykgewogICAgICAgIHZhciByb3cgPSB7fTsKICAgICAgICB2YXIgY2xOciA9IDA7CiAgICAgICAgY29sdW1ucy5mb3JFYWNoKGZ1bmN0aW9uIChjb2x1bW4pIHsKICAgICAgICAgIHJvd1tjb2x1bW4udG9Mb3dlckNhc2UoKV0gPSBvbGRSb3cgaW5zdGFuY2VvZiBNYXAgPyBvbGRSb3cuZ2V0KGNvbHVtbi50b0xvd2VyQ2FzZSgpKSA6IG9sZFJvd1tjbE5yXTsKICAgICAgICAgIGNsTnIrKzsKICAgICAgICB9KTsKICAgICAgICBzaGVldC5kYXRhLnB1c2gocm93KTsKICAgICAgfSk7CiAgICB9LAogICAgZXhwb3J0RXhjZWw6IGZ1bmN0aW9uIGV4cG9ydEV4Y2VsKHNoZWV0cykgewogICAgICAvLyBJbnNwaXJlZCBieSBodHRwczovL2dpdGh1Yi5jb20vdC1jaGF0b3lhbi92dWUtZXhjZWwteGxzeCAtIGZ1bmN0aW9uYWxpdHkgb2YgZXhwb3J0IHRvIG11bHRpcGxlIHNoZWV0cyB3YXMgYWRkZWQuCiAgICAgIHZhciB3YiA9IFhMU1gudXRpbHMuYm9va19uZXcoKTsKICAgICAgc2hlZXRzLmZvckVhY2goZnVuY3Rpb24gKHNoZWV0KSB7CiAgICAgICAgaWYgKHNoZWV0LmNvbHVtbnMubGVuZ3RoID09PSAwIHx8IHNoZWV0LmRhdGEubGVuZ3RoID09PSAwKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygiQ29sdW1ucyBvciBkYXRhIG9mIHNoZWV0ICciLmNvbmNhdChzaGVldC5uYW1lLCAiJyBtaXNzaW5nISBTaGVldCBza2lwcGVkLiIpKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdmFyIGNyZWF0ZVhMU0xGb3JtYXRPYmogPSBbXTsKICAgICAgICAgIHZhciBuZXdYbHNIZWFkZXIgPSBbXTsKICAgICAgICAgIHNoZWV0LmNvbHVtbnMuZm9yRWFjaChmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgICAgICAgbmV3WGxzSGVhZGVyLnB1c2godmFsdWUubGFiZWwpOwogICAgICAgICAgfSk7CiAgICAgICAgICBjcmVhdGVYTFNMRm9ybWF0T2JqLnB1c2gobmV3WGxzSGVhZGVyKTsKICAgICAgICAgIHNoZWV0LmRhdGEuZm9yRWFjaChmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgICAgICAgdmFyIGlubmVyUm93RGF0YSA9IFtdOwogICAgICAgICAgICBzaGVldC5jb2x1bW5zLmZvckVhY2goZnVuY3Rpb24gKHZhbCkgewogICAgICAgICAgICAgIGlmICh2YWwuZGF0YUZvcm1hdCAmJiB0eXBlb2YgdmFsLmRhdGFGb3JtYXQgPT09ICdmdW5jdGlvbicpIHsKICAgICAgICAgICAgICAgIGlubmVyUm93RGF0YS5wdXNoKHZhbC5kYXRhRm9ybWF0KHZhbHVlW3ZhbC5maWVsZF0pKTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgaW5uZXJSb3dEYXRhLnB1c2godmFsdWVbdmFsLmZpZWxkXSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgY3JlYXRlWExTTEZvcm1hdE9iai5wdXNoKGlubmVyUm93RGF0YSk7CiAgICAgICAgICB9KTsKICAgICAgICAgIHZhciB3c19uYW1lID0gc2hlZXQubmFtZTsKICAgICAgICAgIHZhciB3cyA9IFhMU1gudXRpbHMuYW9hX3RvX3NoZWV0KGNyZWF0ZVhMU0xGb3JtYXRPYmopOwogICAgICAgICAgWExTWC51dGlscy5ib29rX2FwcGVuZF9zaGVldCh3Yiwgd3MsIHdzX25hbWUpOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIFhMU1gud3JpdGVGaWxlKHdiLCB0aGlzLiR0KCdyZXNlYXJjaC5wYXR0ZXJuTGFiLmJhY2t0ZXN0UGF0dGVybnMudGl0bGUnKSArICIueGxzeCIpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["TopNavbar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <nav class=\"navbar navbar-expand-lg navbar-absolute navbar-transparent\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"navbar-wrapper\">\r\n        <div style=\"margin-top: -40px;\">\r\n          <router-link class=\"navbar-brand\" to=\"/research/patternLab/backtestPatterns/performanceResults/patterns\">{{$t(\"research.patternLab.backtestPatterns.performanceResults.patterns.title\")}}</router-link>\r\n          <router-link class=\"navbar-brand\" to=\"/research/patternLab/backtestPatterns/performanceResults/trades\">{{$t(\"research.patternLab.backtestPatterns.performanceResults.trades.title\")}}</router-link>\r\n          <router-link class=\"navbar-brand\" to=\"/research/patternLab/backtestPatterns/performanceResults/performanceMetrics\">{{$t(\"research.patternLab.backtestPatterns.performanceResults.performanceMetrics.title\")}}</router-link>\r\n          <router-link class=\"navbar-brand\" to=\"/research/patternLab/backtestPatterns/performanceResults/chart\">{{$t(\"research.patternLab.backtestPatterns.performanceResults.chart.title\")}}</router-link>\r\n\r\n          <base-button native-type=\"submit\" type=\"secondary\" size=\"sm\" @click=\"exportClick\">{{ $t('research.patternLab.backtestPatterns.export') }}</base-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</template>\r\n<script>\r\n  import XLSX from 'xlsx/xlsx';\r\n  import constants from '@/custom/assets/js/constants'\r\n  import helper from '@/custom/assets/js/helper';\r\n\r\n\r\n  export default {\r\n    methods: {\r\n      exportClick() {\r\n        let sheets = []\r\n        let sheetKeys = [ constants.translationKeys.patterns, constants.translationKeys.trades, constants.translationKeys.performanceMetrics ]\r\n        let sheetKeysDone = []\r\n\r\n        sheetKeys.forEach(sheetKey => {\r\n          let sheet = { name: this.$t(sheetKey + '.title'), columns: [], data: [] }\r\n\r\n          // create columns objects\r\n          let columns = this.$t(sheetKey + '.columns')\r\n          columns.forEach(column => sheet.columns.push({ label: column, field: column.toLowerCase() }))\r\n\r\n          // create data objects\r\n          if (sheetKey === constants.translationKeys.patterns) {\r\n            let data = this.$store.getItem(constants.storeKeys.backtestPatterns)\r\n            if (data) {\r\n              this.createData(helper.getStoredBacktests(data), sheet, columns)             \r\n            }\r\n\r\n            sheets.push(sheet)\r\n            sheetKeysDone.push(sheetKey)\r\n          } else {\r\n            this.$http\r\n            .get(constants.urls.patternLab.backtestPatterns.results)\r\n            .then(response => {\r\n              let rows = []\r\n\r\n              response.data.forEach(datum => {\r\n                let base = helper.getBacktestPatternsTableBase(datum, this.$store, this.$t(constants.translationKeys.patterns + '.columns'))\r\n\r\n                if (datum.error) {\r\n                    console.log(`Pattern results of '${base.name}' has some problems: ${datum.msg}`)\r\n                } else {\r\n                  if (sheetKey === constants.translationKeys.trades) {\r\n                    helper.createTradesRow(rows, datum, base)\r\n                  } else if (sheetKey === constants.translationKeys.performanceMetrics) {    \r\n                    helper.createPerfMetricsRow(rows, datum, base)\r\n                  }\r\n                }\r\n              })\r\n\r\n              this.createData(rows, sheet, columns)             \r\n            })\r\n            .catch(error => {\r\n              console.log(error);\r\n              if (error.message === constants.strings.networkError) {\r\n                helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', this.$t('notifications.beConnectionLost') + '(' + this.title + ' ' + this.$t('table') + ')')\r\n              }\r\n            })\r\n            .finally(() => {\r\n              sheets.push(sheet)\r\n              sheetKeysDone.push(sheetKey)\r\n  \r\n              if (sheetKeys.sort().join(',') === sheetKeysDone.sort().join(',')) {  // arrays are same, ie.we are finished\r\n                this.exportExcel(sheets)\r\n              }\r\n            })            \r\n          }\r\n        })\r\n      },\r\n      createData(oldRows, sheet, columns) {\r\n        oldRows.forEach(oldRow => {\r\n          let row = {}\r\n          let clNr = 0\r\n          columns.forEach(column => {\r\n            row[column.toLowerCase()] = oldRow instanceof Map ? oldRow.get(column.toLowerCase()) : oldRow[clNr]\r\n            clNr++\r\n          })\r\n          sheet.data.push(row)\r\n        })\r\n      },\r\n\r\n      exportExcel(sheets) {\r\n        // Inspired by https://github.com/t-chatoyan/vue-excel-xlsx - functionality of export to multiple sheets was added.\r\n        let wb = XLSX.utils.book_new()                \r\n\r\n        sheets.forEach(sheet => {\r\n          if (sheet.columns.length === 0 || sheet.data.length === 0){\r\n            console.log(`Columns or data of sheet '${sheet.name}' missing! Sheet skipped.`);\r\n          } else {\r\n            let createXLSLFormatObj = [];\r\n            let newXlsHeader = [];\r\n            sheet.columns.forEach(value => {\r\n                newXlsHeader.push(value.label);\r\n            });\r\n\r\n            createXLSLFormatObj.push(newXlsHeader);\r\n            sheet.data.forEach(value => {\r\n                let innerRowData = [];\r\n                sheet.columns.forEach(val => {\r\n                    if (val.dataFormat && typeof val.dataFormat === 'function') {\r\n                        innerRowData.push(val.dataFormat(value[val.field]));\r\n                    } else {\r\n                        innerRowData.push(value[val.field]);\r\n                    }\r\n                });\r\n                createXLSLFormatObj.push(innerRowData);\r\n            });                    \r\n\r\n            let ws_name = sheet.name;\r\n            \r\n            let ws = XLSX.utils.aoa_to_sheet(createXLSLFormatObj);\r\n            XLSX.utils.book_append_sheet(wb, ws, ws_name);\r\n          }\r\n        })\r\n\r\n        XLSX.writeFile(wb, this.$t('research.patternLab.backtestPatterns.title') + \".xlsx\");\r\n      }\r\n    }\r\n  };\r\n</script>\r\n<style>\r\n</style>"],"sourceRoot":"src/custom/layout/application/patternLab/performanceResults"}]}