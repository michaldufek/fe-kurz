{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js!/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/dashboard/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/dashboard/Dashboard.vue","mtime":1595835860230},{"path":"/home/dufek/Documents/gitlab/frs-apps/.babelrc","mtime":1576496397055},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <audio id=\"open\" src=\"media/open.mp3\" preload=\"auto\"></audio>\r\n    <audio id=\"win\" src=\"media/win.mp3\" preload=\"auto\"></audio>\r\n    <audio id=\"lose\" src=\"media/lose.mp3\" preload=\"auto\"></audio>\r\n    <audio id=\"breakEven\" src=\"media/breakEven.mp3\" preload=\"auto\"></audio>    \r\n    <!-- <audio id=\"jumpOnAsset\" src=\"media/jumpOnAsset.mp3\" preload=\"auto\"></audio> -->\r\n    <audio id=\"jumpOnSP500\" src=\"media/jumpOnSP500.mp3\" preload=\"auto\"></audio>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <fancy-chart :title=\"$t('dashboard.title')\"\r\n                     :apiUrls=\"chartUrls\"\r\n                     :key=\"updateKey\" >\r\n        </fancy-chart>\r\n      </div>\r\n    </div>  \r\n\r\n     <div class=\"row\">      \r\n      <div class=\"col-xl-4 col-12\">\r\n        <fancy-table :title=\"$t('dashboard.lastTradesTable.title')\"\r\n                     :apiUrls=\"statsUrls\"\r\n                     :rowsCreator=\"tradesRowsCreator\"\r\n                     :aggregator=\"tradesAggregator\"\r\n                     :titles=\"$t('terms.tradeTypes')\"\r\n                     :columns=\"$t('dashboard.lastTradesTable.columns')\"\r\n                     :key=\"updateKey\" >\r\n        </fancy-table>\r\n      </div>\r\n\r\n      <div class=\"col-xl-4 col-12\">  \r\n        <fancy-table :title=\"$t('dashboard.pendingOrdersTable.title')\"\r\n                     :apiUrls=\"statsUrls\"\r\n                     :rowsCreator=\"ordersRowsCreator\"\r\n                     :aggregator=\"ordersAggregator\"\r\n                     :titles=\"$t('terms.tradeTypes')\"\r\n                     :columns=\"$t('dashboard.pendingOrdersTable.columns')\"\r\n                     :key=\"updateKey\" >\r\n        </fancy-table>\r\n      </div>\r\n\r\n      <div class=\"col-xl-4 col-12\">\r\n        <fancy-table :title=\"$t('dashboard.performanceStatistics')\"\r\n                     :apiUrls=\"chartUrls\"\r\n                     :rowsCreator=\"statsRowsCreator\"\r\n                     :titles=\"$t('terms.perfStats')\"\r\n                     :columns=\"$t('dashboard.performanceStatisticsTable.columns')\"\r\n                     :key=\"updateKey\" >\r\n        </fancy-table>\r\n\r\n        <div v-if=\"connected\" style=\"float: right;\">\r\n          <DualRingLoader v-if=\"loading\" :color=\"'#54f1d2'\" style=\"width: 80px; height: 80px;margin-right: 50px;margin-bottom: -35px;\" />\r\n          <base-button type=\"secondary\" class=\"my-4\" @click=\"liquidate\">{{$t('dashboard.liquidate')}}</base-button>\r\n          <p :class=\"[ error ? errorClass : noErrorClass , msgClass ]\">{{message}}</p>\r\n        </div>        \r\n      </div>\r\n    </div> \r\n    \r\n  </div>\r\n</template>\r\n<script>\r\n  import FancyChart from '@/custom/components/Charts/FancyChart';\r\n  import FancyTable from '@/custom/components/Tables/FancyTable';\r\n  import DualRingLoader from '@bit/joshk.vue-spinners-css.dual-ring-loader';\r\n\r\n  import helper from '@/custom/assets/js/helper';\r\n  import constants from '@/custom/assets/js/constants';\r\n\r\n\r\n  export default {\r\n    components: {\r\n      FancyChart,\r\n      FancyTable,\r\n      DualRingLoader\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        connected: false,\r\n        email: '',\r\n        error: false,\r\n        message: '',\r\n        loading: false,\r\n        updateKey: 0,\r\n\r\n        chartUrls: [],\r\n        statsUrls: [],\r\n        heardOrders: {\r\n          open: [],\r\n          win: [],\r\n          lose: [],\r\n          breakEven: []\r\n        },\r\n        \r\n        // css classes\r\n        msgClass: 'message',\r\n        noErrorClass: 'noError',\r\n        errorClass: 'error'\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      initSoundSignals() {\r\n        setInterval(() => { \r\n          // this.checkOrdersStatusChange();\r\n        }, constants.intervals.minute );\r\n      },\r\n\r\n      initIB() {\r\n        let data = this.$store.getItem(constants.translationKeys.IBLogin)\r\n        if (data) {\r\n          this.email = data.email\r\n          this.checkGWrunning()   // no need to set interval because only live portfolio should be here\r\n        } else {\r\n          this.setApiUrls()\r\n        }\r\n      },\r\n\r\n      checkGWrunning() {\r\n        this.loading = true\r\n\r\n        this.$http\r\n        .get(constants.urls.liveDepl.gateway.status + '/' + this.email)\r\n        .then(response => {\r\n          if ('error' in response.data) {\r\n            helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t('dashboard.title')} ${this.$t('login.IB.status')} - ${response.data.error}`)\r\n          } else {\r\n            this.connected = response.data.status\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n          this.connected = false\r\n\r\n          if (error.message === constants.strings.networkError) {\r\n            helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t('dashboard.title')} ${this.$t('login.IB.status')}`)\r\n          }\r\n        })\r\n        .finally(() => {\r\n          this.loading = false\r\n          this.setApiUrls()\r\n        })\r\n      },\r\n\r\n      setApiUrls() {\r\n        this.chartUrls = []\r\n        this.statsUrls = []\r\n\r\n        if (this.connected) {\r\n          this.chartUrls.push(constants.urls.liveDepl.report + this.email)    // todo: must be chart url here!\r\n          this.statsUrls.push(constants.urls.liveDepl.report + this.email)\r\n        }\r\n        else {\r\n          // get just urls from named urls dictionary\r\n          for (const [key, value] of Object.entries(constants.urls['chart'])) {\r\n            this.chartUrls.push(value)\r\n          }\r\n          for (const [key, value] of Object.entries(constants.urls['stats'])) {\r\n            this.statsUrls.push(value)\r\n          }\r\n        }\r\n\r\n        this.updateKey++\r\n      },\r\n\r\n      liquidate() {\r\n        this.$confirm(this.$t('dashboard.confirmLiquidate'))\r\n        .then(() => {\r\n          this.loading = true\r\n\r\n          this.$http\r\n          .post(constants.urls.liveDepl.liquidate, { userid: this.email })\r\n          .then(response => {\r\n            this.error = false\r\n            this.message = response.data.message\r\n            this.updateKey++\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n            this.error = true\r\n\r\n            if (error.message === constants.strings.networkError) {\r\n                helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t('dashboard.title')} ${this.$t('dashboard.liquidate')}`)\r\n                this.message = error.message\r\n            }\r\n\r\n            if ('type' in error.response.data) {\r\n                this.message = error.response.data.type + ' error'\r\n\r\n                if ('message' in error.response.data) {\r\n                    this.message += ': ' + error.response.data.message\r\n                } else {\r\n                    this.message += '.'\r\n                }\r\n            }                \r\n          })\r\n          .finally(() => this.loading = false)\r\n        })\r\n        .catch(_ => {})\r\n      },\r\n\r\n      liquidate() {\r\n        this.$confirm(this.$t('dashboard.confirmLiquidate'))\r\n        .then(() => {\r\n          this.loading = true\r\n\r\n          this.$http\r\n          .post(constants.urls.liveDepl.liquidate, { userid: this.email })\r\n          .then(response => {\r\n            this.error = false\r\n            this.message = response.data.message\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n            this.error = true\r\n\r\n            if (error.message === constants.strings.networkError) {\r\n                helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t('dashboard.title')} ${this.$t('dashboard.liquidate')}`)\r\n                this.message = error.message\r\n            }\r\n\r\n            if ('type' in error.response.data) {\r\n                this.message = error.response.data.type + ' error'\r\n\r\n                if ('message' in error.response.data) {\r\n                    this.message += ': ' + error.response.data.message\r\n                } else {\r\n                    this.message += '.'\r\n                }\r\n            }                \r\n          })\r\n          .finally(() => this.loading = false)\r\n        })\r\n        .catch(_ => {})\r\n      },\r\n\r\n      checkOrdersStatusChange() {\r\n        // to-do: right definitions when to notify (blocker: BE)\r\n        this.$http\r\n        .get(constants.urls.stats[\"MF Report\"])\r\n        .then(response => {\r\n          response.data.openTrades.forEach(openTrade => {\r\n            if (!(openTrade.order.orderId in heardOrders.open) && openTrade.orderStatus === \"Submitted\") {\r\n              this.notify('open', 'info', this.$t('notifications.open'))\r\n              this.heardOrders.open.push(openTrade.order.orderId)\r\n            } else if (!(openTrade.order.orderId in heardOrders.win) && openTrade.orderStatus === \"Filled\") {\r\n              this.notify('win', 'success', this.$t('notifications.win'))\r\n              this.heardOrders.win.push(openTrade.order.orderId)\r\n            } else if (!(openTrade.order.orderId in heardOrders.lose) && openTrade.orderStatus === \"Cancelled\") {\r\n              this.notify('lose', 'warning', this.$t('notifications.lose'))\r\n              this.heardOrders.lose.push(openTrade.order.orderId)\r\n            } else if (!(openTrade.order.orderId in heardOrders.breakEven) && openTrade.orderStatus === \"Inactive\") {\r\n              this.notify('breakEven', 'info', this.$t('notifications.breakEven'))\r\n              this.heardOrders.breakEven.push(openTrade.order.orderId)\r\n            }\r\n          })\r\n        })\r\n      },      \r\n\r\n      notify(audioEl, type, msg) {\r\n        document.getElementById(audioEl).play();\r\n\r\n        this.$notify({\r\n          type: type, \r\n          message: msg\r\n        })\r\n      },\r\n\r\n      // fancy-tables props functions\r\n      tradesRowsCreator(responseData) {\r\n        let rows = []\r\n\r\n        responseData.openTrades.forEach(openTrade => {\r\n            let row = []\r\n\r\n            row.push(helper.formatDateOnly(openTrade.contract.lastTradeDateOrContractMonth)) // date and time\r\n            row.push(openTrade.order.action) // trade type\r\n            row.push(openTrade.order.auxPrice) // result (%)\r\n            // result (usd)\r\n\r\n            rows.push(row);\r\n          });\r\n\r\n        return rows\r\n      },\r\n\r\n      ordersRowsCreator(responseData) {\r\n        let rows = []\r\n\r\n        if ('fills' in responseData) {\r\n          responseData.fills.forEach(fill => {\r\n              let row = []\r\n\r\n              row.push(helper.formatDate(fill.time)) // date\r\n              row.push(fill.execution.side) // trade type\r\n              // target (usd)\r\n              // stop loss (usd)\r\n\r\n              rows.push(row);\r\n          })\r\n        }\r\n\r\n        return rows\r\n      },\r\n\r\n      statsRowsCreator(responseData) {\r\n        let row = {}\r\n        let rows = [];\r\n        let rowsT = []\r\n        let eqOut = responseData.equity[responseData.equity.length - 1]\r\n        \r\n        // 3 Months\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[0].toLowerCase()] = helper.ytd(responseData, 1) + ' %' // YTD\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[1].toLowerCase()] = helper.cagr(responseData.equity, 1) + ' %' // CAGR\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[2].toLowerCase()] = responseData.sharpe + ' &nbsp;&nbsp;' // Sharpe Ratio // to-do: BE - sharpe for 3m and 12m bases\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[3].toLowerCase()] = helper.maxDD(responseData, 1) + ' %' // Max DrawDown\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[4].toLowerCase()] = eqOut + ' $' // Equity Outstanding\r\n        rows.push(row) \r\n\r\n        // 12 Months\r\n        row = {}\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[0].toLowerCase()] = helper.ytd(responseData, 4) + ' %'\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[1].toLowerCase()] = helper.cagr(responseData.equity, 4) + ' %'\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[2].toLowerCase()] = responseData.sharpe + ' &nbsp;&nbsp;'\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[3].toLowerCase()] = helper.maxDD(responseData, 4) + ' %'\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[4].toLowerCase()] = eqOut + ' $'\r\n        rows.push(row)  \r\n\r\n        // Since Inception\r\n        row = {}\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[0].toLowerCase()] = responseData.ytd + ' %'\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[1].toLowerCase()] = responseData.cagr + ' %'\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[2].toLowerCase()] = responseData.sharpe + ' &nbsp;&nbsp;'\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[3].toLowerCase()] = responseData.maxdd + ' %'\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[4].toLowerCase()] = eqOut + ' $'\r\n        rows.push(row)     \r\n\r\n        // transposing rows\r\n        this.$t('dashboard.performanceStatisticsTable.lines').forEach(line => {\r\n          var row = []\r\n\r\n          row.push(line)\r\n          rows.forEach(origRow => row.push(origRow[line.toLowerCase()]))\r\n\r\n          rowsT.push(row);\r\n        });          \r\n\r\n        return rowsT\r\n      },\r\n\r\n      tradesAggregator(oldRows, newRows) {\r\n        return helper.sortAggregator(oldRows, newRows, this.$t('dashboard.lastTradesTable.columns')[0].toLowerCase())\r\n      },\r\n\r\n      ordersAggregator(oldRows, newRows) {\r\n        return helper.sortAggregator(oldRows, newRows, this.$t('dashboard.pendingOrdersTable.columns')[0].toLowerCase())\r\n      }      \r\n    },\r\n\r\n    mounted() {\r\n      this.initSoundSignals()\r\n      this.initIB()\r\n    }\r\n  };\r\n</script>\r\n<style>\r\n.message {\r\n    white-space: pre-line;\r\n}\r\n\r\n.noError {\r\n    color: gray;    \r\n}\r\n\r\n.error {\r\n  color: red !important;\r\n}\r\n</style>"],"sourceRoot":"src/custom/apps/dashboard"}]}