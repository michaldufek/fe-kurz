{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js!/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/IBConnection.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/IBConnection.vue","mtime":1587030366014},{"path":"/home/dufek/Documents/gitlab/frs-apps/.babelrc","mtime":1576496397055},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["IBConnection.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n\r\n        <div class=\"row\" style=\"margin-top: 20px\">\r\n            <SlideYUpTransition>\r\n\r\n                <card type=\"secondary\"\r\n                    header-classes=\"bg-white pb-5\"\r\n                    body-classes=\"p-0 px-lg-5 py-lg-5\"\r\n                    class=\"modal-sm animated landingCard\"\r\n                    :class=\"{ shake: isShaking }\"\r\n                    v-if=\"showLogin\">\r\n                    <DualRingLoader v-if=\"loading\" :color=\"'#54f1d2'\" :class=\"[ connected ? 'loader' : 'loaderDisconnected', 'loader' ]\" />\r\n                    <template>\r\n                        <div v-if=\"!connected\" class=\"text-center text-muted mb-4\">\r\n                            {{ `${$t('login.signIn')} ${$t('login.with')} ` }}<b>{{ `${$t('login.IB.title')} ` }}</b>{{ $t('login.IB.credentials') }}\r\n                        </div>\r\n                        <form role=\"form\">\r\n                            <base-input v-if=\"!connected\"\r\n                                        alternative\r\n                                        class=\"mb-3\"\r\n                                        :placeholder=\"$t('login.username')\"\r\n                                        addon-left-icon=\"ni ni-email-83\"\r\n                                        v-model=\"email\"\r\n                                        @keyup.enter=\"logIn\">\r\n                            </base-input>\r\n                            <base-input v-if=\"!connected\"\r\n                                        alternative\r\n                                        type=\"password\"\r\n                                        :placeholder=\"$t('login.password')\"\r\n                                        addon-left-icon=\"ni ni-lock-circle-open\"\r\n                                        v-model=\"pass\"\r\n                                        @keyup.enter=\"logIn\">\r\n                            </base-input>\r\n                            <div class=\"text-center\">\r\n                                <p :class=\"[ error ? errorClass : noErrorClass , msgClass ]\">{{message}}</p>\r\n                            </div>\r\n                            <base-checkbox v-if=\"!connected\" v-model=\"paper\">\r\n                                {{$t('login.IB.paper')}}\r\n                            </base-checkbox>\r\n                            <div class=\"text-center\">\r\n                                <base-button v-if=\"!connected\" type=\"secondary\" class=\"my-4\" @click=\"logIn\">{{$t('login.signIn')}}</base-button>\r\n                                <base-button v-else type=\"secondary\" class=\"my-4\" @click=\"disconnect\">{{$t('login.disconnect')}}</base-button>\r\n                            </div>\r\n                        </form>\r\n                    </template>\r\n                </card>\r\n\r\n            </SlideYUpTransition>\r\n        </div>\r\n\r\n        <div class=\"row\" style=\"margin-top: 20px\">\r\n            <ul v-if=\"connected\" style=\"list-style-type: none;\">\r\n                <li v-for=\"log in logs\">            \r\n                    {{`[${log.timestamp}] ${log.info}`}}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n<script>\r\nimport { SlideYUpTransition } from \"vue2-transitions\";\r\nimport DualRingLoader from '@bit/joshk.vue-spinners-css.dual-ring-loader';\r\nimport '../assets/css/shake.css'\r\n\r\nimport constants from '@/custom/assets/js/constants'\r\nimport helper from '@/custom/assets/js/helper'\r\n\r\n\r\nexport default {\r\n    components: {\r\n        SlideYUpTransition,\r\n        DualRingLoader\r\n    },\r\n    data() {\r\n      return { \r\n        storeKey: constants.translationKeys.IBLogin,\r\n        GWLogsTimer: null,\r\n        logs: [],\r\n\r\n        loading: false,        \r\n        connected: false,\r\n        error: false,\r\n        message: '',\r\n        isShaking: false,\r\n\r\n        showLogin: false,\r\n        paper: true,\r\n        email: '',\r\n        pass: '',\r\n\r\n        // css classes\r\n        msgClass: 'message',\r\n        noErrorClass: 'noError',\r\n        errorClass: 'error'\r\n      };\r\n    },\r\n    methods: {\r\n        init() {\r\n            let data = this.$store.getItem(this.storeKey)\r\n            if (data) {\r\n                this.email = data.email\r\n                this.setGWStatusInterval()\r\n            }\r\n\r\n            this.openLoginModal()\r\n        },\r\n\r\n        checkGWrunning() {\r\n            this.loading = true\r\n\r\n            this.$http\r\n            .get(constants.urls.liveDepl.gateway.status + '/' + this.email)\r\n            .then(response => {\r\n                if ('error' in response.data) {\r\n                    this.error = true\r\n                    this.message = response.data.error\r\n                } else {\r\n                    this.error = false\r\n                    this.connected = response.data.status\r\n\r\n                    if (this.connected) {\r\n                        this.setGWLogsInterval()\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                this.error = true\r\n                this.message = error.message\r\n                this.shakeModal()\r\n\r\n                if (error.message === constants.strings.networkError) {\r\n                    helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t('login.IB.title')} ${this.$t('login.IB.status')}`)\r\n                }\r\n            })\r\n            .finally(() => this.loading = false)\r\n        },\r\n\r\n        logIn () {\r\n            if (this.paper) {\r\n                this.startGW()\r\n            } else {\r\n                this.$confirm(this.$t('login.IB.confirmLive'))\r\n                .then(() => {\r\n                    this.startGW()\r\n                })\r\n                .catch(() => {})\r\n            }\r\n        },   \r\n        disconnect() {\r\n            this.stopGW()\r\n        }, \r\n\r\n        startGW() {\r\n            this.loading = true\r\n\r\n            this.$http\r\n            .post(constants.urls.liveDepl.gateway.start, {\r\n                tradingMode: this.paper ? 'paper' : 'live',\r\n                userid: this.email,\r\n                password: this.pass\r\n            })\r\n            .then(response => {\r\n                this.error = false\r\n                this.message = response.data.message\r\n                this.connected = true\r\n                this.pass = ''\r\n\r\n                this.setGWLogsInterval()\r\n\r\n                this.$router.replace(this.$route.query.redirect || '/')         // redirect to Dashboard\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                this.error = true\r\n                this.shakeModal()\r\n\r\n                if (error.message === constants.strings.networkError) {\r\n                    helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t('login.IB.title')} ${this.$t('login.IB.login')}`)\r\n                    this.message = error.message\r\n                }\r\n\r\n                if ('type' in error.response.data) {\r\n                    this.message = error.response.data.type + ' error'\r\n\r\n                    if ('message' in error.response.data) {\r\n                        this.message += ': ' + error.response.data.message\r\n                    } else {\r\n                        this.message += '.'\r\n                    }\r\n                }                \r\n            })\r\n            .finally(() => this.loading = false)\r\n        },\r\n        stopGW() {\r\n            this.loading = true\r\n\r\n            this.$http\r\n            .post(constants.urls.liveDepl.gateway.stop, { userid: this.email }, this.$store.getItem('headers'))   // authorized because GW doesn't need authorization\r\n            .then(response => {\r\n                this.error = false\r\n                this.message = response.data.message\r\n                this.connected = false\r\n\r\n                if (this.GWLogsTimer) {\r\n                    clearInterval(this.GWLogsTimer);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                this.error = true                \r\n                this.shakeModal()\r\n\r\n                if (error.message === constants.strings.networkError) {\r\n                    helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t('login.IB.title')} ${this.$t('login.disconnect')}`)\r\n                    this.message = error.message\r\n                }\r\n\r\n                if ('type' in error.response.data) {\r\n                    this.message = error.response.data.type + ' error'\r\n\r\n                    if ('message' in error.response.data) {\r\n                        this.message += ': ' + error.response.data.message\r\n                    } else {\r\n                        this.message += '.'\r\n                    }\r\n                }\r\n            })\r\n            .finally(() => this.loading = false)\r\n        }, \r\n\r\n        setInterval(timer, routine) {\r\n            routine()\r\n        \r\n            if (timer) {\r\n                clearInterval(timer)\r\n            }\r\n\r\n            timer = setInterval(() => { \r\n                routine()\r\n            }, constants.intervals.soundSignal )\r\n        },\r\n        \r\n        setGWStatusInterval() {\r\n            this.setInterval(this.GWStatusTimer, this.checkGWrunning)\r\n        },\r\n        setGWLogsInterval() {\r\n            this.setInterval(this.GWLogsTimer, this.getGWLogs)\r\n        },\r\n        getGWLogs() {\r\n            this.loading = true\r\n\r\n            this.$http\r\n            .get(constants.urls.liveDepl.gateway.logs + '/' + this.email, this.$store.getItem('headers'))   // authorized because GW doesn't need authorization\r\n            .then(response => {\r\n                if ('error' in response.data) {\r\n                    this.error = true\r\n                } else {\r\n                    this.error = false\r\n                    this.logs = response.data\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                this.error = true\r\n                this.message = error.message\r\n                this.shakeModal()\r\n\r\n                if (error.message === constants.strings.networkError) {\r\n                    helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t('login.IB.title')} ${this.$t('login.IB.logs')}`)\r\n                }\r\n            })\r\n            .finally(() => this.loading = false)\r\n        },\r\n\r\n        shakeModal(){\r\n            this.isShaking = true\r\n            setTimeout(() => { \r\n                this.isShaking = false\r\n            }, constants.intervals.shake );\r\n            this.pass = ''\r\n        },\r\n        \r\n        openLoginModal(){\r\n            this.error = false\r\n            this.message = ''\r\n            this.pass = ''\r\n\r\n            setTimeout(() => {\r\n                this.showLogin = true  \r\n            }, constants.intervals.loginShow );\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        this.init()\r\n    },\r\n\r\n    destroyed() {\r\n        if (this.GWStatusTimer) {\r\n            clearInterval(this.GWStatusTimer)\r\n        }\r\n        if (this.GWLogsTimer) {\r\n            clearInterval(this.GWLogsTimer)\r\n        }\r\n    },\r\n\r\n    watch: {\r\n        email(val) {\r\n            helper.updateStore(this.$store, 'email', val, this.storeKey)            \r\n        },\r\n        connected(val) {\r\n            helper.updateStore(this.$store, 'connected', val, this.storeKey)\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n.landingCard {\r\n    margin: auto;\r\n    border-radius: 1rem;\r\n    background: #2f3668;\r\n}\r\n\r\n.message {\r\n    white-space: pre-line;\r\n}\r\n\r\n.noError {\r\n    color: gray;    \r\n}\r\n\r\n.error {\r\n  color: red !important;\r\n}\r\n\r\n.loader {\r\n  width: 80px; \r\n  height: 80px;  \r\n  position: absolute;\r\n  left: 150px;\r\n  top: 10px;\r\n  z-index: 1;\r\n}\r\n\r\n.loaderDisconnected {\r\n    top: 60px;\r\n}\r\n</style>"],"sourceRoot":"src/custom/apps"}]}