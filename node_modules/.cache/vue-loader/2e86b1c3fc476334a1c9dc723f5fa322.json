{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/IBConnection.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/IBConnection.vue","mtime":1587030366014},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["IBConnection.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"IBConnection.vue","sourceRoot":"src/custom/apps","sourcesContent":["<template>\r\n    <div>\r\n\r\n        <div class=\"row\" style=\"margin-top: 20px\">\r\n            <SlideYUpTransition>\r\n\r\n                <card type=\"secondary\"\r\n                    header-classes=\"bg-white pb-5\"\r\n                    body-classes=\"p-0 px-lg-5 py-lg-5\"\r\n                    class=\"modal-sm animated landingCard\"\r\n                    :class=\"{ shake: isShaking }\"\r\n                    v-if=\"showLogin\">\r\n                    <DualRingLoader v-if=\"loading\" :color=\"'#54f1d2'\" :class=\"[ connected ? 'loader' : 'loaderDisconnected', 'loader' ]\" />\r\n                    <template>\r\n                        <div v-if=\"!connected\" class=\"text-center text-muted mb-4\">\r\n                            {{ `${$t('login.signIn')} ${$t('login.with')} ` }}<b>{{ `${$t('login.IB.title')} ` }}</b>{{ $t('login.IB.credentials') }}\r\n                        </div>\r\n                        <form role=\"form\">\r\n                            <base-input v-if=\"!connected\"\r\n                                        alternative\r\n                                        class=\"mb-3\"\r\n                                        :placeholder=\"$t('login.username')\"\r\n                                        addon-left-icon=\"ni ni-email-83\"\r\n                                        v-model=\"email\"\r\n                                        @keyup.enter=\"logIn\">\r\n                            </base-input>\r\n                            <base-input v-if=\"!connected\"\r\n                                        alternative\r\n                                        type=\"password\"\r\n                                        :placeholder=\"$t('login.password')\"\r\n                                        addon-left-icon=\"ni ni-lock-circle-open\"\r\n                                        v-model=\"pass\"\r\n                                        @keyup.enter=\"logIn\">\r\n                            </base-input>\r\n                            <div class=\"text-center\">\r\n                                <p :class=\"[ error ? errorClass : noErrorClass , msgClass ]\">{{message}}</p>\r\n                            </div>\r\n                            <base-checkbox v-if=\"!connected\" v-model=\"paper\">\r\n                                {{$t('login.IB.paper')}}\r\n                            </base-checkbox>\r\n                            <div class=\"text-center\">\r\n                                <base-button v-if=\"!connected\" type=\"secondary\" class=\"my-4\" @click=\"logIn\">{{$t('login.signIn')}}</base-button>\r\n                                <base-button v-else type=\"secondary\" class=\"my-4\" @click=\"disconnect\">{{$t('login.disconnect')}}</base-button>\r\n                            </div>\r\n                        </form>\r\n                    </template>\r\n                </card>\r\n\r\n            </SlideYUpTransition>\r\n        </div>\r\n\r\n        <div class=\"row\" style=\"margin-top: 20px\">\r\n            <ul v-if=\"connected\" style=\"list-style-type: none;\">\r\n                <li v-for=\"log in logs\">            \r\n                    {{`[${log.timestamp}] ${log.info}`}}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n<script>\r\nimport { SlideYUpTransition } from \"vue2-transitions\";\r\nimport DualRingLoader from '@bit/joshk.vue-spinners-css.dual-ring-loader';\r\nimport '../assets/css/shake.css'\r\n\r\nimport constants from '@/custom/assets/js/constants'\r\nimport helper from '@/custom/assets/js/helper'\r\n\r\n\r\nexport default {\r\n    components: {\r\n        SlideYUpTransition,\r\n        DualRingLoader\r\n    },\r\n    data() {\r\n      return { \r\n        storeKey: constants.translationKeys.IBLogin,\r\n        GWLogsTimer: null,\r\n        logs: [],\r\n\r\n        loading: false,        \r\n        connected: false,\r\n        error: false,\r\n        message: '',\r\n        isShaking: false,\r\n\r\n        showLogin: false,\r\n        paper: true,\r\n        email: '',\r\n        pass: '',\r\n\r\n        // css classes\r\n        msgClass: 'message',\r\n        noErrorClass: 'noError',\r\n        errorClass: 'error'\r\n      };\r\n    },\r\n    methods: {\r\n        init() {\r\n            let data = this.$store.getItem(this.storeKey)\r\n            if (data) {\r\n                this.email = data.email\r\n                this.setGWStatusInterval()\r\n            }\r\n\r\n            this.openLoginModal()\r\n        },\r\n\r\n        checkGWrunning() {\r\n            this.loading = true\r\n\r\n            this.$http\r\n            .get(constants.urls.liveDepl.gateway.status + '/' + this.email)\r\n            .then(response => {\r\n                if ('error' in response.data) {\r\n                    this.error = true\r\n                    this.message = response.data.error\r\n                } else {\r\n                    this.error = false\r\n                    this.connected = response.data.status\r\n\r\n                    if (this.connected) {\r\n                        this.setGWLogsInterval()\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                this.error = true\r\n                this.message = error.message\r\n                this.shakeModal()\r\n\r\n                if (error.message === constants.strings.networkError) {\r\n                    helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t('login.IB.title')} ${this.$t('login.IB.status')}`)\r\n                }\r\n            })\r\n            .finally(() => this.loading = false)\r\n        },\r\n\r\n        logIn () {\r\n            if (this.paper) {\r\n                this.startGW()\r\n            } else {\r\n                this.$confirm(this.$t('login.IB.confirmLive'))\r\n                .then(() => {\r\n                    this.startGW()\r\n                })\r\n                .catch(() => {})\r\n            }\r\n        },   \r\n        disconnect() {\r\n            this.stopGW()\r\n        }, \r\n\r\n        startGW() {\r\n            this.loading = true\r\n\r\n            this.$http\r\n            .post(constants.urls.liveDepl.gateway.start, {\r\n                tradingMode: this.paper ? 'paper' : 'live',\r\n                userid: this.email,\r\n                password: this.pass\r\n            })\r\n            .then(response => {\r\n                this.error = false\r\n                this.message = response.data.message\r\n                this.connected = true\r\n                this.pass = ''\r\n\r\n                this.setGWLogsInterval()\r\n\r\n                this.$router.replace(this.$route.query.redirect || '/')         // redirect to Dashboard\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                this.error = true\r\n                this.shakeModal()\r\n\r\n                if (error.message === constants.strings.networkError) {\r\n                    helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t('login.IB.title')} ${this.$t('login.IB.login')}`)\r\n                    this.message = error.message\r\n                }\r\n\r\n                if ('type' in error.response.data) {\r\n                    this.message = error.response.data.type + ' error'\r\n\r\n                    if ('message' in error.response.data) {\r\n                        this.message += ': ' + error.response.data.message\r\n                    } else {\r\n                        this.message += '.'\r\n                    }\r\n                }                \r\n            })\r\n            .finally(() => this.loading = false)\r\n        },\r\n        stopGW() {\r\n            this.loading = true\r\n\r\n            this.$http\r\n            .post(constants.urls.liveDepl.gateway.stop, { userid: this.email }, this.$store.getItem('headers'))   // authorized because GW doesn't need authorization\r\n            .then(response => {\r\n                this.error = false\r\n                this.message = response.data.message\r\n                this.connected = false\r\n\r\n                if (this.GWLogsTimer) {\r\n                    clearInterval(this.GWLogsTimer);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                this.error = true                \r\n                this.shakeModal()\r\n\r\n                if (error.message === constants.strings.networkError) {\r\n                    helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t('login.IB.title')} ${this.$t('login.disconnect')}`)\r\n                    this.message = error.message\r\n                }\r\n\r\n                if ('type' in error.response.data) {\r\n                    this.message = error.response.data.type + ' error'\r\n\r\n                    if ('message' in error.response.data) {\r\n                        this.message += ': ' + error.response.data.message\r\n                    } else {\r\n                        this.message += '.'\r\n                    }\r\n                }\r\n            })\r\n            .finally(() => this.loading = false)\r\n        }, \r\n\r\n        setInterval(timer, routine) {\r\n            routine()\r\n        \r\n            if (timer) {\r\n                clearInterval(timer)\r\n            }\r\n\r\n            timer = setInterval(() => { \r\n                routine()\r\n            }, constants.intervals.soundSignal )\r\n        },\r\n        \r\n        setGWStatusInterval() {\r\n            this.setInterval(this.GWStatusTimer, this.checkGWrunning)\r\n        },\r\n        setGWLogsInterval() {\r\n            this.setInterval(this.GWLogsTimer, this.getGWLogs)\r\n        },\r\n        getGWLogs() {\r\n            this.loading = true\r\n\r\n            this.$http\r\n            .get(constants.urls.liveDepl.gateway.logs + '/' + this.email, this.$store.getItem('headers'))   // authorized because GW doesn't need authorization\r\n            .then(response => {\r\n                if ('error' in response.data) {\r\n                    this.error = true\r\n                } else {\r\n                    this.error = false\r\n                    this.logs = response.data\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                this.error = true\r\n                this.message = error.message\r\n                this.shakeModal()\r\n\r\n                if (error.message === constants.strings.networkError) {\r\n                    helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t('login.IB.title')} ${this.$t('login.IB.logs')}`)\r\n                }\r\n            })\r\n            .finally(() => this.loading = false)\r\n        },\r\n\r\n        shakeModal(){\r\n            this.isShaking = true\r\n            setTimeout(() => { \r\n                this.isShaking = false\r\n            }, constants.intervals.shake );\r\n            this.pass = ''\r\n        },\r\n        \r\n        openLoginModal(){\r\n            this.error = false\r\n            this.message = ''\r\n            this.pass = ''\r\n\r\n            setTimeout(() => {\r\n                this.showLogin = true  \r\n            }, constants.intervals.loginShow );\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        this.init()\r\n    },\r\n\r\n    destroyed() {\r\n        if (this.GWStatusTimer) {\r\n            clearInterval(this.GWStatusTimer)\r\n        }\r\n        if (this.GWLogsTimer) {\r\n            clearInterval(this.GWLogsTimer)\r\n        }\r\n    },\r\n\r\n    watch: {\r\n        email(val) {\r\n            helper.updateStore(this.$store, 'email', val, this.storeKey)            \r\n        },\r\n        connected(val) {\r\n            helper.updateStore(this.$store, 'connected', val, this.storeKey)\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n.landingCard {\r\n    margin: auto;\r\n    border-radius: 1rem;\r\n    background: #2f3668;\r\n}\r\n\r\n.message {\r\n    white-space: pre-line;\r\n}\r\n\r\n.noError {\r\n    color: gray;    \r\n}\r\n\r\n.error {\r\n  color: red !important;\r\n}\r\n\r\n.loader {\r\n  width: 80px; \r\n  height: 80px;  \r\n  position: absolute;\r\n  left: 150px;\r\n  top: 10px;\r\n  z-index: 1;\r\n}\r\n\r\n.loaderDisconnected {\r\n    top: 60px;\r\n}\r\n</style>"]}]}