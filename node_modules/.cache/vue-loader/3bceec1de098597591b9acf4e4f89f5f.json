{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/dashboard/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/dashboard/Dashboard.vue","mtime":1595835860230},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/custom/apps/dashboard","sourcesContent":["<template>\r\n  <div>\r\n    <audio id=\"open\" src=\"media/open.mp3\" preload=\"auto\"></audio>\r\n    <audio id=\"win\" src=\"media/win.mp3\" preload=\"auto\"></audio>\r\n    <audio id=\"lose\" src=\"media/lose.mp3\" preload=\"auto\"></audio>\r\n    <audio id=\"breakEven\" src=\"media/breakEven.mp3\" preload=\"auto\"></audio>    \r\n    <!-- <audio id=\"jumpOnAsset\" src=\"media/jumpOnAsset.mp3\" preload=\"auto\"></audio> -->\r\n    <audio id=\"jumpOnSP500\" src=\"media/jumpOnSP500.mp3\" preload=\"auto\"></audio>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <fancy-chart :title=\"$t('dashboard.title')\"\r\n                     :apiUrls=\"chartUrls\"\r\n                     :key=\"updateKey\" >\r\n        </fancy-chart>\r\n      </div>\r\n    </div>  \r\n\r\n     <div class=\"row\">      \r\n      <div class=\"col-xl-4 col-12\">\r\n        <fancy-table :title=\"$t('dashboard.lastTradesTable.title')\"\r\n                     :apiUrls=\"statsUrls\"\r\n                     :rowsCreator=\"tradesRowsCreator\"\r\n                     :aggregator=\"tradesAggregator\"\r\n                     :titles=\"$t('terms.tradeTypes')\"\r\n                     :columns=\"$t('dashboard.lastTradesTable.columns')\"\r\n                     :key=\"updateKey\" >\r\n        </fancy-table>\r\n      </div>\r\n\r\n      <div class=\"col-xl-4 col-12\">  \r\n        <fancy-table :title=\"$t('dashboard.pendingOrdersTable.title')\"\r\n                     :apiUrls=\"statsUrls\"\r\n                     :rowsCreator=\"ordersRowsCreator\"\r\n                     :aggregator=\"ordersAggregator\"\r\n                     :titles=\"$t('terms.tradeTypes')\"\r\n                     :columns=\"$t('dashboard.pendingOrdersTable.columns')\"\r\n                     :key=\"updateKey\" >\r\n        </fancy-table>\r\n      </div>\r\n\r\n      <div class=\"col-xl-4 col-12\">\r\n        <fancy-table :title=\"$t('dashboard.performanceStatistics')\"\r\n                     :apiUrls=\"chartUrls\"\r\n                     :rowsCreator=\"statsRowsCreator\"\r\n                     :titles=\"$t('terms.perfStats')\"\r\n                     :columns=\"$t('dashboard.performanceStatisticsTable.columns')\"\r\n                     :key=\"updateKey\" >\r\n        </fancy-table>\r\n\r\n        <div v-if=\"connected\" style=\"float: right;\">\r\n          <DualRingLoader v-if=\"loading\" :color=\"'#54f1d2'\" style=\"width: 80px; height: 80px;margin-right: 50px;margin-bottom: -35px;\" />\r\n          <base-button type=\"secondary\" class=\"my-4\" @click=\"liquidate\">{{$t('dashboard.liquidate')}}</base-button>\r\n          <p :class=\"[ error ? errorClass : noErrorClass , msgClass ]\">{{message}}</p>\r\n        </div>        \r\n      </div>\r\n    </div> \r\n    \r\n  </div>\r\n</template>\r\n<script>\r\n  import FancyChart from '@/custom/components/Charts/FancyChart';\r\n  import FancyTable from '@/custom/components/Tables/FancyTable';\r\n  import DualRingLoader from '@bit/joshk.vue-spinners-css.dual-ring-loader';\r\n\r\n  import helper from '@/custom/assets/js/helper';\r\n  import constants from '@/custom/assets/js/constants';\r\n\r\n\r\n  export default {\r\n    components: {\r\n      FancyChart,\r\n      FancyTable,\r\n      DualRingLoader\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        connected: false,\r\n        email: '',\r\n        error: false,\r\n        message: '',\r\n        loading: false,\r\n        updateKey: 0,\r\n\r\n        chartUrls: [],\r\n        statsUrls: [],\r\n        heardOrders: {\r\n          open: [],\r\n          win: [],\r\n          lose: [],\r\n          breakEven: []\r\n        },\r\n        \r\n        // css classes\r\n        msgClass: 'message',\r\n        noErrorClass: 'noError',\r\n        errorClass: 'error'\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      initSoundSignals() {\r\n        setInterval(() => { \r\n          // this.checkOrdersStatusChange();\r\n        }, constants.intervals.minute );\r\n      },\r\n\r\n      initIB() {\r\n        let data = this.$store.getItem(constants.translationKeys.IBLogin)\r\n        if (data) {\r\n          this.email = data.email\r\n          this.checkGWrunning()   // no need to set interval because only live portfolio should be here\r\n        } else {\r\n          this.setApiUrls()\r\n        }\r\n      },\r\n\r\n      checkGWrunning() {\r\n        this.loading = true\r\n\r\n        this.$http\r\n        .get(constants.urls.liveDepl.gateway.status + '/' + this.email)\r\n        .then(response => {\r\n          if ('error' in response.data) {\r\n            helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t('dashboard.title')} ${this.$t('login.IB.status')} - ${response.data.error}`)\r\n          } else {\r\n            this.connected = response.data.status\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n          this.connected = false\r\n\r\n          if (error.message === constants.strings.networkError) {\r\n            helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t('dashboard.title')} ${this.$t('login.IB.status')}`)\r\n          }\r\n        })\r\n        .finally(() => {\r\n          this.loading = false\r\n          this.setApiUrls()\r\n        })\r\n      },\r\n\r\n      setApiUrls() {\r\n        this.chartUrls = []\r\n        this.statsUrls = []\r\n\r\n        if (this.connected) {\r\n          this.chartUrls.push(constants.urls.liveDepl.report + this.email)    // todo: must be chart url here!\r\n          this.statsUrls.push(constants.urls.liveDepl.report + this.email)\r\n        }\r\n        else {\r\n          // get just urls from named urls dictionary\r\n          for (const [key, value] of Object.entries(constants.urls['chart'])) {\r\n            this.chartUrls.push(value)\r\n          }\r\n          for (const [key, value] of Object.entries(constants.urls['stats'])) {\r\n            this.statsUrls.push(value)\r\n          }\r\n        }\r\n\r\n        this.updateKey++\r\n      },\r\n\r\n      liquidate() {\r\n        this.$confirm(this.$t('dashboard.confirmLiquidate'))\r\n        .then(() => {\r\n          this.loading = true\r\n\r\n          this.$http\r\n          .post(constants.urls.liveDepl.liquidate, { userid: this.email })\r\n          .then(response => {\r\n            this.error = false\r\n            this.message = response.data.message\r\n            this.updateKey++\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n            this.error = true\r\n\r\n            if (error.message === constants.strings.networkError) {\r\n                helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t('dashboard.title')} ${this.$t('dashboard.liquidate')}`)\r\n                this.message = error.message\r\n            }\r\n\r\n            if ('type' in error.response.data) {\r\n                this.message = error.response.data.type + ' error'\r\n\r\n                if ('message' in error.response.data) {\r\n                    this.message += ': ' + error.response.data.message\r\n                } else {\r\n                    this.message += '.'\r\n                }\r\n            }                \r\n          })\r\n          .finally(() => this.loading = false)\r\n        })\r\n        .catch(_ => {})\r\n      },\r\n\r\n      liquidate() {\r\n        this.$confirm(this.$t('dashboard.confirmLiquidate'))\r\n        .then(() => {\r\n          this.loading = true\r\n\r\n          this.$http\r\n          .post(constants.urls.liveDepl.liquidate, { userid: this.email })\r\n          .then(response => {\r\n            this.error = false\r\n            this.message = response.data.message\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n            this.error = true\r\n\r\n            if (error.message === constants.strings.networkError) {\r\n                helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t('dashboard.title')} ${this.$t('dashboard.liquidate')}`)\r\n                this.message = error.message\r\n            }\r\n\r\n            if ('type' in error.response.data) {\r\n                this.message = error.response.data.type + ' error'\r\n\r\n                if ('message' in error.response.data) {\r\n                    this.message += ': ' + error.response.data.message\r\n                } else {\r\n                    this.message += '.'\r\n                }\r\n            }                \r\n          })\r\n          .finally(() => this.loading = false)\r\n        })\r\n        .catch(_ => {})\r\n      },\r\n\r\n      checkOrdersStatusChange() {\r\n        // to-do: right definitions when to notify (blocker: BE)\r\n        this.$http\r\n        .get(constants.urls.stats[\"MF Report\"])\r\n        .then(response => {\r\n          response.data.openTrades.forEach(openTrade => {\r\n            if (!(openTrade.order.orderId in heardOrders.open) && openTrade.orderStatus === \"Submitted\") {\r\n              this.notify('open', 'info', this.$t('notifications.open'))\r\n              this.heardOrders.open.push(openTrade.order.orderId)\r\n            } else if (!(openTrade.order.orderId in heardOrders.win) && openTrade.orderStatus === \"Filled\") {\r\n              this.notify('win', 'success', this.$t('notifications.win'))\r\n              this.heardOrders.win.push(openTrade.order.orderId)\r\n            } else if (!(openTrade.order.orderId in heardOrders.lose) && openTrade.orderStatus === \"Cancelled\") {\r\n              this.notify('lose', 'warning', this.$t('notifications.lose'))\r\n              this.heardOrders.lose.push(openTrade.order.orderId)\r\n            } else if (!(openTrade.order.orderId in heardOrders.breakEven) && openTrade.orderStatus === \"Inactive\") {\r\n              this.notify('breakEven', 'info', this.$t('notifications.breakEven'))\r\n              this.heardOrders.breakEven.push(openTrade.order.orderId)\r\n            }\r\n          })\r\n        })\r\n      },      \r\n\r\n      notify(audioEl, type, msg) {\r\n        document.getElementById(audioEl).play();\r\n\r\n        this.$notify({\r\n          type: type, \r\n          message: msg\r\n        })\r\n      },\r\n\r\n      // fancy-tables props functions\r\n      tradesRowsCreator(responseData) {\r\n        let rows = []\r\n\r\n        responseData.openTrades.forEach(openTrade => {\r\n            let row = []\r\n\r\n            row.push(helper.formatDateOnly(openTrade.contract.lastTradeDateOrContractMonth)) // date and time\r\n            row.push(openTrade.order.action) // trade type\r\n            row.push(openTrade.order.auxPrice) // result (%)\r\n            // result (usd)\r\n\r\n            rows.push(row);\r\n          });\r\n\r\n        return rows\r\n      },\r\n\r\n      ordersRowsCreator(responseData) {\r\n        let rows = []\r\n\r\n        if ('fills' in responseData) {\r\n          responseData.fills.forEach(fill => {\r\n              let row = []\r\n\r\n              row.push(helper.formatDate(fill.time)) // date\r\n              row.push(fill.execution.side) // trade type\r\n              // target (usd)\r\n              // stop loss (usd)\r\n\r\n              rows.push(row);\r\n          })\r\n        }\r\n\r\n        return rows\r\n      },\r\n\r\n      statsRowsCreator(responseData) {\r\n        let row = {}\r\n        let rows = [];\r\n        let rowsT = []\r\n        let eqOut = responseData.equity[responseData.equity.length - 1]\r\n        \r\n        // 3 Months\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[0].toLowerCase()] = helper.ytd(responseData, 1) + ' %' // YTD\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[1].toLowerCase()] = helper.cagr(responseData.equity, 1) + ' %' // CAGR\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[2].toLowerCase()] = responseData.sharpe + ' &nbsp;&nbsp;' // Sharpe Ratio // to-do: BE - sharpe for 3m and 12m bases\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[3].toLowerCase()] = helper.maxDD(responseData, 1) + ' %' // Max DrawDown\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[4].toLowerCase()] = eqOut + ' $' // Equity Outstanding\r\n        rows.push(row) \r\n\r\n        // 12 Months\r\n        row = {}\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[0].toLowerCase()] = helper.ytd(responseData, 4) + ' %'\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[1].toLowerCase()] = helper.cagr(responseData.equity, 4) + ' %'\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[2].toLowerCase()] = responseData.sharpe + ' &nbsp;&nbsp;'\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[3].toLowerCase()] = helper.maxDD(responseData, 4) + ' %'\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[4].toLowerCase()] = eqOut + ' $'\r\n        rows.push(row)  \r\n\r\n        // Since Inception\r\n        row = {}\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[0].toLowerCase()] = responseData.ytd + ' %'\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[1].toLowerCase()] = responseData.cagr + ' %'\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[2].toLowerCase()] = responseData.sharpe + ' &nbsp;&nbsp;'\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[3].toLowerCase()] = responseData.maxdd + ' %'\r\n        row[this.$t('dashboard.performanceStatisticsTable.lines')[4].toLowerCase()] = eqOut + ' $'\r\n        rows.push(row)     \r\n\r\n        // transposing rows\r\n        this.$t('dashboard.performanceStatisticsTable.lines').forEach(line => {\r\n          var row = []\r\n\r\n          row.push(line)\r\n          rows.forEach(origRow => row.push(origRow[line.toLowerCase()]))\r\n\r\n          rowsT.push(row);\r\n        });          \r\n\r\n        return rowsT\r\n      },\r\n\r\n      tradesAggregator(oldRows, newRows) {\r\n        return helper.sortAggregator(oldRows, newRows, this.$t('dashboard.lastTradesTable.columns')[0].toLowerCase())\r\n      },\r\n\r\n      ordersAggregator(oldRows, newRows) {\r\n        return helper.sortAggregator(oldRows, newRows, this.$t('dashboard.pendingOrdersTable.columns')[0].toLowerCase())\r\n      }      \r\n    },\r\n\r\n    mounted() {\r\n      this.initSoundSignals()\r\n      this.initIB()\r\n    }\r\n  };\r\n</script>\r\n<style>\r\n.message {\r\n    white-space: pre-line;\r\n}\r\n\r\n.noError {\r\n    color: gray;    \r\n}\r\n\r\n.error {\r\n  color: red !important;\r\n}\r\n</style>"]}]}