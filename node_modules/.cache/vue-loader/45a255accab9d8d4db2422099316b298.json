{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/components/Cards/FancyCard.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/components/Cards/FancyCard.vue","mtime":1587025922792},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmxvYWRlciB7DQogIHdpZHRoOiA4MHB4OyANCiAgaGVpZ2h0OiA4MHB4OyANCiAgcG9zaXRpb246IGFic29sdXRlOw0KfQ0KDQoubG9hZGVyLmRhdGEgeyAgIA0KICB0b3A6IDQwJTsgDQogIGxlZnQ6IDQ1JTsNCn0NCg0KLmxvYWRlci5ub0RhdGEgew0KICB0b3A6IDEwJTsgDQogIGxlZnQ6IDQyLjUlOyAgICANCn0NCg0KLmZhbmN5Q2FyZC5ub0RhdGEgew0KICBoZWlnaHQ6IDEwMHB4OyAgICANCn0NCg0KaW1nLndhdGNobGlzdCB7DQogIGJveC1zaGFkb3c6IDBweCAwcHggMjBweCBjeWFuOw0KfQ0KDQppbWcubW91c2VPdmVyIHsNCiAgYm94LXNoYWRvdzogMHB4IDBweCAyMHB4IHJlZDsNCn0NCg0KLmRhdGFEaXYgew0KICB3aWR0aDogMTAwJTsNCiAgd2hpdGUtc3BhY2U6IHByZS13cmFwOw0KICBjb2xvcjojNDJiODgzOw0KfQ0KQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyNHB4KXsNCiAgLmRhdGFEaXZ7DQogICAgZmxvYXQ6IGxlZnQ7DQogICAgd2lkdGg6IDUwJTsNCiAgICB0ZXh0LWFsaWduOiBsZWZ0Ow0KICB9DQp9DQo="},{"version":3,"sources":["FancyCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiNA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FancyCard.vue","sourceRoot":"src/custom/components/Cards","sourcesContent":["<template>\r\n  <card :class=\"[ { noDataClass : !statsData.length }, fancyCardClass ]\">\r\n    <audio id=\"connectionLost\" src=\"media/connectionLost.mp3\" preload=\"auto\"></audio> <!-- to-do: must be global ! -->    \r\n    <h4 v-if=\"showTitle\" slot=\"header\" class=\"card-title\" style=\"float: left\">{{fullTitle}}</h4>\r\n    <img v-if=\"watchable\" \r\n         :src=\"watchlistSrc\" \r\n         slot=\"header\"          \r\n         style=\"float: right; border-radius: 10rem;\"\r\n         @click=\"watchlistAddRemove\" \r\n         :title=\"isOnWatchlist ? $t('research.stockPickingLab.watchlistRemove') : $t('research.stockPickingLab.watchlistAdd')\" \r\n         class=\"watchlist\"\r\n         onMouseOver=\"this.classList.add('mouseOver')\"\r\n         onMouseOut=\"this.classList.remove('mouseOver')\">\r\n    <section v-if=\"noData\">\r\n      <p>{{ $t('noData') }}</p>\r\n    </section>\r\n    <section v-else-if=\"isError\">\r\n      <p>{{ $t('dataError') }}</p>\r\n    </section>\r\n    <section v-else>\r\n      <DualRingLoader v-if=\"loading\" :color=\"'#54f1d2'\" :class=\"[ statsData.length ? dataClass : noDataClass, loaderClass ]\"/>\r\n      <div>\r\n        <div v-for=\"stat in Object.entries(statsData).slice(0, Math.ceil(Object.keys(statsData).length / 2))\" \r\n        class=\"dataDiv\"><p :title=\"titles ? titles[stat[0].toLowerCase()] : null\" style=\"display: inline-block\">{{stat[0]}}:&nbsp;</p>{{stat[1] | roundToFixed}}</div>\r\n        <div v-for=\"stat in Object.entries(statsData).slice(Math.ceil(Object.keys(statsData).length / 2), Object.keys(statsData).length)\" \r\n             class=\"dataDiv\"><p :title=\"titles ? titles[stat[0].toLowerCase()] : null\" style=\"display: inline-block\">{{stat[0]}}:&nbsp;</p>{{stat[1] | roundToFixed}}</div>\r\n      </div>\r\n    </section>\r\n  </card>\r\n</template>\r\n<script>\r\nimport DualRingLoader from '@bit/joshk.vue-spinners-css.dual-ring-loader';\r\nimport constants from '@/custom/assets/js/constants';\r\n\r\n\r\nexport default {\r\n  name: 'fancy-card',\r\n  components: {\r\n    DualRingLoader\r\n  },\r\n  props: {\r\n    fullTitle: {\r\n      type: String,\r\n      description: \"Card full title\"\r\n    },\r\n    title: {\r\n      type: String,\r\n      description: \"Card title used mainly for errors\"\r\n    },\r\n    showTitle: {\r\n      type: Boolean,\r\n      description: \"Whether to show card title\"\r\n    },\r\n    watchable: {\r\n      type: Boolean,\r\n      description: \"Whether can be added to stocks watchlist\"\r\n    },    \r\n    apiUrl: {\r\n      type: String,\r\n      description: \"URL to API data source\"\r\n    },\r\n    items: {\r\n      type: Array,\r\n      default: () => [],\r\n      description: \"Statistics names\"\r\n    },  \r\n    values: {\r\n      type: Array,\r\n      default: () => [],\r\n      description: \"Items values (of shape [#items])\"\r\n    },\r\n    valuesCreator: {\r\n      type: Function,\r\n      default: responseData => {\r\n        return new Array(this.items.length)\r\n      },\r\n      description: \"How to create items values (of shape [#items]) from response data if no values\"\r\n    },\r\n    titles: {\r\n      type: Object,\r\n      default: () => {},\r\n      description: \"Items descriptions\"\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      error: false,\r\n      loading: false,\r\n      statsData: {},\r\n      isOnWatchlist: false,\r\n\r\n      // css classes\r\n      dataClass: 'data',      \r\n      noDataClass: 'noData',\r\n      loaderClass: 'loader',\r\n      fancyCardClass: 'fancyCard'\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    noData() {\r\n      return !this.loading && !Object.keys(this.statsData).length\r\n    },\r\n    isError() {\r\n      return this.error\r\n    },\r\n\r\n    watchlistSrc() {\r\n      return this.isOnWatchlist ? require('../../assets/img/favorite-on_small.png') : require('../../assets/img/favorite-off_small.png')\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    initWatchlist() {\r\n      if (this.onWatchlist()) {\r\n        this.isOnWatchlist = true\r\n      }\r\n    },\r\n    initData() {\r\n      this.loadData();\r\n        \r\n      setInterval(() => { \r\n        this.loadData();\r\n      }, constants.intervals.dataReload );\r\n    },\r\n\r\n    loadData() {\r\n      this.statsData = {}\r\n\r\n      if (this.values.length) {\r\n        this.indexValues(this.values)\r\n      } else {\r\n        this.loading = true\r\n        this.error = false      \r\n\r\n        this.$http\r\n        .get(this.apiUrl)\r\n        .then(response => {\r\n          this.indexValues(this.valuesCreator(response.data))\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          this.error = true\r\n\r\n          if (error.message === constants.strings.networkError) {\r\n            helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', this.$t('notifications.beConnectionLost') + '(' + this.title + ' ' + this.$t('card') + ')')\r\n          }\r\n        })\r\n        .finally(() => {\r\n          this.loading = false\r\n        });\r\n      }\r\n    },   \r\n\r\n    indexValues(values) {\r\n      let itemNr = 0\r\n\r\n      values.forEach(value => {\r\n        // index value by statistic name\r\n        this.statsData[this.items[itemNr]] = value\r\n        itemNr++\r\n      });\r\n    },\r\n\r\n    getSymbol() {\r\n      return this.fullTitle ? this.fullTitle.split('. ')[1].split(' (')[0] : null\r\n    },\r\n\r\n    getWatchlist() {\r\n      // it can be changed from another StockCard so we always need to pick it up\r\n      return 'watchlist' in localStorage ? JSON.parse(localStorage.watchlist) : []\r\n    },\r\n    setWatchlist(val) {\r\n      localStorage.setItem('watchlist', JSON.stringify(val))\r\n    },\r\n    onWatchlist() {\r\n      return this.getWatchlist().indexOf(this.getSymbol()) >= 0\r\n    },\r\n    watchlistAddRemove() {\r\n      if (!this.watchable) {\r\n        return\r\n      }\r\n      \r\n      let watchlist = this.getWatchlist()\r\n\r\n      if (this.onWatchlist()) {        \r\n        watchlist.splice(watchlist.indexOf(this.getSymbol()), 1)\r\n        this.isOnWatchlist = false\r\n\r\n        this.setWatchlist(watchlist)\r\n      } else {\r\n        watchlist.push(this.getSymbol())\r\n        this.isOnWatchlist = true\r\n\r\n        this.setWatchlist(watchlist)\r\n      }\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    if (this.watchable) {\r\n      this.initWatchlist()\r\n    }\r\n    this.initData();\r\n  }\r\n};\r\n</script>\r\n<style>\r\n.loader {\r\n  width: 80px; \r\n  height: 80px; \r\n  position: absolute;\r\n}\r\n\r\n.loader.data {   \r\n  top: 40%; \r\n  left: 45%;\r\n}\r\n\r\n.loader.noData {\r\n  top: 10%; \r\n  left: 42.5%;    \r\n}\r\n\r\n.fancyCard.noData {\r\n  height: 100px;    \r\n}\r\n\r\nimg.watchlist {\r\n  box-shadow: 0px 0px 20px cyan;\r\n}\r\n\r\nimg.mouseOver {\r\n  box-shadow: 0px 0px 20px red;\r\n}\r\n\r\n.dataDiv {\r\n  width: 100%;\r\n  white-space: pre-wrap;\r\n  color:#42b883;\r\n}\r\n@media screen and (max-width: 1024px){\r\n  .dataDiv{\r\n    float: left;\r\n    width: 50%;\r\n    text-align: left;\r\n  }\r\n}\r\n</style>"]}]}