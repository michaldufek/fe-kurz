{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/research/patternLab/performanceResults/PerformanceMetrics.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/research/patternLab/performanceResults/PerformanceMetrics.vue","mtime":1587025922792},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBGYW5jeVRhYmxlIGZyb20gJ0AvY3VzdG9tL2NvbXBvbmVudHMvVGFibGVzL0ZhbmN5VGFibGUnOyAKaW1wb3J0IGNvbnN0YW50cyBmcm9tICdAL2N1c3RvbS9hc3NldHMvanMvY29uc3RhbnRzJzsgCmltcG9ydCBoZWxwZXIgZnJvbSAnQC9jdXN0b20vYXNzZXRzL2pzL2hlbHBlcic7CgoKZXhwb3J0IGRlZmF1bHQgewogICAgY29tcG9uZW50czogewogICAgICAgIEZhbmN5VGFibGUKICAgIH0sCgogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBwZXJmTWV0cmljc0tleTogY29uc3RhbnRzLnRyYW5zbGF0aW9uS2V5cy5wZXJmb3JtYW5jZU1ldHJpY3MsCgogICAgICAgICAgICBsb2FkaW5nOiB0cnVlLAogICAgICAgICAgICBub0RhdGFUZXh0OiAnJywKICAgICAgICAgICAgd2FybmluZ1RleHQ6ICcnLAogICAgICAgICAgICB0YWJsZUtleTogMAogICAgICAgIH0KICAgIH0sCgogICAgY29tcHV0ZWQ6IHsKICAgICAgICBwYXR0ZXJuUmVzdWx0cygpIHsKICAgICAgICAgICAgcmV0dXJuICF0aGlzLmxvYWRpbmcgPyBbIGNvbnN0YW50cy51cmxzLnBhdHRlcm5MYWIuYmFja3Rlc3RQYXR0ZXJucy5yZXN1bHRzIF0gOiBbXQogICAgICAgIH0KICAgIH0sCgogICAgbWV0aG9kczogewogICAgICAgIGluaXREYXRhKCkgeyAgICAgICAgICAgIAogICAgICAgICAgICBsZXQgZGF0YSA9IHRoaXMuJHN0b3JlLmdldEl0ZW0oY29uc3RhbnRzLnN0b3JlS2V5cy5iYWNrdGVzdFBhdHRlcm5zKQogICAgICAgICAgICBpZiAoZGF0YSkgewogICAgICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZGF0YS5sb2FkaW5nCiAgICAgICAgICAgICAgICB0aGlzLnRhYmxlS2V5KysKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlCiAgICAgICAgICAgIH0KICAgICAgICB9LAoKICAgICAgICByb3dzQ3JlYXRvcihkYXRhKSB7CiAgICAgICAgICAgIGxldCBjb2x1bW5zID0gdGhpcy4kdCh0aGlzLnBlcmZNZXRyaWNzS2V5ICsgJy5jb2x1bW5zJykKICAgICAgICAgICAgbGV0IHJvd3MgPSBbXQoKICAgICAgICAgICAgZGF0YS5mb3JFYWNoKGRhdHVtID0+IHsKICAgICAgICAgICAgICAgIGxldCBiYXNlID0gaGVscGVyLmdldEJhY2t0ZXN0UGF0dGVybnNUYWJsZUJhc2UoZGF0dW0sIHRoaXMuJHN0b3JlLCB0aGlzLiR0KGNvbnN0YW50cy50cmFuc2xhdGlvbktleXMucGF0dGVybnMgKyAnLmNvbHVtbnMnKSkKCiAgICAgICAgICAgICAgICBpZiAoZGF0dW0uZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLndhcm5pbmdUZXh0ICs9IGBQYXR0ZXJuIHJlc3VsdHMgb2YgJyR7YmFzZS5uYW1lfScgaGFzIHNvbWUgcHJvYmxlbXM6ICR7ZGF0dW0ubXNnfSBgCiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGhlbHBlci5jcmVhdGVQZXJmTWV0cmljc1Jvdyhyb3dzLCBkYXR1bSwgYmFzZSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKCiAgICAgICAgICAgIGlmICghcm93cy5sZW5ndGggJiYgdGhpcy53YXJuaW5nVGV4dCkgeyAvLyBhbGwgcGF0dGVybiByZXN1bHRzIGhhcyBlcnJvcgogICAgICAgICAgICAgICAgdGhpcy5ub0RhdGFUZXh0ID0gdGhpcy53YXJuaW5nVGV4dAogICAgICAgICAgICAgICAgdGhpcy53YXJuaW5nVGV4dCA9IG51bGwKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIHJvd3MKICAgICAgICB9ICAgICAgICAKICAgIH0sCgogICAgbW91bnRlZCgpIHsKICAgICAgICB0aGlzLmluaXREYXRhKCkKICAgIH0KfQo="},{"version":3,"sources":["PerformanceMetrics.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"PerformanceMetrics.vue","sourceRoot":"src/custom/apps/research/patternLab/performanceResults","sourcesContent":["<template>\n    <div>\n        <fancy-table :title=\"$t(perfMetricsKey + '.title')\"\n                    :showTitle=\"false\"\n                    :apiUrls=\"patternResults\"\n                    :noDataText=\"noDataText\"\n                    :columns=\"$t(perfMetricsKey + '.columns')\"\n                    :rowsCreator=\"rowsCreator\"\n                    :sortable=\"true\"\n                    :filterable=\"true\"\n                    :key=\"tableKey\">\n        </fancy-table>\n\n        <p v-if=\"warningText\" style=\"color: yellow; text-align: center\">{{warningText}}</p>            \n    </div>\n</template>\n<script>\nimport FancyTable from '@/custom/components/Tables/FancyTable'; \nimport constants from '@/custom/assets/js/constants'; \nimport helper from '@/custom/assets/js/helper';\n\n\nexport default {\n    components: {\n        FancyTable\n    },\n\n    data() {\n        return {\n            perfMetricsKey: constants.translationKeys.performanceMetrics,\n\n            loading: true,\n            noDataText: '',\n            warningText: '',\n            tableKey: 0\n        }\n    },\n\n    computed: {\n        patternResults() {\n            return !this.loading ? [ constants.urls.patternLab.backtestPatterns.results ] : []\n        }\n    },\n\n    methods: {\n        initData() {            \n            let data = this.$store.getItem(constants.storeKeys.backtestPatterns)\n            if (data) {\n                this.loading = data.loading\n                this.tableKey++\n            } else {\n                this.loading = false\n            }\n        },\n\n        rowsCreator(data) {\n            let columns = this.$t(this.perfMetricsKey + '.columns')\n            let rows = []\n\n            data.forEach(datum => {\n                let base = helper.getBacktestPatternsTableBase(datum, this.$store, this.$t(constants.translationKeys.patterns + '.columns'))\n\n                if (datum.error) {\n                    this.warningText += `Pattern results of '${base.name}' has some problems: ${datum.msg} `\n                } else {\n                    helper.createPerfMetricsRow(rows, datum, base)\n                }\n            })\n\n            if (!rows.length && this.warningText) { // all pattern results has error\n                this.noDataText = this.warningText\n                this.warningText = null\n            }\n\n            return rows\n        }        \n    },\n\n    mounted() {\n        this.initData()\n    }\n}\n</script>\n<style scoped>\n\n</style>"]}]}