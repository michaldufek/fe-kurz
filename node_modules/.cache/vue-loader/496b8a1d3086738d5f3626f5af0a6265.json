{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/dashboard/Details.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/dashboard/Details.vue","mtime":1587025922788},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBTdHJhdGVneUNhcmQgZnJvbSAnQC9jdXN0b20vY29tcG9uZW50cy9DYXJkcy9TdHJhdGVneUNhcmQudnVlJzsKaW1wb3J0IGNvbnN0YW50cyBmcm9tICdAL2N1c3RvbS9hc3NldHMvanMvY29uc3RhbnRzJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBTdHJhdGVneUNhcmQKICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc3RyYXRlZ2llc0RhdGE6IFtdLAogICAgICBjb25uZWN0ZWQ6IGZhbHNlLAogICAgICBlbWFpbDogJycKICAgIH07CiAgfSwKCiAgbWV0aG9kczogewogICAgaW5pdFN0cmF0ZWdpZXMoKSB7IAogICAgICBsZXQgZGF0YSA9IHRoaXMuJHN0b3JlLmdldEl0ZW0oY29uc3RhbnRzLnRyYW5zbGF0aW9uS2V5cy5JQkxvZ2luKQogICAgICBpZiAoZGF0YSkgewogICAgICAgIHRoaXMuZW1haWwgPSBkYXRhLmVtYWlsCiAgICAgICAgdGhpcy5jaGVja0dXcnVubmluZygpICAgLy8gbm8gbmVlZCB0byBzZXQgaW50ZXJ2YWwgYmVjYXVzZSBvbmx5IGxpdmUgcG9ydGZvbGlvIHNob3VsZCBiZSBoZXJlCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5zZXRTdHJhdGVnaWVzKCkKICAgICAgfQogICAgfSwKCiAgICBjaGVja0dXcnVubmluZygpIHsKICAgICAgdGhpcy4kaHR0cAogICAgICAuZ2V0KGNvbnN0YW50cy51cmxzLmxpdmVEZXBsLmdhdGV3YXkuc3RhdHVzICsgJy8nICsgdGhpcy5lbWFpbCkKICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIGlmICgnZXJyb3InIGluIHJlc3BvbnNlLmRhdGEpIHsKICAgICAgICAgIGhlbHBlci5ub3RpZnlBdWRpbyh0aGlzLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29ubmVjdGlvbkxvc3QnKSwgJ2RhbmdlcicsIGAke3RoaXMuJHQoJ3NpZGViYXIuZGV0YWlscycpfSAke3RoaXMuJHQoJ2xvZ2luLklCLnN0YXR1cycpfSAtICR7cmVzcG9uc2UuZGF0YS5lcnJvcn1gKQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLmNvbm5lY3RlZCA9IHJlc3BvbnNlLmRhdGEuc3RhdHVzCiAgICAgICAgfQogICAgICB9KQogICAgICAuY2F0Y2goZXJyb3IgPT4gewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKQogICAgICAgIGlmIChlcnJvci5tZXNzYWdlID09PSBjb25zdGFudHMuc3RyaW5ncy5uZXR3b3JrRXJyb3IpIHsKICAgICAgICAgIGhlbHBlci5ub3RpZnlBdWRpbyh0aGlzLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29ubmVjdGlvbkxvc3QnKSwgJ2RhbmdlcicsIGAke3RoaXMuJHQoJ3NpZGViYXIuZGV0YWlscycpfSAke3RoaXMuJHQoJ2xvZ2luLklCLnN0YXR1cycpfWApCiAgICAgICAgfQogICAgICB9KQogICAgICAuZmluYWxseSgoKSA9PiB7CiAgICAgICAgdGhpcy5zZXRTdHJhdGVnaWVzKCkKICAgICAgfSkKICAgIH0sCgogICAgc2V0U3RyYXRlZ2llcygpIHsgICAgICAgIAogICAgICB0aGlzLnN0cmF0ZWdpZXNEYXRhID0gW10KCiAgICAgIGlmICh0aGlzLmNvbm5lY3RlZCkgewogICAgICAgIHRoaXMuc3RyYXRlZ2llc0RhdGEucHVzaCh7CiAgICAgICAgICB0aXRsZTogIkxpdmUgUmVwb3J0IiwKICAgICAgICAgIGFwaVVybDogY29uc3RhbnRzLnVybHMubGl2ZURlcGwucmVwb3J0ICsgdGhpcy5lbWFpbAogICAgICAgIH0pCiAgICAgIH0KICAgICAgZWxzZSB7CiAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoY29uc3RhbnRzLnVybHMuY2hhcnQpKSB7CiAgICAgICAgICB0aGlzLnN0cmF0ZWdpZXNEYXRhLnB1c2goewogICAgICAgICAgICB0aXRsZToga2V5LAogICAgICAgICAgICBhcGlVcmw6IHZhbHVlCiAgICAgICAgICB9KQogICAgICAgIH0KICAgICAgfQogICAgfQogIH0sCgogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmluaXRTdHJhdGVnaWVzKCk7CiAgfQp9Cg=="},{"version":3,"sources":["Details.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Details.vue","sourceRoot":"src/custom/apps/dashboard","sourcesContent":["<template>\r\n  <div>\r\n    <ul style=\"list-style-type: none;\">\r\n      <li v-for=\"strategyData in strategiesData\">\r\n        <strategy-card :title=\"strategyData.title\"\r\n                       :apiUrl=\"strategyData.apiUrl\">\r\n        </strategy-card>\r\n      </li>\r\n    </ul>\r\n  </div> \r\n</template>\r\n<script>\r\n  import StrategyCard from '@/custom/components/Cards/StrategyCard.vue';\r\n  import constants from '@/custom/assets/js/constants';\r\n\r\n  export default {\r\n    components: {\r\n      StrategyCard\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        strategiesData: [],\r\n        connected: false,\r\n        email: ''\r\n      };\r\n    },\r\n\r\n    methods: {\r\n      initStrategies() { \r\n        let data = this.$store.getItem(constants.translationKeys.IBLogin)\r\n        if (data) {\r\n          this.email = data.email\r\n          this.checkGWrunning()   // no need to set interval because only live portfolio should be here\r\n        } else {\r\n          this.setStrategies()\r\n        }\r\n      },\r\n\r\n      checkGWrunning() {\r\n        this.$http\r\n        .get(constants.urls.liveDepl.gateway.status + '/' + this.email)\r\n        .then(response => {\r\n          if ('error' in response.data) {\r\n            helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t('sidebar.details')} ${this.$t('login.IB.status')} - ${response.data.error}`)\r\n          } else {\r\n            this.connected = response.data.status\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n          if (error.message === constants.strings.networkError) {\r\n            helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', `${this.$t('sidebar.details')} ${this.$t('login.IB.status')}`)\r\n          }\r\n        })\r\n        .finally(() => {\r\n          this.setStrategies()\r\n        })\r\n      },\r\n\r\n      setStrategies() {        \r\n        this.strategiesData = []\r\n\r\n        if (this.connected) {\r\n          this.strategiesData.push({\r\n            title: \"Live Report\",\r\n            apiUrl: constants.urls.liveDepl.report + this.email\r\n          })\r\n        }\r\n        else {\r\n          for (const [key, value] of Object.entries(constants.urls.chart)) {\r\n            this.strategiesData.push({\r\n              title: key,\r\n              apiUrl: value\r\n            })\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      this.initStrategies();\r\n    }\r\n  }\r\n</script>\r\n<style>\r\n</style>"]}]}