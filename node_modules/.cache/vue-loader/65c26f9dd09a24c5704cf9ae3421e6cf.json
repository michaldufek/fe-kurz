{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/research/patternLab/Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/research/patternLab/Chart.vue","mtime":1587030366018},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBc3NldHNQYXR0ZXJuc1BpY2tlciBmcm9tICdAL2N1c3RvbS9jb21wb25lbnRzL0Fzc2V0c1BhdHRlcm5zUGlja2VyJwppbXBvcnQgRmFuY3lDaGFydCBmcm9tICdAL2N1c3RvbS9jb21wb25lbnRzL0NoYXJ0cy9GYW5jeUNoYXJ0JzsKaW1wb3J0IE9obGNDaGFydCBmcm9tICdAL2N1c3RvbS9jb21wb25lbnRzL0NoYXJ0cy9PaGxjQ2hhcnQnOwppbXBvcnQgRmFuY3lUYWJsZSBmcm9tICdAL2N1c3RvbS9jb21wb25lbnRzL1RhYmxlcy9GYW5jeVRhYmxlJzsgIAoKaW1wb3J0IGNvbnN0YW50cyBmcm9tICdAL2N1c3RvbS9hc3NldHMvanMvY29uc3RhbnRzJzsKaW1wb3J0IGhlbHBlciBmcm9tICdAL2N1c3RvbS9hc3NldHMvanMvaGVscGVyJzsKCgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogeyAgCiAgICBBc3NldHNQYXR0ZXJuc1BpY2tlciwKICAgIEZhbmN5Q2hhcnQsCiAgICBPaGxjQ2hhcnQsCiAgICBGYW5jeVRhYmxlCiAgfSwKCiAgZGF0YSgpIHsKICAgIC8vIGZpeGVzIHgtYXhlcyBsYWJlbCBvdmVybGFwcGluZwogICAgLy8gaHR0cHM6Ly93d3cuY2hhcnRqcy5vcmcvZG9jcy9sYXRlc3QvYXhlcy9jYXJ0ZXNpYW4vP2g9YXV0b3NraXAKICAgIHJldHVybiB7CiAgICAgIHN0b3JlS2V5OiAncmVzZWFyY2gucGF0dGVybkxhYi5jaGFydCcsCgogICAgICAvLyBhc3NldHMtcGF0dGVybnMtcGlja2VyCiAgICAgIHJhbmdlOiB7CiAgICAgICAgZnJvbTogbnVsbCwKICAgICAgICB0bzogbnVsbAogICAgICB9LAogICAgICB0aW1lZnJhbWU6IG51bGwsCiAgICAgIGFzc2V0OiBudWxsLAogICAgICBwYXR0ZXJuczogW10sCgogICAgICAvLyBjaGFydAogICAgICBjaGFydFR5cGU6IHRoaXMuJHQoJ3Jlc2VhcmNoLnBhdHRlcm5MYWIuY2hhcnRUeXBlcycpWzBdLAogICAgICBjaGFydFVybDogbnVsbCwKICAgICAgY2hhcnRLZXk6IDAsICAgICAgICAKCiAgICAgIC8vIHBhdHRlcm5zIGhpc3RvcnkKICAgICAgcGF0dGVybnNIaXN0b3J5VXJsOiBbXSwKICAgICAgcGF0dGVybkxhYmVsczogW10sCiAgICAgIHRhYmxlS2V5OiAwCiAgICB9CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIG9obGNDaGFydFRpdGxlKCkgewogICAgICAvLyB0aXRsZSBpbiBmb3JtIDxhc3NldD4gKFtwYXR0ZXJuc10pIC0gbW9yZSB0aGFuIDMgcGF0dGVybnMgd2lsbCBiZSByZXBsYWNlZCBieSAnLi4uJwogICAgICBpZiAodGhpcy5hc3NldCkgewogICAgICAgIGNvbnN0IG1heFBhdHRlcm5zID0gMwogICAgICAgIGxldCBwYXR0ZXJucyA9IHRoaXMucGF0dGVybnMuc2xpY2UoMCwgbWF4UGF0dGVybnMpLm1hcChwID0+IHAubmFtZSkKICAgICAgICBpZiAodGhpcy5wYXR0ZXJucy5sZW5ndGggPiBtYXhQYXR0ZXJucykgewogICAgICAgICAgcGF0dGVybnMgPSBwYXR0ZXJucy5jb25jYXQoWyAnLi4uJyBdKQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHRoaXMuYXNzZXQuc3ltYm9sICsgKHBhdHRlcm5zLmxlbmd0aCA/ICcgKCcgKyBwYXR0ZXJucy5qb2luKCcsICcpICsgJyknIDogJycpCiAgICAgIH0KICAgIH0sCgogICAgaGlnaGxpZ2h0cygpIHsKICAgICAgcmV0dXJuIFt7CiAgICAgICAgcG9pbnRzOiB0aGlzLnBhdHRlcm5MYWJlbHMsCiAgICAgICAgY29sb3I6IGNvbnN0YW50cy5jb2xvcnMudHJhZGVFbnRyeSAKICAgICAgfV0KICAgIH0KICB9LAoKICBtZXRob2RzOiB7CiAgICBpbml0RGF0YSgpIHsKICAgICAgbGV0IGRhdGEgPSB0aGlzLiRzdG9yZS5nZXRJdGVtKHRoaXMuc3RvcmVLZXkpCiAgICAgIGlmIChkYXRhKSB7CiAgICAgICAgdGhpcy5jaGFydFR5cGUgPSB0aGlzLiR0KCdyZXNlYXJjaC5wYXR0ZXJuTGFiLmNoYXJ0VHlwZXMnKVtkYXRhLmNoYXJ0VHlwZV0KICAgICAgfQogICAgICAKICAgICAgdGhpcy5hZGRDaGFydCgpCiAgICB9LAoKICAgIC8vIGNoYXJ0IG1ldGhvZHMKICAgIGFkZENoYXJ0KCkgewogICAgICBsZXQgZGF0YSA9IGhlbHBlci5nZXRBc3NldHNQYXR0ZXJuc1BpY2tlckRhdGEodGhpcy4kc3RvcmUpCiAgICAgIGlmIChkYXRhKSB7CiAgICAgICAgKHsgcmFuZ2U6dGhpcy5yYW5nZSwgdGltZWZyYW1lOnRoaXMudGltZWZyYW1lLCBjaGVja2VkQXNzZXQ6dGhpcy5hc3NldCwgY2hlY2tlZFBhdHRlcm5zOnRoaXMucGF0dGVybnMgfSA9IGRhdGEpCiAgICAgIH0KICAgICAgCiAgICAgIHRoaXMubG9hZENoYXJ0KCkKCiAgICAgIHRoaXMucGF0dGVybnNIaXN0b3J5VXJsID0gbnVsbAogICAgICBpZiAodGhpcy5wYXR0ZXJucy5sZW5ndGgpIHsKICAgICAgICAvLyBsb2FkIHBhdHRlcm5zIGhpc3RvcnkgdGFibGUKICAgICAgICB0aGlzLnBhdHRlcm5zSGlzdG9yeVVybCA9IGhlbHBlci5nZXRQYXR0ZXJuTGFiSGlzdG9yeVVybCh0aGlzLmFzc2V0ID8gWyB0aGlzLmFzc2V0IF0gOiBbXSwgdGhpcy5wYXR0ZXJucywgdGhpcy50aW1lZnJhbWUpICAgICAKICAgICAgfQogICAgICB0aGlzLnBhdHRlcm5MYWJlbHMgPSBbXQogICAgICB0aGlzLnRhYmxlS2V5KysgLy8gZm9yY2UgcmVsb2FkIG9mIGZhbmN5LXRhYmxlIGNvbXBvbmVudAogICAgfSwKICAgIGxvYWRDaGFydCgpIHsKICAgICAgdGhpcy5jaGFydFVybCA9IG51bGwKICAgICAgaWYgKHRoaXMuYXNzZXQpIHsKICAgICAgICB0aGlzLmNoYXJ0VXJsID0gaGVscGVyLmdldFBhdHRlcm5MYWJDaGFydFVybCh0aGlzLmFzc2V0LCB0aGlzLnRpbWVmcmFtZSwgdGhpcy5yYW5nZSkgCiAgICAgIH0KICAgICAgdGhpcy5jaGFydEtleSsrIC8vIGZvcmNlIHJlbG9hZCBvZiBmYW5jeS1jaGFydCBjb21wb25lbnQKICAgIH0sICAgICAgCgogICAgLy8gZW1pdGVkIGV2ZW50cwogICAgdGltZWZyYW1lQ2hhbmdlZCgpIHsKICAgICAgbGV0IGRhdGEgPSBoZWxwZXIuZ2V0QXNzZXRzUGF0dGVybnNQaWNrZXJEYXRhKHRoaXMuJHN0b3JlKQogICAgICBpZiAoZGF0YSkgewogICAgICAgICh7IHRpbWVmcmFtZTp0aGlzLnRpbWVmcmFtZSB9ID0gZGF0YSkKICAgICAgfQoKICAgICAgdGhpcy5sb2FkQ2hhcnQoKQogICAgfSwKICAgIHNlbGVjdGVkKHJvd0luZGV4KSB7CiAgICAgIGlmIChyb3dJbmRleCA+IC0xKSB7CiAgICAgICAgbGV0IGRhdGEgPSB0aGlzLiRzdG9yZS5nZXRJdGVtKHRoaXMuc3RvcmVLZXkpCiAgICAgICAgbGV0IHNpZ25hbFNldCA9IG51bGwKCiAgICAgICAgLy8gcGF0dGVybnNIaXN0b3J5VXJsIGFuZCBkYXRhICh3aXRoIHJvd3NTaWduYWxJZHMpIG11c3QgZXhpc3QgaWYgd2UgbWFuYWdlZCB0byBnZXQgaGVyZSAtIG5vIG5lZWQgdG8gY2hlY2sKICAgICAgICB0aGlzLiRodHRwCiAgICAgICAgLmdldCh0aGlzLnBhdHRlcm5zSGlzdG9yeVVybCkKICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICBsZXQgZmlsdGVyZWQgPSByZXNwb25zZS5kYXRhLmZpbHRlcihkYXR1bSA9PiBkYXR1bS5pZCA9PT0gZGF0YS5yb3dzU2lnbmFsSWRzW3Jvd0luZGV4XSkKICAgICAgICAgIHNpZ25hbFNldCA9IGZpbHRlcmVkLmxlbmd0aCA/IGZpbHRlcmVkWzBdLnNpZ25hbF9zZXQgOiBudWxsCiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goZXJyb3IgPT4gewogICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpCiAgICAgICAgICBpZiAoZXJyb3IubWVzc2FnZSA9PT0gY29uc3RhbnRzLnN0cmluZ3MubmV0d29ya0Vycm9yKSB7CiAgICAgICAgICAgIGhlbHBlci5ub3RpZnlBdWRpbyh0aGlzLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29ubmVjdGlvbkxvc3QnKSwgJ2RhbmdlcicsIHRoaXMuJHQoJ25vdGlmaWNhdGlvbnMuYmVDb25uZWN0aW9uTG9zdCcpICsgJygnICsgdGhpcy4kdCgnc2lkZWJhci5wYXR0ZXJuTGFiJykgKyAnICcgKyB0aGlzLiR0KHRoaXMuc3RvcmVLZXkgKyAnLnRpdGxlJykgKyAnKScpCiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgICAuZmluYWxseSgoKSA9PiB7CiAgICAgICAgICBpZiAoc2lnbmFsU2V0KSB7CiAgICAgICAgICAgIHRoaXMucGF0dGVybkxhYmVscyA9IHNpZ25hbFNldC5tYXAocyA9PiBuZXcgRGF0ZShzLmRhdGUpLmdldFRpbWUoKSkKICAgICAgICAgICAgdGhpcy5jaGFydEtleSsrCiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBjb25zb2xlLmxvZyhgJHt0aGlzLiR0KCdzZXJ2ZXJJbmNvbnRpbmVuY3knKX06IENvdWxkbid0IGZpbmQgc2VsZWN0ZWQgc2lnbmFsIHNldCBvbiBzZXJ2ZXIhYCkKICAgICAgICAgIH0KICAgICAgICB9KSAKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnBhdHRlcm5MYWJlbHMgPSBbXQogICAgICAgIHRoaXMuY2hhcnRLZXkrKwogICAgICB9ICAgICAgIAogICAgfSwKICAgIAogICAgc2VsZWN0Q2hhcnRUeXBlKGNoYXJ0VHlwZSkgewogICAgICB0aGlzLmNoYXJ0VHlwZSA9IGNoYXJ0VHlwZQogICAgICB0aGlzLmxvYWRDaGFydCgpCiAgICB9LAoKICAgIC8vIHRhYmxlIG1ldGhvZHMgKHBhdHRlcm5zIGhpc3RvcnkpCiAgICByb3dzQ3JlYXRvcihyZXNwb25zZURhdGEpIHsKICAgICAgbGV0IHJvd3MgPSBbXQogICAgICBsZXQgcm93c1NpZ25hbElkcyA9IFtdCgogICAgICByZXNwb25zZURhdGEuZm9yRWFjaChkYXRhID0+IHsgICAgICAgICAgICAKICAgICAgICAgIGxldCBwYXR0ZXJuID0gZGF0YS5wYXR0ZXJuLm5hbWUKICAgICAgICAgIAogICAgICAgICAgZGF0YS5zaWduYWxfc2V0LmZvckVhY2goc2lnbmFsID0+IHsKICAgICAgICAgICAgbGV0IHJvdyA9IFtdCgogICAgICAgICAgICByb3cucHVzaChzaWduYWwuZGF0ZSkKICAgICAgICAgICAgcm93LnB1c2gocGF0dGVybikKICAgICAgICAgICAgcm93LnB1c2goaGVscGVyLmNvbnZlcnREaXJlY3Rpb24oc2lnbmFsLmRpcmVjdGlvbikpCgogICAgICAgICAgICByb3dzLnB1c2gocm93KTsKICAgICAgICAgICAgcm93c1NpZ25hbElkcy5wdXNoKGRhdGEuaWQpCiAgICAgICAgICB9KQogICAgICAgIH0pOwoKICAgICAgaGVscGVyLnVwZGF0ZVN0b3JlKHRoaXMuJHN0b3JlLCAncm93c1NpZ25hbElkcycsIHJvd3NTaWduYWxJZHMsIHRoaXMuc3RvcmVLZXkpCiAgICAgIHJldHVybiByb3dzCiAgICB9CiAgfSwKCiAgd2F0Y2g6IHsKICAgIGNoYXJ0VHlwZSh2YWwpIHsgICAKICAgICAgaGVscGVyLnVwZGF0ZVN0b3JlKHRoaXMuJHN0b3JlLCAnY2hhcnRUeXBlJywgdGhpcy4kdCgncmVzZWFyY2gucGF0dGVybkxhYi5jaGFydFR5cGVzJykuaW5kZXhPZih2YWwpLCB0aGlzLnN0b3JlS2V5KQogICAgfQogIH0sCgogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmluaXREYXRhKCkgICAgICAKICB9Cn0gIAo="},{"version":3,"sources":["Chart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Chart.vue","sourceRoot":"src/custom/apps/research/patternLab","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"row \">\r\n      <div class=\"col-xl-4 col-md-6 col-12 killflex container\">\r\n        <assets-patterns-picker :title=\"$t('research.patternLab.chart.title')\"\r\n                                :oneAssetLimit=\"true\"\r\n                                :btnText=\"$t('research.patternLab.chart.addChart')\" \r\n                                @btnClicked=\"addChart\" \r\n                                @timeframeChanged=\"timeframeChanged\" />      \r\n      </div>\r\n\r\n      <!-- chart -->\r\n      <div class=\"col-xl-8 col-md-6 col-12\">\r\n        <!-- chart settings -->\r\n        <div style=\"position: relative; z-index: 1\">\r\n          <base-dropdown class=\"dd\" \r\n                         menu-classes=\"dropdown-black\" \r\n                         title-classes=\"btn btn-secondary\"\r\n                         :title=\"chartType\">\r\n            <ul style=\"list-style-type: none;\">\r\n              <li v-for=\"chartType in $t('research.patternLab.chartTypes').filter(el => el !== chartType)\">            \r\n                <a class=\"dropdown-item\" \r\n                   @click=\"selectChartType(chartType)\" \r\n                   href=\"#\">\r\n                  {{ chartType }}\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </base-dropdown>          \r\n        </div>\r\n\r\n        <fancy-chart v-if=\"chartType === $t('research.patternLab.chartTypes')[0]\"\r\n                     :title=\"$t('sidebar.patternLab') + ' ' + $t('research.patternLab.chart.title')\"\r\n                     :apiUrls=\"chartUrl ? [ chartUrl ] : []\"\r\n                      :highlights=\"highlights\"\r\n                     :dataFields=\"[ 'Close', 'Volume' ]\"\r\n                     :responsive=\"true\"\r\n                     style=\"height: 100%\"\r\n                     :key=\"chartKey\" />\r\n        <ohlc-chart v-else \r\n                    :title=\"ohlcChartTitle\"\r\n                    :apiUrl=\"chartUrl\" \r\n                    :type=\"chartType\"\r\n                    style=\"height: 830px\" \r\n                    :key=\"chartKey\" />\r\n      </div>\r\n\r\n      <!-- patterns history -->\r\n      </div>\r\n      <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <fancy-table :title=\"$t('research.patternLab.chart.patternsHistory.title')\"\r\n                     noDataText=\"No patterns detected.\"\r\n                     :apiUrls=\"patternsHistoryUrl\"\r\n                     :columns=\"$t('research.patternLab.chart.patternsHistory.columns')\"\r\n                     :rowsCreator=\"rowsCreator\"\r\n                     :clickable=\"true\"\r\n                     @selected=\"selected\"\r\n                     :key=\"tableKey\">\r\n        </fancy-table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import AssetsPatternsPicker from '@/custom/components/AssetsPatternsPicker'\r\n  import FancyChart from '@/custom/components/Charts/FancyChart';\r\n  import OhlcChart from '@/custom/components/Charts/OhlcChart';\r\n  import FancyTable from '@/custom/components/Tables/FancyTable';  \r\n\r\n  import constants from '@/custom/assets/js/constants';\r\n  import helper from '@/custom/assets/js/helper';\r\n\r\n\r\n  export default {\r\n    components: {  \r\n      AssetsPatternsPicker,\r\n      FancyChart,\r\n      OhlcChart,\r\n      FancyTable\r\n    },\r\n\r\n    data() {\r\n      // fixes x-axes label overlapping\r\n      // https://www.chartjs.org/docs/latest/axes/cartesian/?h=autoskip\r\n      return {\r\n        storeKey: 'research.patternLab.chart',\r\n\r\n        // assets-patterns-picker\r\n        range: {\r\n          from: null,\r\n          to: null\r\n        },\r\n        timeframe: null,\r\n        asset: null,\r\n        patterns: [],\r\n\r\n        // chart\r\n        chartType: this.$t('research.patternLab.chartTypes')[0],\r\n        chartUrl: null,\r\n        chartKey: 0,        \r\n\r\n        // patterns history\r\n        patternsHistoryUrl: [],\r\n        patternLabels: [],\r\n        tableKey: 0\r\n      }\r\n    },\r\n\r\n    computed: {\r\n      ohlcChartTitle() {\r\n        // title in form <asset> ([patterns]) - more than 3 patterns will be replaced by '...'\r\n        if (this.asset) {\r\n          const maxPatterns = 3\r\n          let patterns = this.patterns.slice(0, maxPatterns).map(p => p.name)\r\n          if (this.patterns.length > maxPatterns) {\r\n            patterns = patterns.concat([ '...' ])\r\n          }\r\n\r\n          return this.asset.symbol + (patterns.length ? ' (' + patterns.join(', ') + ')' : '')\r\n        }\r\n      },\r\n\r\n      highlights() {\r\n        return [{\r\n          points: this.patternLabels,\r\n          color: constants.colors.tradeEntry \r\n        }]\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      initData() {\r\n        let data = this.$store.getItem(this.storeKey)\r\n        if (data) {\r\n          this.chartType = this.$t('research.patternLab.chartTypes')[data.chartType]\r\n        }\r\n        \r\n        this.addChart()\r\n      },\r\n\r\n      // chart methods\r\n      addChart() {\r\n        let data = helper.getAssetsPatternsPickerData(this.$store)\r\n        if (data) {\r\n          ({ range:this.range, timeframe:this.timeframe, checkedAsset:this.asset, checkedPatterns:this.patterns } = data)\r\n        }\r\n        \r\n        this.loadChart()\r\n\r\n        this.patternsHistoryUrl = null\r\n        if (this.patterns.length) {\r\n          // load patterns history table\r\n          this.patternsHistoryUrl = helper.getPatternLabHistoryUrl(this.asset ? [ this.asset ] : [], this.patterns, this.timeframe)     \r\n        }\r\n        this.patternLabels = []\r\n        this.tableKey++ // force reload of fancy-table component\r\n      },\r\n      loadChart() {\r\n        this.chartUrl = null\r\n        if (this.asset) {\r\n          this.chartUrl = helper.getPatternLabChartUrl(this.asset, this.timeframe, this.range) \r\n        }\r\n        this.chartKey++ // force reload of fancy-chart component\r\n      },      \r\n\r\n      // emited events\r\n      timeframeChanged() {\r\n        let data = helper.getAssetsPatternsPickerData(this.$store)\r\n        if (data) {\r\n          ({ timeframe:this.timeframe } = data)\r\n        }\r\n\r\n        this.loadChart()\r\n      },\r\n      selected(rowIndex) {\r\n        if (rowIndex > -1) {\r\n          let data = this.$store.getItem(this.storeKey)\r\n          let signalSet = null\r\n\r\n          // patternsHistoryUrl and data (with rowsSignalIds) must exist if we managed to get here - no need to check\r\n          this.$http\r\n          .get(this.patternsHistoryUrl)\r\n          .then(response => {\r\n            let filtered = response.data.filter(datum => datum.id === data.rowsSignalIds[rowIndex])\r\n            signalSet = filtered.length ? filtered[0].signal_set : null\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n            if (error.message === constants.strings.networkError) {\r\n              helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', this.$t('notifications.beConnectionLost') + '(' + this.$t('sidebar.patternLab') + ' ' + this.$t(this.storeKey + '.title') + ')')\r\n            }\r\n          })\r\n          .finally(() => {\r\n            if (signalSet) {\r\n              this.patternLabels = signalSet.map(s => new Date(s.date).getTime())\r\n              this.chartKey++\r\n            } else {\r\n              console.log(`${this.$t('serverIncontinency')}: Couldn't find selected signal set on server!`)\r\n            }\r\n          }) \r\n        } else {\r\n          this.patternLabels = []\r\n          this.chartKey++\r\n        }       \r\n      },\r\n      \r\n      selectChartType(chartType) {\r\n        this.chartType = chartType\r\n        this.loadChart()\r\n      },\r\n\r\n      // table methods (patterns history)\r\n      rowsCreator(responseData) {\r\n        let rows = []\r\n        let rowsSignalIds = []\r\n\r\n        responseData.forEach(data => {            \r\n            let pattern = data.pattern.name\r\n            \r\n            data.signal_set.forEach(signal => {\r\n              let row = []\r\n\r\n              row.push(signal.date)\r\n              row.push(pattern)\r\n              row.push(helper.convertDirection(signal.direction))\r\n\r\n              rows.push(row);\r\n              rowsSignalIds.push(data.id)\r\n            })\r\n          });\r\n\r\n        helper.updateStore(this.$store, 'rowsSignalIds', rowsSignalIds, this.storeKey)\r\n        return rows\r\n      }\r\n    },\r\n\r\n    watch: {\r\n      chartType(val) {   \r\n        helper.updateStore(this.$store, 'chartType', this.$t('research.patternLab.chartTypes').indexOf(val), this.storeKey)\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      this.initData()      \r\n    }\r\n  }  \r\n</script>\r\n<style>\r\n</style>"]}]}