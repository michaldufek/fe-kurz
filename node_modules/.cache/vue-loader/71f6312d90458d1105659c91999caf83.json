{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/research/patternLab/PatternStatistics.vue?vue&type=template&id=024b8ced&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/research/patternLab/PatternStatistics.vue","mtime":1593584406300},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}