{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/components/Charts/OhlcChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/components/Charts/OhlcChart.vue","mtime":1587030366022},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgRHVhbFJpbmdMb2FkZXIgZnJvbSAnQGJpdC9qb3Noay52dWUtc3Bpbm5lcnMtY3NzLmR1YWwtcmluZy1sb2FkZXInOw0KaW1wb3J0IE9obGMgZnJvbSAnQC9jdXN0b20vY29tcG9uZW50cy9DaGFydHMvT2hsYyc7DQppbXBvcnQgQ2FuZGxlc3RpY2sgZnJvbSAnQC9jdXN0b20vY29tcG9uZW50cy9DaGFydHMvQ2FuZGxlc3RpY2snOw0KDQppbXBvcnQgY29uZmlnIGZyb20gJ0AvY29uZmlnJzsNCmltcG9ydCBjb25zdGFudHMgZnJvbSAnQC9jdXN0b20vYXNzZXRzL2pzL2NvbnN0YW50cyc7DQppbXBvcnQgaGVscGVyIGZyb20gJ0AvY3VzdG9tL2Fzc2V0cy9qcy9oZWxwZXInOw0KDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogIm9obGMtY2hhcnQiLA0KICBjb21wb25lbnRzOiB7DQogICAgRHVhbFJpbmdMb2FkZXIsDQogICAgT2hsYywNCiAgICBDYW5kbGVzdGljaw0KICB9LA0KDQogIHByb3BzOiB7DQogICAgdGl0bGU6IHsNCiAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgIGRlc2NyaXB0aW9uOiAiQ2hhcnQgdGl0bGUiDQogICAgfSwNCiAgICBhcGlVcmw6IHsNCiAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgIGRlc2NyaXB0aW9uOiAiVVJMIHRvIEFQSSBkYXRhIHNvdXJjZSINCiAgICB9LA0KICAgIHR5cGU6IHsNCiAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgIGRlc2NyaXB0aW9uOiAiVHlwZSBvZiBjaGFydCAtIE9ITEMgb3IgQ2FuZGxlc3RpY2siDQogICAgfSwNCiAgICBoaWdobGlnaHRzOiB7DQogICAgICB0eXBlOiBBcnJheSwNCiAgICAgIGRlZmF1bHQ6ICgpID0+IHsNCiAgICAgICAgcmV0dXJuIFt7IA0KICAgICAgICAgIHBvaW50czogW10sIA0KICAgICAgICAgIGNvbG9yOiBjb25maWcuY29sb3JzLnByaW1hcnkgDQogICAgICAgIH1dDQogICAgICB9LA0KICAgICAgZGVzY3JpcHRpb246ICJQb2ludHMgdGhhdCBzaG91bGQgYmUgaGlnaGxpZ2h0ZWQgd2l0aCBiaWcgdHJpYW5nbGUgb2YgZGVmaW5lZCBjb2xvciINCiAgICB9DQogIH0sDQoNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgdXBkYXRlVHM6IG51bGwsDQogICAgICBsaXZlOiBmYWxzZSwNCiAgICAgIGVycm9yOiBmYWxzZSwNCiAgICAgIGxvYWRpbmc6IGZhbHNlLA0KDQogICAgICAvLyBjaGFydA0KICAgICAgZGF0YWNvbGxlY3Rpb246IHt9LA0KICAgICAgb3B0aW9uczogew0KICAgICAgICBzY2FsZXM6IHsNCiAgICAgICAgICB4QXhlczogW3sNCiAgICAgICAgICAgIHRpY2tzOiB7DQogICAgICAgICAgICAgIGF1dG9Ta2lwOiB0cnVlLA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICB9XSwNCiAgICAgICAgfSwNCiAgICAgIH0NCiAgICB9DQogIH0sDQoNCiAgY29tcHV0ZWQ6IHsNCiAgICBub0RhdGEoKSB7DQogICAgICByZXR1cm4gIXRoaXMubG9hZGluZyAmJiAoISgnZGF0YXNldHMnIGluIHRoaXMuZGF0YWNvbGxlY3Rpb24pIHx8ICF0aGlzLmRhdGFjb2xsZWN0aW9uLmRhdGFzZXRzLmxlbmd0aCkNCiAgICB9LA0KICAgIGlzRXJyb3IoKSB7DQogICAgICByZXR1cm4gdGhpcy5lcnJvcg0KICAgIH0NCiAgfSwNCg0KICBtZXRob2RzOiB7DQogICAgaW5pdERhdGEoKSB7DQogICAgICB0aGlzLmxvYWREYXRhKCk7DQogICAgICAgIA0KICAgICAgc2V0SW50ZXJ2YWwoKCkgPT4geyANCiAgICAgICAgdGhpcy5sb2FkRGF0YSgpOw0KICAgICAgfSwgY29uc3RhbnRzLmludGVydmFscy5kYXRhUmVsb2FkICk7DQogICAgfSwNCg0KICAgIGxvYWREYXRhKCkgew0KICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZQ0KICAgICAgdGhpcy5lcnJvciA9IGZhbHNlDQogICAgICANCiAgICAgIHRoaXMuJGh0dHANCiAgICAgIC5nZXQodGhpcy5hcGlVcmwpDQogICAgICAudGhlbihyZXNwb25zZSA9PiB7DQogICAgICAgIHRoaXMuZmlsbENoYXJ0RGF0YShyZXNwb25zZS5kYXRhKQ0KICAgICAgICB0aGlzLnVwZGF0ZVRzID0gbmV3IERhdGUoTnVtYmVyKE1hdGgubWF4KC4uLk9iamVjdC5rZXlzKHJlc3BvbnNlLmRhdGEuT3BlbikpKSkNCiAgICAgICAgdGhpcy5saXZlID0gIXJlc3BvbnNlLmRhdGEuV0FSTklORw0KICAgICAgfSkNCiAgICAgIC5jYXRjaChlcnJvciA9PiB7DQogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsNCiAgICAgICAgdGhpcy5lcnJvciA9IHRydWUNCg0KICAgICAgICBpZiAoZXJyb3IubWVzc2FnZSA9PT0gY29uc3RhbnRzLnN0cmluZ3MubmV0d29ya0Vycm9yKSB7DQogICAgICAgICAgaGVscGVyLm5vdGlmeUF1ZGlvKHRoaXMsIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb25uZWN0aW9uTG9zdCcpLCAnZGFuZ2VyJywgdGhpcy4kdCgnbm90aWZpY2F0aW9ucy5iZUNvbm5lY3Rpb25Mb3N0JykgKyAnKCcgKyB0aGlzLnRpdGxlICsgJyAnICsgdGhpcy4kdCgnY2hhcnQnKSArICcpJykNCiAgICAgICAgfQ0KICAgICAgfSkNCiAgICAgIC5maW5hbGx5KCgpID0+IHsNCiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2UNCg0KICAgICAgICBpZiAoIXRoaXMubGl2ZSAmJiAhdGhpcy5lcnJvcikgew0KICAgICAgICAgIGhlbHBlci5ub3RpZnlBdWRpbyh0aGlzLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29ubmVjdGlvbkxvc3QnKSwgJ3dhcm5pbmcnLCB0aGlzLiR0KCdub3RpZmljYXRpb25zLmJyb2tlckNvbm5lY3Rpb25Mb3N0JykgKyAnKCcgKyB0aGlzLnRpdGxlICsgJyAnICsgdGhpcy4kdCgnY2hhcnQnKSArICcpJykNCiAgICAgICAgfQ0KICAgICAgfSk7DQogICAgfSwNCg0KICAgIGZpbGxDaGFydERhdGEoZGF0YSkgew0KICAgICAgbGV0IG5ld0RhdGEgPSBbXQ0KDQogICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbF0gb2YgT2JqZWN0LmVudHJpZXMoZGF0YS5PcGVuKSkgew0KICAgICAgICBuZXdEYXRhLnB1c2goew0KICAgICAgICAgIHQ6IG5ldyBEYXRlKE51bWJlcihrZXkpKSwNCiAgICAgICAgICBvOiB2YWwsDQogICAgICAgICAgaDogZGF0YS5IaWdoW2tleV0sDQogICAgICAgICAgbDogZGF0YS5Mb3dba2V5XSwNCiAgICAgICAgICBjOiBkYXRhLkNsb3NlW2tleV0NCiAgICAgICAgfSkNCiAgICAgIH0NCg0KICAgICAgLy8gdG8tZG86IGZpZ3VyZSBvdXQgaG93IHRvIHVzZSBoaWdobGlnaHRzIHdpdGggdGhpcyB0eXBlIG9mIGNoYXJ0IChzdGFuZGFyZCBGYW5jeUNoYXJ0IHdheSBkb2Vzbid0IHdvcmsgLSBkYXRhc2V0IGhpZ2hsaWdodHMgc2V0dGluZ3MgYXJlIGlnbm9yZWQpDQoNCiAgICAgIHRoaXMuZGF0YWNvbGxlY3Rpb24gPSB7DQogICAgICAgIGRhdGFzZXRzOiBbew0KICAgICAgICAgIGxhYmVsOiB0aGlzLnRpdGxlLA0KICAgICAgICAgIGRhdGE6IG5ld0RhdGEgICAgICAgICANCiAgICAgICAgfV0sDQogICAgICB9DQogICAgfQ0KICB9LA0KDQogIG1vdW50ZWQoKSB7DQogICAgdGhpcy5pbml0RGF0YSgpOw0KICB9DQp9Ow0K"},{"version":3,"sources":["OhlcChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"OhlcChart.vue","sourceRoot":"src/custom/components/Charts","sourcesContent":["<template>\r\n  <card type=\"chart\">\r\n    <audio id=\"connectionLost\" src=\"media/connectionLost.mp3\" preload=\"auto\"></audio>\r\n    <div class=\"card-header\">\r\n      <h5 class=\"card-title\" style=\"float: right;\"><i class=\"tim-icons icon-heart-2\" :class=\"{ 'text-success': live }\" style=\"color:red\"></i>  {{ updateTs | chartUpdateTsText(loading) }}</h5>\r\n    </div>\r\n    <br/>\r\n    <div class=\"chart-area\">\r\n      <section v-if=\"noData\" style=\"text-align: center\">\r\n        <p style=\"padding-top: 50px\">{{ $t('noData') }}</p>\r\n      </section>\r\n      <section v-else-if=\"isError\" style=\"text-align: center\">\r\n        <p style=\"padding-top: 50px\">{{ $t('dataError') }}</p>\r\n      </section>\r\n      <section v-else>\r\n        <DualRingLoader v-if=\"loading\" :color=\"'#54f1d2'\" style=\"width: 80px; height: 80px; position: absolute; top: 40%; left: 45%;\" />\r\n        <Ohlc v-if=\"type === $t('research.patternLab.chartTypes')[1]\"\r\n              :chart-data=\"datacollection\" \r\n              :options=\"options\"/>\r\n        <Candlestick v-else\r\n              :chart-data=\"datacollection\" \r\n              :options=\"options\"/>\r\n      </section>\r\n    </div>\r\n  </card>\r\n</template>\r\n<script>\r\nimport DualRingLoader from '@bit/joshk.vue-spinners-css.dual-ring-loader';\r\nimport Ohlc from '@/custom/components/Charts/Ohlc';\r\nimport Candlestick from '@/custom/components/Charts/Candlestick';\r\n\r\nimport config from '@/config';\r\nimport constants from '@/custom/assets/js/constants';\r\nimport helper from '@/custom/assets/js/helper';\r\n\r\n\r\nexport default {\r\n  name: \"ohlc-chart\",\r\n  components: {\r\n    DualRingLoader,\r\n    Ohlc,\r\n    Candlestick\r\n  },\r\n\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      description: \"Chart title\"\r\n    },\r\n    apiUrl: {\r\n      type: String,\r\n      description: \"URL to API data source\"\r\n    },\r\n    type: {\r\n      type: String,\r\n      description: \"Type of chart - OHLC or Candlestick\"\r\n    },\r\n    highlights: {\r\n      type: Array,\r\n      default: () => {\r\n        return [{ \r\n          points: [], \r\n          color: config.colors.primary \r\n        }]\r\n      },\r\n      description: \"Points that should be highlighted with big triangle of defined color\"\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      updateTs: null,\r\n      live: false,\r\n      error: false,\r\n      loading: false,\r\n\r\n      // chart\r\n      datacollection: {},\r\n      options: {\r\n        scales: {\r\n          xAxes: [{\r\n            ticks: {\r\n              autoSkip: true,\r\n            },\r\n          }],\r\n        },\r\n      }\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    noData() {\r\n      return !this.loading && (!('datasets' in this.datacollection) || !this.datacollection.datasets.length)\r\n    },\r\n    isError() {\r\n      return this.error\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    initData() {\r\n      this.loadData();\r\n        \r\n      setInterval(() => { \r\n        this.loadData();\r\n      }, constants.intervals.dataReload );\r\n    },\r\n\r\n    loadData() {\r\n      this.loading = true\r\n      this.error = false\r\n      \r\n      this.$http\r\n      .get(this.apiUrl)\r\n      .then(response => {\r\n        this.fillChartData(response.data)\r\n        this.updateTs = new Date(Number(Math.max(...Object.keys(response.data.Open))))\r\n        this.live = !response.data.WARNING\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        this.error = true\r\n\r\n        if (error.message === constants.strings.networkError) {\r\n          helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', this.$t('notifications.beConnectionLost') + '(' + this.title + ' ' + this.$t('chart') + ')')\r\n        }\r\n      })\r\n      .finally(() => {\r\n        this.loading = false\r\n\r\n        if (!this.live && !this.error) {\r\n          helper.notifyAudio(this, document.getElementById('connectionLost'), 'warning', this.$t('notifications.brokerConnectionLost') + '(' + this.title + ' ' + this.$t('chart') + ')')\r\n        }\r\n      });\r\n    },\r\n\r\n    fillChartData(data) {\r\n      let newData = []\r\n\r\n      for (const [key, val] of Object.entries(data.Open)) {\r\n        newData.push({\r\n          t: new Date(Number(key)),\r\n          o: val,\r\n          h: data.High[key],\r\n          l: data.Low[key],\r\n          c: data.Close[key]\r\n        })\r\n      }\r\n\r\n      // to-do: figure out how to use highlights with this type of chart (standard FancyChart way doesn't work - dataset highlights settings are ignored)\r\n\r\n      this.datacollection = {\r\n        datasets: [{\r\n          label: this.title,\r\n          data: newData         \r\n        }],\r\n      }\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.initData();\r\n  }\r\n};\r\n</script>\r\n<style>\r\n</style>"]}]}