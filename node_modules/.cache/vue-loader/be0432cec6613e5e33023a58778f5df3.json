{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/research/patternLab/Alerts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/research/patternLab/Alerts.vue","mtime":1595835860230},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBGYW5jeVRhYmxlIGZyb20gJ0AvY3VzdG9tL2NvbXBvbmVudHMvVGFibGVzL0ZhbmN5VGFibGUnOwppbXBvcnQgQXNzZXRzUGF0dGVybnNQaWNrZXIgZnJvbSAnQC9jdXN0b20vY29tcG9uZW50cy9Bc3NldHNQYXR0ZXJuc1BpY2tlcicKaW1wb3J0IER1YWxSaW5nTG9hZGVyIGZyb20gJ0BiaXQvam9zaGsudnVlLXNwaW5uZXJzLWNzcy5kdWFsLXJpbmctbG9hZGVyJzsKCmltcG9ydCBjb25zdGFudHMgZnJvbSAnQC9jdXN0b20vYXNzZXRzL2pzL2NvbnN0YW50cyc7CmltcG9ydCBoZWxwZXIgZnJvbSAnQC9jdXN0b20vYXNzZXRzL2pzL2hlbHBlcic7CgoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEFzc2V0c1BhdHRlcm5zUGlja2VyLAogICAgRmFuY3lUYWJsZSwKICAgIER1YWxSaW5nTG9hZGVyCiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7ICAgICAKICAgICAgZXJyb3JUaXRsZTogJyAoJyArIHRoaXMuJHQoJ3Jlc2VhcmNoLmFsZXJ0cy50aXRsZScpICsgJykuJywgICAKICAgICAgYWxlcnRzS2V5OiAncmVzZWFyY2gucGF0dGVybkxhYi5hbGVydHMnLAoKICAgICAgYXNzZXRzUGF0dGVybnM6IG51bGwsCiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICBhbGVydHM6IFtdLAoKICAgICAgdGFibGVLZXk6IDAKICAgIH0KICB9LAoKICBjb21wdXRlZDogeyAgICAgICAgCiAgICBhbGVydHNVcmwoKSB7CiAgICAgIHJldHVybiBbIGNvbnN0YW50cy51cmxzLnBhdHRlcm5MYWIuYWxlcnRzIF0KICAgIH0sCiAgICBjb2x1bW5zKCkgewogICAgICByZXR1cm4gdGhpcy4kdCh0aGlzLmFsZXJ0c0tleSArICcuY29sdW1ucycpLmNvbmNhdCh0aGlzLiR0KHRoaXMuYWxlcnRzS2V5ICsgJy5jaGVja2JveENvbHVtbnMnKSkKICAgIH0KICB9LAoKICBtZXRob2RzOiB7CiAgICBpbml0RGF0YSgpIHsKICAgICAgdGhpcy5hc3NldHNQYXR0ZXJucyA9IGhlbHBlci5nZXRBc3NldHNQYXR0ZXJuc1BpY2tlckRhdGEodGhpcy4kc3RvcmUpCiAgICB9LAoKICAgIC8vIGVtaXRlZCBldmVudHMKICAgIGFkZEFsZXJ0KCkgewogICAgICB0aGlzLmFsZXJ0cyA9IFtdCiAgICAgIHRoaXMuYXNzZXRzUGF0dGVybnMgPSBoZWxwZXIuZ2V0QXNzZXRzUGF0dGVybnNQaWNrZXJEYXRhKHRoaXMuJHN0b3JlKSAgICAgICAgCgogICAgICBpZiAodGhpcy5hc3NldHNQYXR0ZXJucykgewogICAgICAgIHRoaXMuYXNzZXRzUGF0dGVybnMuY2hlY2tlZEFzc2V0cy5mb3JFYWNoKGFzc2V0ID0+IAogICAgICAgICAgdGhpcy5hc3NldHNQYXR0ZXJucy5jaGVja2VkUGF0dGVybnMuZm9yRWFjaChwYXR0ZXJuID0+CiAgICAgICAgICAgIHRoaXMuJGh0dHAKICAgICAgICAgICAgLnBvc3QoY29uc3RhbnRzLnVybHMucGF0dGVybkxhYi5hbGVydHMsIHsgcGF0dGVybjogcGF0dGVybi5pZCwgdGlja2VyOiBhc3NldC5pZCB9LCB0aGlzLiRzdG9yZS5nZXRJdGVtKCdoZWFkZXJzJykpCiAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHRoaXMuYWxlcnRzLnB1c2gocmVzcG9uc2UuZGF0YSkpCiAgICAgICAgICAgIC5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgICAgIGlmIChlcnJvci5tZXNzYWdlID09PSBjb25zdGFudHMuc3RyaW5ncy5uZXR3b3JrRXJyb3IpIHsKICAgICAgICAgICAgICAgIGhlbHBlci5ub3RpZnlBdWRpbyh0aGlzLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29ubmVjdGlvbkxvc3QnKSwgJ2RhbmdlcicsIHRoaXMuZXJyb3JUaXRsZSkKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgKSkKICAgICAgfQoKICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZQogICAgICB0aGlzLnNldENoZWNrQWxlcnRzSW50ZXJ2YWwoKQogICAgfSwKICAgIGNoZWNrZWRFbWl0KHJvdykgewogICAgICBpZiAoIXRoaXMuYWxlcnRzLmxlbmd0aCkgewogICAgICAgIHRoaXMuJGh0dHAKICAgICAgICAuZ2V0KGNvbnN0YW50cy51cmxzLnBhdHRlcm5MYWIuYWxlcnRzLCB0aGlzLiRzdG9yZS5nZXRJdGVtKCdoZWFkZXJzJykpCiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuZGF0YS5mb3JFYWNoKGRhdHVtID0+IHRoaXMuYWxlcnRzLnB1c2goZGF0dW0pKSkKICAgICAgICAuY2F0Y2goZXJyb3IgPT4gewogICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgaWYgKGVycm9yLm1lc3NhZ2UgPT09IGNvbnN0YW50cy5zdHJpbmdzLm5ldHdvcmtFcnJvcikgewogICAgICAgICAgICBoZWxwZXIubm90aWZ5QXVkaW8odGhpcywgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Nvbm5lY3Rpb25Mb3N0JyksICdkYW5nZXInLCB0aGlzLmVycm9yVGl0bGUpCiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgICAuZmluYWxseSgoKSA9PiB0aGlzLnB1dEFsZXJ0KHJvdykpCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5wdXRBbGVydChyb3cpCiAgICAgIH0KICAgIH0sCiAgICBwdXRBbGVydChyb3cpIHsKICAgICAgbGV0IHJvd0FsZXJ0cyA9IHRoaXMuYWxlcnRzLmZpbHRlcihhbGVydCA9PiBhbGVydC5wYXR0ZXJuID09PSB0aGlzLmdldElkQnlOYW1lKHRoaXMuYXNzZXRzUGF0dGVybnMgPyB0aGlzLmFzc2V0c1BhdHRlcm5zLnNlbGVjdGVkUGF0dGVybnMgOiBbXSwgKHBhdHRlcm4pID0+IHBhdHRlcm4ubmFtZSwgcm93W3RoaXMuY29sdW1uc1swXS50b0xvd2VyQ2FzZSgpXSkgCiAgICAgICAgICAgICAgICAgICAgJiYgYWxlcnQudGlja2VyID09PSB0aGlzLmdldElkQnlOYW1lKHRoaXMuYXNzZXRzUGF0dGVybnMgPyB0aGlzLmFzc2V0c1BhdHRlcm5zLnNlbGVjdGVkQXNzZXRzIDogW10sIChhc3NldCkgPT4gYXNzZXQuc3ltYm9sLCByb3dbdGhpcy5jb2x1bW5zWzFdLnRvTG93ZXJDYXNlKCldKSkKCiAgICAgIGlmIChyb3dBbGVydHMubGVuZ3RoKSB7CiAgICAgICAgdGhpcy4kaHR0cAogICAgICAgIC5wdXQoY29uc3RhbnRzLnVybHMucGF0dGVybkxhYi5hbGVydCArIHJvd0FsZXJ0c1swXS5pZCwgeyBhcHA6IHJvd1t0aGlzLmNvbHVtbnNbM10udG9Mb3dlckNhc2UoKV0sIGVtYWlsOiByb3dbdGhpcy5jb2x1bW5zWzJdLnRvTG93ZXJDYXNlKCldIH0sIHRoaXMuJHN0b3JlLmdldEl0ZW0oJ2hlYWRlcnMnKSkKICAgICAgICAuY2F0Y2goZXJyb3IgPT4gewogICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgaWYgKGVycm9yLm1lc3NhZ2UgPT09IGNvbnN0YW50cy5zdHJpbmdzLm5ldHdvcmtFcnJvcikgewogICAgICAgICAgICBoZWxwZXIubm90aWZ5QXVkaW8odGhpcywgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Nvbm5lY3Rpb25Mb3N0JyksICdkYW5nZXInLCB0aGlzLmVycm9yVGl0bGUpCiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zb2xlLmxvZyhgJHt0aGlzLiR0KCdzZXJ2ZXJJbmNvbnRpbmVuY3knKX06IENvdWxkbid0IGZpbmQgY2hhbmdlZCBhbGVydCBvbiBzZXJ2ZXIhYCkKICAgICAgfQogICAgfSwKCiAgICBzZXRDaGVja0FsZXJ0c0ludGVydmFsKCkgewogICAgICBsZXQgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiB7IAogICAgICAgIHRoaXMuY2hlY2tBbGVydHMoaW50ZXJ2YWwpCiAgICAgIH0sIGNvbnN0YW50cy5pbnRlcnZhbHMuc2Vjb25kczMgKSAgICAgICAgCiAgICB9LAogICAgY2hlY2tBbGVydHMoaW50ZXJ2YWwpIHsKICAgICAgbGV0IGlkc0RvbmUgPSBbXQoKICAgICAgdGhpcy4kaHR0cAogICAgICAuZ2V0KGNvbnN0YW50cy51cmxzLnBhdHRlcm5MYWIuYWxlcnRzLCB0aGlzLiRzdG9yZS5nZXRJdGVtKCdoZWFkZXJzJykpCiAgICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmRhdGEuZm9yRWFjaChkYXR1bSA9PiB7CiAgICAgICAgaWYgKHRoaXMuYWxlcnRzLm1hcChhbGVydCA9PiBhbGVydC5pZCkuaW5jbHVkZXMoZGF0dW0uaWQpKSB7CiAgICAgICAgICBpZHNEb25lLnB1c2goZGF0dW0uaWQpICAgICAgIAogICAgICAgIH0gICAKICAgICAgfSkpCiAgICAgIC5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgIGlmIChlcnJvci5tZXNzYWdlID09PSBjb25zdGFudHMuc3RyaW5ncy5uZXR3b3JrRXJyb3IpIHsKICAgICAgICAgIGhlbHBlci5ub3RpZnlBdWRpbyh0aGlzLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29ubmVjdGlvbkxvc3QnKSwgJ2RhbmdlcicsIHRoaXMuZXJyb3JUaXRsZSkKICAgICAgICB9CiAgICAgIH0pCiAgICAgIC5maW5hbGx5KCgpID0+IHsKICAgICAgICBpZiAoaWRzRG9uZS5sZW5ndGggPT09IHRoaXMuYWxlcnRzLmxlbmd0aCkgewogICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2UKICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpCiAgICAgICAgICB0aGlzLnRhYmxlS2V5KysKICAgICAgICB9CiAgICAgIH0pCiAgICB9LAogICAgCiAgICByb3dzQ3JlYXRvcihkYXRhKSB7CiAgICAgIGxldCByb3dzID0gW10KCiAgICAgIGRhdGEuZm9yRWFjaChkYXR1bSA9PiB7CiAgICAgICAgbGV0IHBhdHRlcm4gPSB0aGlzLmFzc2V0c1BhdHRlcm5zID8gdGhpcy5nZXRJdGVtQnlJZCh0aGlzLmFzc2V0c1BhdHRlcm5zLnNlbGVjdGVkUGF0dGVybnMsIGRhdHVtLnBhdHRlcm4pIDogbnVsbAogICAgICAgIGxldCBhc3NldCA9IHRoaXMuYXNzZXRzUGF0dGVybnMgPyB0aGlzLmdldEl0ZW1CeUlkKHRoaXMuYXNzZXRzUGF0dGVybnMuc2VsZWN0ZWRBc3NldHMsIGRhdHVtLnRpY2tlcikgOiBudWxsCgogICAgICAgIGlmIChwYXR0ZXJuICYmIGFzc2V0KSB7CiAgICAgICAgICByb3dzLnB1c2goWwogICAgICAgICAgICBwYXR0ZXJuLm5hbWUsICAgICAgICAvLyBQYXR0ZXJuCiAgICAgICAgICAgIGFzc2V0LnN5bWJvbCwgICAgICAgLy8gQXNzZXQKICAgICAgICAgICAgZGF0dW0uZW1haWwsICAvLyBFbWFpbCBub3RpZmljYXRpb24KICAgICAgICAgICAgZGF0dW0uYXBwICAgICAvLyBBcHAgbm90aWZpY2F0aW9uCiAgICAgICAgICBdKQogICAgICAgIH0KICAgICAgfSkKCiAgICAgIHJldHVybiByb3dzCiAgICB9LAoKICAgIGdldEl0ZW1CeUlkKGl0ZW1zLCBpZCkgewogICAgICBsZXQgaXRlbXNGaWx0ZXJlZCA9IGl0ZW1zLmZpbHRlcihpdGVtID0+IGl0ZW0uaWQgPT09IGlkKQogICAgICByZXR1cm4gaXRlbXNGaWx0ZXJlZC5sZW5ndGggPyBpdGVtc0ZpbHRlcmVkWzBdIDogbnVsbAogICAgfSwKICAgIGdldElkQnlOYW1lKGl0ZW1zLCBuYW1lU2VsZWN0b3IsIG5hbWUpIHsKICAgICAgbGV0IGl0ZW1zRmlsdGVyZWQgPSBpdGVtcy5maWx0ZXIoaXRlbSA9PiBuYW1lU2VsZWN0b3IoaXRlbSkgPT09IG5hbWUpCiAgICAgIHJldHVybiBpdGVtc0ZpbHRlcmVkLmxlbmd0aCA/IGl0ZW1zRmlsdGVyZWRbMF0uaWQgOiBudWxsCiAgICB9CiAgfSwKCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuaW5pdERhdGEoKQogIH0KfSAgCg=="},{"version":3,"sources":["Alerts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Alerts.vue","sourceRoot":"src/custom/apps/research/patternLab","sourcesContent":["<template>\r\n  <div class=\"row flex-stretch\">\r\n\r\n    <div class=\"col-lg-3 col-md-12 killflex container\">\r\n      <assets-patterns-picker :title=\"$t('research.patternLab.alerts.title')\"\r\n                              :btnText=\"$t('research.patternLab.alerts.addAlert')\" \r\n                              :class=\"killflex\"\r\n                              :showDatePickers=\"false\"\r\n                              @btnClicked=\"addAlert\" />\r\n    </div>\r\n\r\n    <div class=\"col-lg-9 col-md-12\" style=\"text-align: center\">\r\n      <DualRingLoader v-if=\"loading\" :color=\"'#54f1d2'\" />\r\n      <fancy-table v-else \r\n                  :title=\"$t(alertsKey + '.title')\"\r\n                  :showTitle=\"false\"\r\n                  :apiUrls=\"alertsUrl\"\r\n                  :authorize=\"true\"\r\n                  :rowsCreator=\"rowsCreator\"\r\n                  :columns=\"columns\"\r\n                  :checkboxColumns=\"$t(alertsKey + '.checkboxColumns')\"\r\n                  @checked=\"checkedEmit\"\r\n                  :sortable=\"true\"\r\n                  :filterable=\"true\"\r\n                  :key=\"tableKey\" />\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n<script>\r\n  import FancyTable from '@/custom/components/Tables/FancyTable';\r\n  import AssetsPatternsPicker from '@/custom/components/AssetsPatternsPicker'\r\n  import DualRingLoader from '@bit/joshk.vue-spinners-css.dual-ring-loader';\r\n\r\n  import constants from '@/custom/assets/js/constants';\r\n  import helper from '@/custom/assets/js/helper';\r\n  \r\n  \r\n  export default {\r\n    components: {\r\n      AssetsPatternsPicker,\r\n      FancyTable,\r\n      DualRingLoader\r\n    },\r\n\r\n    data() {\r\n      return {     \r\n        errorTitle: ' (' + this.$t('research.alerts.title') + ').',   \r\n        alertsKey: 'research.patternLab.alerts',\r\n\r\n        assetsPatterns: null,\r\n        loading: false,\r\n        alerts: [],\r\n\r\n        tableKey: 0\r\n      }\r\n    },\r\n\r\n    computed: {        \r\n      alertsUrl() {\r\n        return [ constants.urls.patternLab.alerts ]\r\n      },\r\n      columns() {\r\n        return this.$t(this.alertsKey + '.columns').concat(this.$t(this.alertsKey + '.checkboxColumns'))\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      initData() {\r\n        this.assetsPatterns = helper.getAssetsPatternsPickerData(this.$store)\r\n      },\r\n\r\n      // emited events\r\n      addAlert() {\r\n        this.alerts = []\r\n        this.assetsPatterns = helper.getAssetsPatternsPickerData(this.$store)        \r\n\r\n        if (this.assetsPatterns) {\r\n          this.assetsPatterns.checkedAssets.forEach(asset => \r\n            this.assetsPatterns.checkedPatterns.forEach(pattern =>\r\n              this.$http\r\n              .post(constants.urls.patternLab.alerts, { pattern: pattern.id, ticker: asset.id }, this.$store.getItem('headers'))\r\n              .then(response => this.alerts.push(response.data))\r\n              .catch(error => {\r\n                console.log(error);\r\n                if (error.message === constants.strings.networkError) {\r\n                  helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', this.errorTitle)\r\n                }\r\n              })\r\n          ))\r\n        }\r\n\r\n        this.loading = true\r\n        this.setCheckAlertsInterval()\r\n      },\r\n      checkedEmit(row) {\r\n        if (!this.alerts.length) {\r\n          this.$http\r\n          .get(constants.urls.patternLab.alerts, this.$store.getItem('headers'))\r\n          .then(response => response.data.forEach(datum => this.alerts.push(datum)))\r\n          .catch(error => {\r\n            console.log(error);\r\n            if (error.message === constants.strings.networkError) {\r\n              helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', this.errorTitle)\r\n            }\r\n          })\r\n          .finally(() => this.putAlert(row))\r\n        } else {\r\n          this.putAlert(row)\r\n        }\r\n      },\r\n      putAlert(row) {\r\n        let rowAlerts = this.alerts.filter(alert => alert.pattern === this.getIdByName(this.assetsPatterns ? this.assetsPatterns.selectedPatterns : [], (pattern) => pattern.name, row[this.columns[0].toLowerCase()]) \r\n                      && alert.ticker === this.getIdByName(this.assetsPatterns ? this.assetsPatterns.selectedAssets : [], (asset) => asset.symbol, row[this.columns[1].toLowerCase()]))\r\n\r\n        if (rowAlerts.length) {\r\n          this.$http\r\n          .put(constants.urls.patternLab.alert + rowAlerts[0].id, { app: row[this.columns[3].toLowerCase()], email: row[this.columns[2].toLowerCase()] }, this.$store.getItem('headers'))\r\n          .catch(error => {\r\n            console.log(error);\r\n            if (error.message === constants.strings.networkError) {\r\n              helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', this.errorTitle)\r\n            }\r\n          })\r\n        } else {\r\n          console.log(`${this.$t('serverIncontinency')}: Couldn't find changed alert on server!`)\r\n        }\r\n      },\r\n\r\n      setCheckAlertsInterval() {\r\n        let interval = setInterval(() => { \r\n          this.checkAlerts(interval)\r\n        }, constants.intervals.seconds3 )        \r\n      },\r\n      checkAlerts(interval) {\r\n        let idsDone = []\r\n\r\n        this.$http\r\n        .get(constants.urls.patternLab.alerts, this.$store.getItem('headers'))\r\n        .then(response => response.data.forEach(datum => {\r\n          if (this.alerts.map(alert => alert.id).includes(datum.id)) {\r\n            idsDone.push(datum.id)       \r\n          }   \r\n        }))\r\n        .catch(error => {\r\n          console.log(error);\r\n          if (error.message === constants.strings.networkError) {\r\n            helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', this.errorTitle)\r\n          }\r\n        })\r\n        .finally(() => {\r\n          if (idsDone.length === this.alerts.length) {\r\n            this.loading = false\r\n            clearInterval(interval)\r\n            this.tableKey++\r\n          }\r\n        })\r\n      },\r\n      \r\n      rowsCreator(data) {\r\n        let rows = []\r\n\r\n        data.forEach(datum => {\r\n          let pattern = this.assetsPatterns ? this.getItemById(this.assetsPatterns.selectedPatterns, datum.pattern) : null\r\n          let asset = this.assetsPatterns ? this.getItemById(this.assetsPatterns.selectedAssets, datum.ticker) : null\r\n\r\n          if (pattern && asset) {\r\n            rows.push([\r\n              pattern.name,        // Pattern\r\n              asset.symbol,       // Asset\r\n              datum.email,  // Email notification\r\n              datum.app     // App notification\r\n            ])\r\n          }\r\n        })\r\n\r\n        return rows\r\n      },\r\n\r\n      getItemById(items, id) {\r\n        let itemsFiltered = items.filter(item => item.id === id)\r\n        return itemsFiltered.length ? itemsFiltered[0] : null\r\n      },\r\n      getIdByName(items, nameSelector, name) {\r\n        let itemsFiltered = items.filter(item => nameSelector(item) === name)\r\n        return itemsFiltered.length ? itemsFiltered[0].id : null\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      this.initData()\r\n    }\r\n  }  \r\n</script>\r\n<style>\r\n</style>]"]}]}