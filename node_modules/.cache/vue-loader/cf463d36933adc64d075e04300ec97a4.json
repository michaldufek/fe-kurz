{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/components/SidebarPlugin/SideBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/components/SidebarPlugin/SideBar.vue","mtime":1576496487555},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBTaWRlYmFyTGluayBmcm9tICIuL1NpZGViYXJMaW5rIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgdGl0bGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiQ3lycnVzIEFkdmlzb3J5IgogICAgfSwKICAgIGJhY2tncm91bmRDb2xvcjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICJ2dWUiCiAgICB9LAogICAgYWN0aXZlQ29sb3I6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAic3VjY2VzcyIsCiAgICAgIHZhbGlkYXRvcjogdmFsdWUgPT4gewogICAgICAgIGxldCBhY2NlcHRlZFZhbHVlcyA9IFsKICAgICAgICAgICJwcmltYXJ5IiwKICAgICAgICAgICJpbmZvIiwKICAgICAgICAgICJzdWNjZXNzIiwKICAgICAgICAgICJ3YXJuaW5nIiwKICAgICAgICAgICJkYW5nZXIiCiAgICAgICAgXTsKICAgICAgICByZXR1cm4gYWNjZXB0ZWRWYWx1ZXMuaW5kZXhPZih2YWx1ZSkgIT09IC0xOwogICAgICB9CiAgICB9LAogICAgc2lkZWJhckxpbmtzOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiAoKSA9PiBbXQogICAgfSwKICAgIGF1dG9DbG9zZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9CiAgfSwKICBwcm92aWRlKCkgewogICAgcmV0dXJuIHsKICAgICAgYXV0b0Nsb3NlOiB0aGlzLmF1dG9DbG9zZSwKICAgICAgYWRkTGluazogdGhpcy5hZGRMaW5rLAogICAgICByZW1vdmVMaW5rOiB0aGlzLnJlbW92ZUxpbmsKICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBTaWRlYmFyTGluawogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC8qKgogICAgICogU3R5bGVzIHRvIGFuaW1hdGUgdGhlIGFycm93IG5lYXIgdGhlIGN1cnJlbnQgYWN0aXZlIHNpZGViYXIgbGluawogICAgICogQHJldHVybnMge3t0cmFuc2Zvcm06IHN0cmluZ319CiAgICAgKi8KICAgIGFycm93TW92ZVB4KCkgewogICAgICByZXR1cm4gdGhpcy5saW5rSGVpZ2h0ICogdGhpcy5hY3RpdmVMaW5rSW5kZXg7CiAgICB9LAogICAgc2hvcnRUaXRsZSgpIHsKICAgICAgcmV0dXJuIHRoaXMudGl0bGUuc3BsaXQoJyAnKQogICAgICAgIC5tYXAod29yZCA9PiB3b3JkLmNoYXJBdCgwKSkKICAgICAgICAuam9pbignJykudG9VcHBlckNhc2UoKTsKICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsaW5rSGVpZ2h0OiA2NSwKICAgICAgYWN0aXZlTGlua0luZGV4OiAwLAogICAgICB3aW5kb3dXaWR0aDogMCwKICAgICAgaXNXaW5kb3dzOiBmYWxzZSwKICAgICAgaGFzQXV0b0hlaWdodDogZmFsc2UsCiAgICAgIGxpbmtzOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGZpbmRBY3RpdmVMaW5rKCkgewogICAgICB0aGlzLmxpbmtzLmZvckVhY2goKGxpbmssIGluZGV4KSA9PiB7CiAgICAgICAgaWYgKGxpbmsuaXNBY3RpdmUoKSkgewogICAgICAgICAgdGhpcy5hY3RpdmVMaW5rSW5kZXggPSBpbmRleDsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGFkZExpbmsobGluaykgewogICAgICBjb25zdCBpbmRleCA9IHRoaXMuJHNsb3RzLmxpbmtzLmluZGV4T2YobGluay4kdm5vZGUpOwogICAgICB0aGlzLmxpbmtzLnNwbGljZShpbmRleCwgMCwgbGluayk7CiAgICB9LAogICAgcmVtb3ZlTGluayhsaW5rKSB7CiAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5saW5rcy5pbmRleE9mKGxpbmspOwogICAgICBpZiAoaW5kZXggPiAtMSkgewogICAgICAgIHRoaXMubGlua3Muc3BsaWNlKGluZGV4LCAxKTsKICAgICAgfQogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuJHdhdGNoKCIkcm91dGUiLCB0aGlzLmZpbmRBY3RpdmVMaW5rLCB7CiAgICAgIGltbWVkaWF0ZTogdHJ1ZQogICAgfSk7CiAgfQp9Owo="},{"version":3,"sources":["SideBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SideBar.vue","sourceRoot":"src/components/SidebarPlugin","sourcesContent":["<template>\r\n  <div class=\"sidebar\"\r\n       :data=\"backgroundColor\">\r\n    <!--\r\n            Tip 1: you can change the color of the sidebar's background using: data-background-color=\"white | black | darkblue\"\r\n            Tip 2: you can change the color of the active button using the data-active-color=\"primary | info | success | warning | danger\"\r\n        -->\r\n    <!-- -->\r\n    <div class=\"sidebar-wrapper\" id=\"style-3\">\r\n      <slot>\r\n\r\n      </slot>\r\n      <ul class=\"nav\">\r\n        <!--By default vue-router adds an active class to each route link. This way the links are colored when clicked-->\r\n        <slot name=\"links\">\r\n          <sidebar-link v-for=\"(link,index) in sidebarLinks\"\r\n                        :key=\"index\"\r\n                        :to=\"link.path\"\r\n                        :name=\"link.name\"\r\n                        :icon=\"link.icon\">\r\n          </sidebar-link>\r\n        </slot>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import SidebarLink from \"./SidebarLink\";\r\n\r\n  export default {\r\n    props: {\r\n      title: {\r\n        type: String,\r\n        default: \"Cyrrus Advisory\"\r\n      },\r\n      backgroundColor: {\r\n        type: String,\r\n        default: \"vue\"\r\n      },\r\n      activeColor: {\r\n        type: String,\r\n        default: \"success\",\r\n        validator: value => {\r\n          let acceptedValues = [\r\n            \"primary\",\r\n            \"info\",\r\n            \"success\",\r\n            \"warning\",\r\n            \"danger\"\r\n          ];\r\n          return acceptedValues.indexOf(value) !== -1;\r\n        }\r\n      },\r\n      sidebarLinks: {\r\n        type: Array,\r\n        default: () => []\r\n      },\r\n      autoClose: {\r\n        type: Boolean,\r\n        default: true\r\n      }\r\n    },\r\n    provide() {\r\n      return {\r\n        autoClose: this.autoClose,\r\n        addLink: this.addLink,\r\n        removeLink: this.removeLink\r\n      };\r\n    },\r\n    components: {\r\n      SidebarLink\r\n    },\r\n    computed: {\r\n      /**\r\n       * Styles to animate the arrow near the current active sidebar link\r\n       * @returns {{transform: string}}\r\n       */\r\n      arrowMovePx() {\r\n        return this.linkHeight * this.activeLinkIndex;\r\n      },\r\n      shortTitle() {\r\n        return this.title.split(' ')\r\n          .map(word => word.charAt(0))\r\n          .join('').toUpperCase();\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        linkHeight: 65,\r\n        activeLinkIndex: 0,\r\n        windowWidth: 0,\r\n        isWindows: false,\r\n        hasAutoHeight: false,\r\n        links: []\r\n      };\r\n    },\r\n    methods: {\r\n      findActiveLink() {\r\n        this.links.forEach((link, index) => {\r\n          if (link.isActive()) {\r\n            this.activeLinkIndex = index;\r\n          }\r\n        });\r\n      },\r\n      addLink(link) {\r\n        const index = this.$slots.links.indexOf(link.$vnode);\r\n        this.links.splice(index, 0, link);\r\n      },\r\n      removeLink(link) {\r\n        const index = this.links.indexOf(link);\r\n        if (index > -1) {\r\n          this.links.splice(index, 1);\r\n        }\r\n      }\r\n    },\r\n    mounted() {\r\n      this.$watch(\"$route\", this.findActiveLink, {\r\n        immediate: true\r\n      });\r\n    }\r\n  };\r\n</script>\r\n"]}]}