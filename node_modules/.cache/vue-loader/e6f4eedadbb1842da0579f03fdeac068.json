{"remainingRequest":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/research/StockPickingLab.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/dufek/Documents/gitlab/frs-apps/src/custom/apps/research/StockPickingLab.vue","mtime":1587030366014},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dufek/Documents/gitlab/frs-apps/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQppbWcubm90RXF1YWwgew0KICBmbG9hdDogbGVmdDsgICANCiAgbWFyZ2luLXJpZ2h0OiAxMHB4Ow0KICANCiAgYm9yZGVyLXJhZGl1czogMTByZW07DQp9DQoNCmltZy53YXRjaGxpc3Qgew0KICBib3gtc2hhZG93OiAwcHggMHB4IDEwcHggIzFkOGNmODsNCn0NCg0KaW1nLm1vdXNlT3ZlciB7DQogIGJveC1zaGFkb3c6IDBweCAwcHggMjBweCByZWQ7DQp9DQo="},{"version":3,"sources":["StockPickingLab.vue"],"names":[],"mappingsqmBA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"StockPickingLab.vue","sourceRoot":"src/custom/apps/research","sourcesContent":["<template>\r\n  <div class=\"wrapper\">\r\n    <audio id=\"connectionLost\" src=\"media/connectionLost.mp3\" preload=\"auto\"></audio>\r\n    <div class=\"formblocks\">\r\n\r\n      <!-- symbol/name search -->\r\n      <div class=\"formblock\">\r\n      <p>{{$t('research.stockPickingLab.filters.symbolName')}}</p>\r\n      <base-input alternative\r\n                  type=\"text\"\r\n                  style=\"float: left;  margin-right: 20px\"\r\n                  v-model=\"symbolSearch\"\r\n                  :placeholder=\"$t('research.stockPickingLab.filters.text')\"\r\n                  @keyup.enter=\"symbolSearchEnter\">\r\n      </base-input>\r\n      \r\n      <!-- currencies  -->\r\n      <!-- <img :src=\"notEqualSrc(selectedCurrencyNot)\" \r\n           @click=\"selectCurrencyNot\" \r\n           :title=\"$t('research.stockPickingLab.filters.change') + ' ' + $t('research.stockPickingLab.filters.currency').toLowerCase() + (!selectedCurrencyNot ? ' ' + $t('research.stockPickingLab.filters.not') : '') + ' ' + $t('research.stockPickingLab.filters.equal')\" \r\n           class=\"notEqual\"\r\n           onMouseOver=\"this.classList.add('mouseOver');\"\r\n           onMouseOut=\"this.classList.remove('mouseOver')\">\r\n      <base-dropdown v-if=\"showCurrency\" \r\n                     class=\"dd\" \r\n                     menu-classes=\"dropdown-black\" \r\n                     title-classes=\"btn btn-secondary\" \r\n                     :title=\"currenciesTitle\">\r\n        <ul style=\"list-style-type: none;\">\r\n          <li v-for=\"currency in currencies.filter(el => el !== selectedCurrency)\">            \r\n            <a class=\"dropdown-item\" \r\n               @click=\"selectCurrency(currency)\" \r\n               href=\"#\" \r\n               :title=\"currencyTitle(currency)\">\r\n              {{currency}}\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </base-dropdown>       -->\r\n\r\n      <!-- exchanges -->\r\n      <img :src=\"notEqualSrc(selectedExchangeNot)\"\r\n           @click=\"selectExchangeNot\" \r\n           :title=\"$t('research.stockPickingLab.filters.change') + ' ' + $t('research.stockPickingLab.filters.exchange').toLowerCase() + (!selectedExchangeNot ? ' ' + $t('research.stockPickingLab.filters.not') : '') + ' ' + $t('research.stockPickingLab.filters.equal')\" \r\n           class=\"notEqual\"\r\n           onMouseOver=\"this.classList.add('mouseOver')\"\r\n           onMouseOut=\"this.classList.remove('mouseOver')\">\r\n\r\n      </div>\r\n      <div class=\"formblock\">\r\n      <base-dropdown v-if=\"showExchange\" \r\n                     class=\"dd\" \r\n                     menu-classes=\"dropdown-black\" \r\n                     title-classes=\"btn btn-secondary\" \r\n                     :title=\"exchangesTitle\">\r\n        <ul style=\"list-style-type: none;\">\r\n          <li v-for=\"exchange in exchanges.filter(el => el !== selectedExchange)\">\r\n            <a class=\"dropdown-item\" \r\n               @click=\"selectExchange(exchange)\" \r\n               href=\"#\"\r\n               :title=\"exchangeTitle(exchange)\">\r\n               {{exchange}}\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </base-dropdown>\r\n\r\n      <!-- index -->\r\n      <base-checkbox v-if=\"showIndex\" class=\"chb\" v-model=\"index\">{{$t('research.stockPickingLab.filters.index')}}</base-checkbox>\r\n\r\n      <!-- dividend -->\r\n      <base-checkbox v-if=\"showDividend\" class=\"chb\" v-model=\"dividend\">{{$t('research.stockPickingLab.filters.dividend')}}</base-checkbox>      \r\n\r\n      <!-- sectors -->\r\n      <img :src=\"notEqualSrc(selectedSectorNot)\"\r\n           @click=\"selectSectorNot\" \r\n           :title=\"$t('research.stockPickingLab.filters.change') + ' ' + $t('research.stockPickingLab.filters.sector').toLowerCase() + (!selectedSectorNot ? ' ' + $t('research.stockPickingLab.filters.not') : '') + ' ' + $t('research.stockPickingLab.filters.equal')\" \r\n           class=\"notEqual\"\r\n           onMouseOver=\"this.classList.add('mouseOver')\"\r\n           onMouseOut=\"this.classList.remove('mouseOver')\">\r\n      </div>\r\n      <div class=\"formblock\">\r\n      <base-dropdown v-if=\"showSector\" \r\n                     class=\"dd\" \r\n                     menu-classes=\"dropdown-black\" \r\n                     title-classes=\"btn btn-secondary\" \r\n                     :title=\"sectorsTitle\">\r\n        <ul style=\"list-style-type: none;\">\r\n          <li v-for=\"sector in sectors.filter(el => el !== selectedSector)\">\r\n            <a class=\"dropdown-item\" \r\n               @click=\"selectSector(sector)\" \r\n               href=\"#\"\r\n               :title=\"sectorTitle(sector)\">\r\n               {{$t('research.stockPickingLab.filters.' + (sector === 'all' ? sector : 'sectors.' + sector))}}\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </base-dropdown>\r\n      \r\n      <!-- market price -->\r\n      <div class=\"formblock formblock--centered \">\r\n        <p>{{$t('research.stockPickingLab.filters.marketPrice')}}</p>\r\n        <base-input alternative\r\n                    type=\"text\"\r\n                    style=\"float: left;  margin-right: 10px\"\r\n                    v-model=\"marketPriceGte\"\r\n                    :placeholder=\"$t('number')\"\r\n                    @keyup.enter=\"marketPriceGteEnter\">\r\n        </base-input>\r\n        <p>{{$t('research.stockPickingLab.filters.and')}}</p>\r\n        <base-input alternative\r\n                    type=\"text\"\r\n                    style=\"float: left;\"\r\n                    v-model=\"marketPriceLte\"\r\n                    :placeholder=\"$t('number')\"\r\n                    @keyup.enter=\"marketPriceLteEnter\">\r\n        </base-input>\r\n      </div>\r\n      </div>\r\n      <div class=\"formblock\">\r\n      <!-- watchlist -->\r\n      <img :src=\"watchlistSrc\" \r\n           style=\"float: right; border-radius: 10rem;\"\r\n           @click=\"watchlistDeActivate\" \r\n           :title=\"watchlistActive ? $t('research.stockPickingLab.filters.watchlistDeactivate') : $t('research.stockPickingLab.filters.watchlistActivate')\" \r\n           class=\"watchlist\"\r\n           onMouseOver=\"this.classList.add('mouseOver')\"\r\n           onMouseOut=\"this.classList.remove('mouseOver')\">\r\n     </div>\r\n    </div>\r\n\r\n    <!-- pagination -->\r\n    <div style=\"clear:both;\"></div>\r\n    <div style=\"float: left;margin-top: 20px;\">\r\n      <nav v-if=\"nrOfPages > 1\" aria-label=\"Page navigation\">\r\n        <ul class=\"pagination justify-content-center\">\r\n          <li v-for=\"page in pages\" \r\n              :class=\"[ { 'active': (!isNaN(Number(page)) && Number(page) === activePage), 'disabled': (page === '...') }, 'page-item' ]\">\r\n            <a class=\"page-link\" @click=\"selectPage(page)\" href=\"#\">{{ page }}</a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <DualRingLoader v-if=\"loading\" :color=\"'#54f1d2'\" style=\"width: 80px; height: 80px; position: absolute; top: 40%; left: 45%;\" />\r\n      <div style=\"list-style-type: none;\">\r\n        <div v-for=\"stockData in stocksData\">\r\n          <stock-card :symbol=\"stockData.symbol\"                      \r\n                      :name=\"stockData.name\"\r\n                      :rank=\"stockData.rank\"\r\n                      :stats=\"stockData.statsData\">\r\n          </stock-card>\r\n        </div>\r\n      </div>\r\n      <nav v-if=\"nrOfPages > 1\" aria-label=\"Page navigation\">\r\n        <ul class=\"pagination justify-content-center\">\r\n          <li v-for=\"page in pages\" \r\n              :class=\"[ { 'active': (!isNaN(Number(page)) && Number(page) === activePage), 'disabled': (page === '...') }, 'page-item' ]\">\r\n            <a class=\"page-link\" @click=\"selectPage(page)\" href=\"#\">{{ page }}</a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import { BaseRadio } from \"@/components\";\r\n  import DualRingLoader from '@bit/joshk.vue-spinners-css.dual-ring-loader';\r\n  import StockCard from '@/custom/components/Cards/StockCard.vue';\r\n  \r\n  import constants from '@/custom/assets/js/constants';\r\n  import helper from '@/custom/assets/js/helper';\r\n  \r\n\r\n  export default {\r\n    name: \"filters\",\r\n    components: {\r\n      BaseRadio,\r\n      DualRingLoader,\r\n      StockCard\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        stocksData: [],\r\n        loading: false,\r\n        error: false,\r\n        loadStocksDataTimer: null,\r\n        activePage: 1,\r\n        nrOfPages: 1,\r\n\r\n        // filters\r\n        symbolSearch: null,\r\n        // selectedCurrency: null,\r\n        // selectedCurrencyNot: false,\r\n        selectedExchange: null,\r\n        selectedExchangeNot: false,\r\n        selectedSector: null,      \r\n        selectedSectorNot: false,      \r\n        index: false,\r\n        dividend: false,\r\n        marketPriceGte: null,\r\n        marketPriceLte: null,\r\n        watchlistActive: false\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      notEqualSrc(notEqual) {\r\n        return notEqual ? require('@/custom/assets/img/not-equal.png') : require('@/custom/assets/img/equal.png')\r\n      },\r\n\r\n      // initializing\r\n      initSelectors() {\r\n        // if (this.selectedCurrency && !('currency' in localStorage)) {\r\n        //   localStorage.setItem('currency', this.selectedCurrency)\r\n        // } else {\r\n        //   this.selectedCurrency = localStorage.currency\r\n        // }\r\n        // if (!('currencyNot' in localStorage)) {\r\n        //   localStorage.setItem('currencyNot', this.selectedCurrencyNot)\r\n        // }\r\n        // this.selectedCurrencyNot = JSON.parse(localStorage.currencyNot)\r\n\r\n        if (this.selectedExchange && !('exchange' in localStorage)) {\r\n          localStorage.setItem('exchange', this.selectedExchange)\r\n        } else {\r\n          this.selectedExchange = localStorage.exchange\r\n        }\r\n        if (!('exchangeNot' in localStorage)) {\r\n          localStorage.setItem('exchangeNot', this.selectedExchangeNot)\r\n        }\r\n        this.selectedExchangeNot = JSON.parse(localStorage.exchangeNot)\r\n\r\n        if (this.selectedSector && !('sector' in localStorage)) {\r\n          localStorage.setItem('sector', this.selectedSector)\r\n        } else {\r\n          this.selectedSector = localStorage.sector\r\n        }\r\n        if (!('sectorNot' in localStorage)) {\r\n          localStorage.setItem('sectorNot', this.selectedSectorNot)\r\n        }\r\n        this.selectedSectorNot = JSON.parse(localStorage.sectorNot)\r\n\r\n        if (!('index' in localStorage)) {\r\n          localStorage.setItem('index', this.index)\r\n        } else {\r\n          this.index = JSON.parse(localStorage.index)\r\n        }\r\n\r\n        if (!('dividend' in localStorage)) {\r\n          localStorage.setItem('dividend', this.dividend)\r\n        } else {\r\n          this.dividend = JSON.parse(localStorage.dividend)\r\n        }        \r\n\r\n        if ('watchlistActive' in localStorage) {\r\n          this.watchlistActive = JSON.parse(localStorage.watchlistActive)\r\n        }        \r\n      },\r\n\r\n      initData(resetPage=true) {\r\n        if (resetPage) {\r\n          this.activePage = 1\r\n        }\r\n\r\n        this.loadStocksData();\r\n        \r\n        if (this.loadStocksDataTimer) {\r\n          clearInterval(this.loadStocksDataTimer);\r\n        }\r\n        \r\n        this.loadStocksDataTimer = setInterval(() => { \r\n          this.loadStocksData();\r\n        }, constants.intervals.dataReload );\r\n      },\r\n\r\n      // data loading\r\n      loadStocksData() {\r\n        this.stocksData = []\r\n        this.loading = true\r\n        this.error = false\r\n\r\n        this.$http\r\n        .get(constants.urls.tickerSP.base + helper.encodeQueryData(this.getQueryData()))\r\n        .then(response => {\r\n          this.nrOfPages = Math.ceil(response.data.count / constants.maxRows)\r\n\r\n          let i = ((this.activePage - 1) * constants.maxRows) + 1\r\n          response.data.results.forEach(result => {\r\n            this.stocksData.push({\r\n              symbol: result.symbol,              \r\n              name: result.info && result.info.shortName ? result.info.shortName : null,\r\n              rank: i++,\r\n              statsData: [\r\n                result.compute ? Number(result.compute.cagr) + ' %' : null,\r\n                result.compute ? Number(result.compute.sharpe_ratio) + ' &nbsp;&nbsp;' : null,\r\n                result.compute ? Number(result.compute.stddev) + ' &nbsp;&nbsp;' : null,                \r\n                result.compute ? Number(result.compute.recovery_dd_time) + ' &nbsp;&nbsp;' : null,\r\n                result.compute ? Number(result.compute.max_dd) + ' %' : null,\r\n                result.compute ? Number(result.compute.scorep) * 100 + ' %' : null\r\n              ]\r\n            });\r\n          }); \r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          this.error = true\r\n\r\n          if (error.message === constants.strings.networkError) {\r\n            helper.notifyAudio(this, document.getElementById('connectionLost'), 'danger', this.$t('notifications.beConnectionLost') + '(' + this.$t('sidebar.stockPickingLab') + ')')\r\n          }\r\n        })\r\n        .finally(() => this.loading = false);\r\n      },\r\n\r\n      getQueryData() {\r\n        let data = {}\r\n\r\n        if (this.watchlistActive && 'watchlist' in localStorage) {\r\n          let watchlist = JSON.parse(localStorage.watchlist)\r\n          data['symbol__in'] = watchlist.join(',')\r\n        }\r\n\r\n        data['page'] = this.activePage\r\n        data['ordering'] = 'score_pcento'\r\n        // data['index'] = this.index\r\n        data['search'] = this.symbolSearch\r\n        data['info__regularMarketPrice__gte'] = this.marketPriceGte\r\n        data['info__regularMarketPrice__lte'] = this.marketPriceLte\r\n\r\n        if (this.dividend) {          \r\n          data['info__dividendDate__is_null'] = false\r\n        }\r\n\r\n        // if (this.selectedCurrencyNot) {\r\n        //   data['info__currency__exclude'] = this.selectedCurrency\r\n        // } else {\r\n        //   data['info__currency'] = this.selectedCurrency\r\n        // }\r\n        if (this.selectedExchangeNot) {\r\n          data['info__exchange__exclude'] = this.selectedExchange\r\n        } else {\r\n          data['info__exchange'] = this.selectedExchange\r\n        }\r\n        if (this.selectedSectorNot) {\r\n          data['sector__name__exclude'] = this.selectedSector\r\n        } else {\r\n          data['sector__name'] = this.selectedSector\r\n        }\r\n        \r\n        return data\r\n      },\r\n\r\n      // dropdowns selections\r\n      // selectCurrency(currency) {\r\n      //   if (currency === this.$t('research.stockPickingLab.filters.all')) {\r\n      //     this.selectedCurrency = null\r\n      //     localStorage.removeItem('currency')\r\n\r\n      //     this.selectedCurrencyNot = false\r\n      //     localStorage.setItem('currencyNot', this.selectedCurrencyNot)\r\n      //   } else {\r\n      //     this.selectedCurrency = currency\r\n      //     localStorage.setItem('currency', currency)\r\n      //   }\r\n\r\n      //   this.initData()\r\n      // },\r\n      // selectCurrencyNot() {\r\n      //   this.selectedCurrencyNot = !this.selectedCurrencyNot\r\n      //   localStorage.setItem('currencyNot', this.selectedCurrencyNot)\r\n\r\n      //   if (this.selectedCurrency) {\r\n      //     this.initData()\r\n      //   }\r\n      // },\r\n      // currencyTitle(currency) {\r\n      //   return currency === this.$t('research.stockPickingLab.filters.all') \r\n      //          ? this.$t('research.stockPickingLab.filters.clearSelection') \r\n      //          : this.$t('research.stockPickingLab.filters.currency') \r\n      //             + (this.selectedCurrencyNot ? ' ' + this.$t('research.stockPickingLab.filters.not') : '') \r\n      //             + ' ' + this.$t('research.stockPickingLab.filters.equal')\r\n      // },      \r\n\r\n      selectExchange(exchange) {\r\n        if (exchange === this.$t('research.stockPickingLab.filters.all')) {\r\n          this.selectedExchange = null\r\n          localStorage.removeItem('exchange')\r\n\r\n          this.selectedExchangeNot = false          \r\n          localStorage.setItem('exchangeNot', this.selectedExchangeNot)\r\n        } else {\r\n          this.selectedExchange = exchange\r\n          localStorage.setItem('exchange', exchange)\r\n        }\r\n        if (this.selectedExchangeNot !== exchange) {\r\n          this.selectedExchangeNot = null\r\n        }\r\n\r\n        this.initData()\r\n      },\r\n      selectExchangeNot() {\r\n        this.selectedExchangeNot = !this.selectedExchangeNot\r\n        localStorage.setItem('exchangeNot', this.selectedExchangeNot)\r\n\r\n        if (this.selectedExchange) {\r\n          this.initData()\r\n        }\r\n      },\r\n      exchangeTitle(exchange) {\r\n        return exchange === this.$t('research.stockPickingLab.filters.all') \r\n               ? this.$t('research.stockPickingLab.filters.clearSelection') \r\n               : this.$t('research.stockPickingLab.filters.exchange') \r\n                  + (this.selectedExchangeNot ? ' ' + this.$t('research.stockPickingLab.filters.not') : '') \r\n                  + ' ' + this.$t('research.stockPickingLab.filters.equal')\r\n      },      \r\n\r\n      selectSector(sector) {\r\n        if (sector === constants.strings.all) {\r\n          this.selectedSector = null\r\n          localStorage.removeItem('sector')\r\n\r\n          this.selectedSectorNot = false\r\n          localStorage.setItem('sectorNot', this.selectedSectorNot)          \r\n        } else {\r\n          this.selectedSector = sector\r\n          localStorage.setItem('sector', sector)\r\n        }\r\n        if (this.selectedSectorNot !== sector) {\r\n          this.selectedSectorNot = null\r\n        }\r\n\r\n        this.initData()\r\n      },\r\n      selectSectorNot() {\r\n        this.selectedSectorNot = !this.selectedSectorNot\r\n        localStorage.setItem('sectorNot', this.selectedSectorNot)\r\n\r\n        if (this.selectedSector) {\r\n          this.initData()\r\n        }\r\n      },\r\n      sectorTitle(sector) {\r\n        return sector === constants.strings.all\r\n               ? this.$t('research.stockPickingLab.filters.clearSelection') \r\n               : this.$t('research.stockPickingLab.filters.sector') \r\n                  + (this.selectedSectorNot ? ' ' + this.$t('research.stockPickingLab.filters.not') : '') \r\n                  + ' ' + this.$t('research.stockPickingLab.filters.equal')\r\n      },    \r\n\r\n      symbolSearchEnter() {\r\n        this.initData()\r\n      },\r\n      \r\n      marketPriceGteEnter() {\r\n        if (this.marketPriceLte && this.marketPriceGte > this.marketPriceLte) {\r\n          this.marketPriceGte = this.marketPriceLte\r\n        }\r\n\r\n        this.initData()\r\n      },\r\n      marketPriceLteEnter() {\r\n        if (this.marketPriceGte && this.marketPriceLte < this.marketPriceGte) {\r\n          this.marketPriceLte = this.marketPriceGte\r\n        }   \r\n        \r\n        this.initData()\r\n      },\r\n\r\n      watchlistDeActivate() {\r\n        this.watchlistActive = !this.watchlistActive\r\n        this.initData()\r\n      },\r\n\r\n      selectPage(page) {\r\n        if (page === this.$t('paging.previous')) {\r\n          this.activePage--\r\n        } else if (page === this.$t('paging.next')) {\r\n          this.activePage++\r\n        } else {\r\n          this.activePage = page\r\n        }\r\n      }\r\n    }, \r\n\r\n    computed: {\r\n      watchlistSrc() {\r\n        return this.watchlistActive ? require('@/custom/assets/img/favorite-on.png') : require('@/custom/assets/img/favorite-off.png')\r\n      },\r\n\r\n      // showCurrency() {\r\n      //   if (!('currencyEnabled' in localStorage)) {\r\n      //     localStorage.setItem('currencyEnabled', true)\r\n      //   } \r\n      //   return JSON.parse(localStorage.currencyEnabled)\r\n      // },\r\n      showExchange() {\r\n        if (!('exchangeEnabled' in localStorage)) {\r\n          localStorage.setItem('exchangeEnabled', true)\r\n        } \r\n        return JSON.parse(localStorage.exchangeEnabled)\r\n      },\r\n      showIndex() {\r\n        if (!('indexEnabled' in localStorage)) {\r\n          localStorage.setItem('indexEnabled', true)\r\n        } \r\n        return JSON.parse(localStorage.indexEnabled)\r\n      },\r\n      showDividend() {\r\n        if (!('dividendEnabled' in localStorage)) {\r\n          localStorage.setItem('dividendEnabled', true)\r\n        } \r\n        return JSON.parse(localStorage.dividendEnabled)\r\n      },\r\n      showSector() {\r\n        if (!('sectorEnabled' in localStorage)) {\r\n          localStorage.setItem('sectorEnabled', true)\r\n        } \r\n        return JSON.parse(localStorage.sectorEnabled)\r\n      },\r\n\r\n      // currencies() {\r\n      //   let currencies = []\r\n      //   if (this.selectedCurrency) {\r\n      //     currencies = [this.$t('research.stockPickingLab.filters.all')]\r\n      //   }\r\n      //   return currencies.concat(this.$t('research.stockPickingLab.filters.currencies'))\r\n      // },\r\n      // currenciesTitle() {\r\n      //   return this.selectedCurrency ? this.selectedCurrency : this.$t('research.stockPickingLab.filters.currency')                \r\n      // },\r\n      exchanges() {\r\n        let exchanges = []\r\n        if (this.selectedExchange) {\r\n          exchanges = [this.$t('research.stockPickingLab.filters.all')]\r\n        }\r\n        return exchanges.concat(this.$t('research.stockPickingLab.filters.exchanges'))\r\n      },\r\n      exchangesTitle() {\r\n        return this.selectedExchange ? this.selectedExchange : this.$t('research.stockPickingLab.filters.exchange')                \r\n      },\r\n      riskProfileTitle() {\r\n        return this.selectedRiskProfile \r\n                ? (this.selectedRiskProfileNot ? '!= ' : '') + this.selectedRiskProfile\r\n                : this.$t('research.stockPickingLab.filters.riskProfile') \r\n               \r\n      },\r\n      sectors() {\r\n        let sectors = []\r\n        if (this.selectedSector) {\r\n          sectors = [constants.strings.all]\r\n        }\r\n        return sectors.concat(Object.keys(this.$t('research.stockPickingLab.filters.sectors')))\r\n      },\r\n      sectorsTitle() {\r\n        return this.selectedSector ? this.selectedSector : this.$t('research.stockPickingLab.filters.sector')                \r\n      },\r\n\r\n      pages() {\r\n        let pages = []\r\n\r\n        if (this.activePage !== 1) {\r\n          pages = pages.concat([ this.$t('paging.previous') ])\r\n        }\r\n\r\n        pages = pages.concat([ 1 ])\r\n        if (this.activePage > 3) {\r\n          pages = pages.concat([ constants.strings.etc ])\r\n        }\r\n        if (this.activePage !== 1 && this.activePage !== this.nrOfPages) {\r\n          if (this.activePage !== 2) {\r\n            pages = pages.concat([ this.activePage - 1 ])\r\n          }\r\n          pages = pages.concat([ this.activePage ])\r\n          if (this.activePage !== this.nrOfPages - 1) {\r\n            pages = pages.concat([ this.activePage + 1 ])\r\n          }\r\n        }\r\n        if (this.activePage < this.nrOfPages - 2) {\r\n          pages = pages.concat([ constants.strings.etc ])\r\n        } \r\n\r\n        pages = pages.concat([ this.nrOfPages ])  \r\n        if (this.activePage !== this.nrOfPages) {\r\n          pages = pages.concat([ this.$t('paging.next') ])\r\n        }\r\n\r\n        return pages\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      this.initSelectors()\r\n      this.initData();\r\n    },\r\n\r\n    watch: {\r\n      index(val) {\r\n        localStorage.index = val\r\n      },\r\n      dividend(val) {\r\n        localStorage.dividend = val\r\n        this.initData()\r\n      },\r\n      activePage(val) {\r\n        this.initData(false)\r\n      },\r\n      watchlistActive(val) {\r\n        localStorage.watchlistActive = val        \r\n      }\r\n    }\r\n  };\r\n</script>\r\n<style>\r\nimg.notEqual {\r\n  float: left;   \r\n  margin-right: 10px;\r\n  \r\n  border-radius: 10rem;\r\n}\r\n\r\nimg.watchlist {\r\n  box-shadow: 0px 0px 10px #1d8cf8;\r\n}\r\n\r\nimg.mouseOver {\r\n  box-shadow: 0px 0px 20px red;\r\n}\r\n</style>"]}]}